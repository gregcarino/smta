/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "diploma/admin/route/create/Component-preload",
	"modules": {
		"diploma/admin/route/create/view/Main.view.xml": "<mvc:View \n    controllerName=\"diploma.admin.route.create.controller.Main\"\n    xmlns:mvc=\"sap.ui.core.mvc\"\n    xmlns:core=\"sap.ui.core\"\n\txmlns:fb=\"sap.ui.comp.filterbar\"\n    xmlns:layout=\"sap.ui.layout\"\n\txmlns:form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<App id=\"appRouteCreate\">\n\t\t<Page id=\"pagRouteCreate\"\n\t\t    title=\"{i18n>title}\"\n\t\t\tnavButtonPress=\"onNavBack\"\n\t\t\tshowNavButton=\"true\">\n\t\t\t<layout:DynamicSideContent id=\"dscMain\" \n\t\t\t    containerQuery=\"true\" \n\t\t\t    sideContentFallDown=\"BelowM\" \n\t\t\t    sideContentPosition=\"Begin\"\n\t\t\t    breakpointChanged=\"onBreakpointChange\">\n\t\t\t    <layout:mainContent>\n\t\t\t\t\t<core:HTML id=\"map\" \n\t\t\t\t\t    content=\"&lt;div style=&quot;width:100%;height:100%&quot; /&gt;\"/>\n\t\t\t\t</layout:mainContent>\n    \t\t\t<layout:sideContent>\n    \t\t\t\t<Panel>\n    \t\t\t\t    <Label text=\"{i18n>routeName}\" />\n    \t\t\t\t    <Input id=\"inpRouteName\" value=\"{view>/routeName}\" valueLiveUpdate=\"true\" />\n    \t\t\t\t    <List id=\"lstWaypoints\"\n    \t\t\t\t        items=\"{view>/waypoints}\" \n    \t\t\t\t        mode=\"SingleSelectLeft\" \n    \t\t\t\t        selectionChange=\"onListSelectionChange\">\n    \t\t\t\t        <headerToolbar>\n    \t\t\t\t            <OverflowToolbar id=\"tlbWaypoints\">\n    \t\t\t\t                <Title text=\"{i18n>waypointsTitle}\"/>\n    \t\t\t\t                <ToolbarSpacer />\n    \t\t\t\t                <OverflowToolbarButton id=\"btnWaypointRemove\" \n    \t\t\t\t                    press=\"onRemoveWaypoint\"\n    \t\t\t\t                    text=\"{i18n>waypointRemove}\"\n    \t\t\t\t                    enabled=\"{view>/selected}\"\n    \t\t\t\t                    tooltip=\"{i18n>waypointRemoveTooltip}\" \n    \t\t\t\t                    icon=\"sap-icon://delete\"/>\n    \t\t\t\t                <OverflowToolbarButton id=\"btnWaypointAdd\" \n    \t\t\t\t                    press=\"onAddWaypoint\"\n    \t\t\t\t                    text=\"{i18n>waypointAdd}\"\n    \t\t\t\t                    enabled=\"{= 11 > ${view>/waypointCount} }\"\n    \t\t\t\t                    tooltip=\"{i18n>waypointAddTooltip}\" \n    \t\t\t\t                    icon=\"sap-icon://add\">\n                            \t\t\t<layoutData>\n                            \t\t\t\t<OverflowToolbarLayoutData priority=\"NeverOverflow\" />\n                            \t\t\t</layoutData>\n    \t\t\t\t                </OverflowToolbarButton>\n    \t\t\t\t                <OverflowToolbarButton id=\"btnWaypointUp\" \n    \t\t\t\t                    press=\"onMoveWaypointUp\"\n    \t\t\t\t                    text=\"{i18n>waypointMoveUp}\"\n    \t\t\t\t                    enabled=\"{view>/selected}\"\n    \t\t\t\t                    tooltip=\"{i18n>waypointMoveUpTooltip}\" \n    \t\t\t\t                    icon=\"sap-icon://navigation-up-arrow\"/>\n    \t\t\t\t                <OverflowToolbarButton id=\"btnWaypointDown\" \n    \t\t\t\t                    press=\"onMoveWaypointDown\"\n    \t\t\t\t                    tooltip=\"{i18n>waypointMoveDownTooltip}\"\n    \t\t\t\t                    enabled=\"{view>/selected}\"\n    \t\t\t\t                    text=\"{i18n>waypointMoveDown}\"\n    \t\t\t\t                    icon=\"sap-icon://navigation-down-arrow\"/>\n    \t\t\t\t            </OverflowToolbar>\n    \t\t\t\t        </headerToolbar>\n    \t\t\t\t        <items>\n    \t\t\t\t            <StandardListItem title=\"{view>name}\"/>\n    \t\t\t\t        </items>\n    \t\t\t\t    </List>\n    \t\t\t\t</Panel>\n    \t\t\t</layout:sideContent>\n\t\t\t</layout:DynamicSideContent>\n\t\t\t\n\t\t\t<footer>\n\t\t\t    <Toolbar id=\"tlbMain\">\n\t\t\t        <Button id=\"btnManageLocations\" \n\t\t\t            tooltip=\"{i18n>tooltipManageLocations}\"\n\t\t\t            text=\"{i18n>manageLocations}\"\n\t\t\t            press=\"openLocationDialog\"/>\n\t\t\t        <Button id=\"btnShowMap\" \n\t\t\t            tooltip=\"{i18n>tooltipShowMap}\" \n\t\t\t            text=\"{i18n>showMap}\" \n\t\t\t            visible=\"{view>/toggleMapVisible}\" \n\t\t\t            press=\"onShowMap\"/>\n\t\t\t        <Button id=\"btnShowDetails\" \n\t\t\t            tooltip=\"{i18n>tooltipShowDetails}\" \n\t\t\t            text=\"{i18n>showDetails}\" \n\t\t\t            visible=\"{view>/toggleDetailsVisible}\" \n\t\t\t            press=\"onShowDetails\"/>\n\t\t\t        <ToolbarSpacer />\n\t\t\t        <Button id=\"btnSave\" \n\t\t\t            tooltip=\"{i18n>tooltipSave}\" \n\t\t\t            text=\"{i18n>save}\" \n\t\t\t            type=\"Accept\"\n\t\t\t            visible=\"{= ${view>/waypointCount} > 1 &amp;&amp; ${view>/routeName} !== '' }\" \n\t\t\t            press=\"onSaveRoute\"/>\n\t\t\t    </Toolbar>\n\t\t\t</footer>\n\t\t</Page>\n\t\t<dependents>\n\t\t    <core:Fragment fragmentName=\"diploma.admin.route.create.view.LocationValueHelp\" type=\"XML\" />\n\t\t    <core:Fragment fragmentName=\"diploma.admin.route.create.view.LocationManagement\" type=\"XML\" />\n\t\t</dependents>\n\t</App>\n</mvc:View>",
		"diploma/admin/route/create/view/LocationValueHelp.fragment.xml": "<core:FragmentDefinition \n    xmlns:core=\"sap.ui.core\" \n    xmlns:form=\"sap.ui.layout.form\"\n    xmlns=\"sap.m\">\n\t<Dialog id=\"vhdLocation\"\n\t    contentHeight=\"75%\"\n\t\tcontentWidth=\"20rem\" \n\t\tstretch=\"{device>/system/phone}\"\n\t    title=\"{i18n>locations}\" >\n\t    <VBox>\n\t        <Toolbar id=\"tlbLocationMainSearch\">\n\t            <SearchField id=\"seaLocationNameSearch\" search=\"onSearchLocationMain\"/>\n\t            <ToolbarSpacer/>\n\t            <Button id=\"btnLocationAdvancedSearch\" \n\t                type=\"Transparent\"\n\t                text=\"{= ${view>/locationAdvancedSearch} ? ${i18n>hideAdvanced} : ${i18n>showAdvanced} }\"\n\t                press=\"onToggleAdvancedSearch\"/>\n\t        </Toolbar>\n\t        <Panel visible=\"{view>/locationAdvancedSearch}\" class=\"sapUiNoContentPadding\">\n\t            <form:SimpleForm id=\"sfmAdvancedLocation\"\n        \t\t\tmaxContainerCols=\"2\"\n        \t\t\teditable=\"true\"\n        \t\t\tlayout=\"ResponsiveGridLayout\"\n        \t\t\tlabelSpanL=\"4\"\n        \t\t\tlabelSpanM=\"4\"\n        \t\t\temptySpanL=\"0\"\n        \t\t\temptySpanM=\"0\"\n        \t\t\tcolumnsL=\"2\"\n        \t\t\tcolumnsM=\"2\"\n        \t\t\tclass=\"editableForm\">\n        \t\t\t<form:content>\n        \t\t\t    <Label text=\"{i18n>locationCountry}\"/>\n\t                    <SearchField id=\"seaLocationCountrySearch\" search=\"onSearchLocationMain\"/>\n        \t\t\t    <Label text=\"{i18n>locationRegion}\"/>\n\t                    <SearchField id=\"seaLocationRegionSearch\" search=\"onSearchLocationMain\"/>\n    \t\t\t    </form:content>\n    \t\t    </form:SimpleForm>\n\t        </Panel>\n\t        <Table id=\"tblLocationSearchMain\"\n\t            growing=\"true\"\n\t            items=\"{path: '/Locations', sorter: {path: 'name'}}\">\n\t            <columns>\n\t                <Column><Label text=\"{i18n>locationName}\"/></Column>\n\t                <Column><Label text=\"{i18n>locationCountry}\"/></Column>\n\t                <Column><Label text=\"{i18n>locationRegion}\"/></Column>\n\t            </columns>\n\t            <items>\n\t                <ColumnListItem type=\"Active\" press=\"onLocationAdded\">\n\t                    <cells>\n\t                        <Text text=\"{name}\"/>\n\t                        <Text text=\"{country}\"/>\n\t                        <Text text=\"{region}\"/>\n\t                    </cells>\n\t                </ColumnListItem>\n\t            </items>\n\t        </Table>\n\t    </VBox>\n\t    <endButton>\n\t        <Button text=\"{i18n>cancel}\" press=\"onLocationMainClose\"/>\n\t    </endButton>\n\t</Dialog>\n</core:FragmentDefinition>",
		"diploma/admin/route/create/view/LocationManagement.fragment.xml": "<core:FragmentDefinition \n    xmlns:core=\"sap.ui.core\" \n    xmlns:l=\"sap.ui.layout\"\n    xmlns:form=\"sap.ui.layout.form\"\n\txmlns:u=\"sap.ui.unified\"\n    xmlns=\"sap.m\">\n    \n\t<Dialog id=\"dialogLocation\" \n\t    title=\"{i18n>locationTitle}\" \n\t    busyIndicatorDelay=\"500\" \n\t\ttype=\"Standard\" \n\t\tcontentWidth=\"20rem\" \n\t\tcontentHeight=\"75%\"\n\t\tstretch=\"{device>/system/phone}\">\n\t\t<content>\n\t\t\t<IconTabBar id=\"itbLocations\" \n\t\t\t    expandable=\"false\" \n\t\t\t    expanded=\"true\">\n\t\t\t\t<items>\n\t\t\t\t\t<IconTabFilter id=\"icfCreateLocation\" \n\t\t\t\t\t    icon=\"sap-icon://create\" \n\t\t\t\t\t    text=\"{i18n>tabCreateLocation}\" \n\t\t\t\t\t    iconColor=\"Positive\">\n\t\t\t\t\t    <Panel>\n    \t\t\t\t\t\t<Label text=\"{i18n>locationName}\" id=\"lblLocationName\" />\n    \t\t\t\t\t\t<Input width=\"100%\" id=\"locationName\" />\n    \t\t\t\t\t\t    \n    \t\t\t\t\t\t<Label text=\"{i18n>locationCountry}\" id=\"lblLocationCountry\" />\n    \t\t\t\t\t\t<Input width=\"100%\" id=\"locationCountry\" />\n    \t\t\t\t\t\t    \n    \t\t\t\t\t\t<Label text=\"{i18n>locationRegion}\" id=\"lblLocationRegion\" />\n    \t\t\t\t\t\t<Input width=\"100%\" id=\"locationRegion\" />\n    \t\t\t\t\t\t    \n    \t\t\t\t\t\t<Label text=\"{i18n>locationLat}\" id=\"lblLocationLat\" />\n    \t\t\t\t\t\t<Input width=\"100%\" id=\"locationLat\" type=\"Number\" />\n    \t\t\t\t\t\t    \n    \t\t\t\t\t\t<Label text=\"{i18n>locationLng}\" id=\"lblLocationLng\" />\n    \t\t\t\t\t\t<Input width=\"100%\" id=\"locationLng\" type=\"Number\" />\n    \t\t\t\t\t\t    \n    \t\t\t\t\t\t<Button id=\"btnLocationCreateAccept\" \n    \t\t\t\t\t\t    text=\"{i18n>create}\" \n    \t\t\t\t\t\t    type=\"Accept\" \n    \t\t\t\t\t\t    press=\"createLocation\"/>\n\t\t\t\t\t    </Panel>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<IconTabFilter id=\"itfDeleteLocation\" \n\t\t\t\t\t    icon=\"sap-icon://delete\" \n\t\t\t\t\t    text=\"{i18n>tabDeleteLocation}\" \n\t\t\t\t\t    iconColor=\"Negative\">\n\t\t\t\t\t\t<List id=\"locationList\" \n\t\t\t\t\t\t    growing=\"true\"\n\t\t\t\t\t\t    mode=\"Delete\" delete=\"deleteLocation\"\n\t\t\t\t\t\t\titems=\"{path: '/Locations', sorter: { path: 'name', descending: false } }\" >\n\t\t\t\t\t\t    <headerToolbar>\n\t\t\t\t\t\t        <Toolbar id=\"tlbLocationDelete\">\n\t\t\t\t\t\t            <Title text=\"{i18n>locations}\" />\n\t\t\t\t\t\t            <ToolbarSpacer/>\n\t\t\t\t\t\t            <SearchField id=\"seaLocationsDelete\" \n\t\t\t\t\t\t                width=\"50%\"\n\t\t\t\t\t\t                search=\"onLocationDeleteSearch\" />\n\t\t\t\t\t\t        </Toolbar>\n\t\t\t\t\t\t    </headerToolbar>\n\t\t\t\t\t\t\t<StandardListItem title=\"{name}\" info=\"{\n\t\t\t\t\t\t\t    parts: [{path: 'country'}, {path: 'region'}],\n\t\t\t\t\t\t\t    formatter: '.formatLocationInfo'\n\t\t\t\t\t        }\"/>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<IconTabFilter id=\"itfUpload\"\n\t\t\t\t\t    icon=\"sap-icon://upload\" \n\t\t\t\t\t    text=\"{i18n>tabUploadLocations}\" \n\t\t\t\t\t    iconColor=\"Default\">\n\t\t\t\t\t\t<Panel>\n\t\t\t\t\t\t    <l:VerticalLayout>\n    \t\t\t\t\t\t    <Label id=\"lblCsvFile\" text=\"{i18n>csvFile}\"/>\n        \t\t\t\t\t\t<u:FileUploader id=\"locationUploader\" \n        \t\t\t\t\t\t    tooltip=\"{i18n>locationUploadTooltip}\" \n        \t\t\t\t\t\t\tuploadComplete=\"onLocationUploadComplete\" \n        \t\t\t\t\t\t\twidth=\"100%\" \n        \t\t\t\t\t\t\tsendXHR=\"true\" \n        \t\t\t\t\t\t\tfileType=\"csv\" />\n        \t\t\t\t\t\t<CheckBox text=\"{i18n>csvHasHeader}\"  id=\"locationHeader\" width=\"100%\"/>     \n        \t\t\t\t\t\t<Button id=\"btnLocationUploadAccept\" \n        \t\t\t\t\t\t    text=\"{i18n>btnUploadLocations}\" \n        \t\t\t\t\t\t    press=\"onLocationUploadPress\" \n        \t\t\t\t\t\t    type=\"Accept\" \n        \t\t\t\t\t\t\ticon=\"sap-icon://accept\" />\n    \t\t\t\t        </l:VerticalLayout>\n    \t\t\t\t    </Panel>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t</items>\n\t\t\t</IconTabBar>\n\t\t</content>\n\t\t<endButton><Button id=\"btnLocationDialogClose\" text=\"{i18n>close}\" press=\"closeLocationDialog\"/></endButton>\n\t</Dialog>\n\t\t\t\n</core:FragmentDefinition>",
		"diploma/admin/route/create/controller/Main.controller.js": "/* global google */\nsap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/Device\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Sorter\",\n\t\"sap/m/MessageToast\",\n\t\"sap/m/MessageBox\"\n], function(Controller, Device, JSONModel, Sorter, MessageToast, MessageBox) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"diploma.admin.route.create.controller.Main\", {\n        \n        /** Lifecycle hook. Creates the view model, attaches promise callbacks and sets style classes.*/\n\t\tonInit: function() {\n\t\t\tvar oViewModel,\n\t\t\t\tfnSetAppNotBusy,\n\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\n\n\t\t\toViewModel = new JSONModel({\n\t\t\t\tbusy: true,\n\t\t\t\tdelay: 0,\n\t\t\t\tlocationAdvancedSearch: false,\n\t\t\t\twaypointCount: 0,\n\t\t\t\ttoggleDetailsVisible: Device.system.phone,\n\t\t\t\ttoggleMapVisible: false,\n\t\t\t\tselected: false,\n\t\t\t\trouteName: \"\",\n\t\t\t\twaypoints: {}\n\t\t\t});\n\t\t\tthis.getView().setModel(oViewModel, \"view\");\n            \n\t\t\tfnSetAppNotBusy = function() {\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t};\n            \n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(fnSetAppNotBusy);\n\t\t\t\n\t\t\tthis.byId(\"map\").attachAfterRendering(this._initMap, this);\n\t\t\tthis.getOwnerComponent().getMapPromise().then(this._initMap.bind(this));                         \n\t\t\t\n\t\t\t\n\t\t\tvar sStyleClass = this.getOwnerComponent().getContentDensityClass();\n\t\t\t// apply content density mode to root view\n\t\t\t\n\t\t\tthis.getView().addStyleClass(sStyleClass);\n\t\t\tthis.byId(\"appRouteCreate\").getDependents().forEach(function(oItem){\n\t\t\t    oItem.addStyleClass(sStyleClass);\n\t\t\t});\n\t\t\t\n\t\t\tjQuery.sap.delayedCall(500, this, function(){\n\t\t\t\tif (google && this._map) {\n\t\t\t\t\tgoogle.maps.event.trigger(this._map, \"resize\");\n\t\t\t\t\tthis._map.setCenter(new google.maps.LatLng(45.33,28.20));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t\n\t\t/**\n\t\t * Convenience method for accessing the router in every controller of the application.\n\t\t * @public\n\t\t * @returns {sap.ui.core.routing.Router} the router for this component\n\t\t */\n\t\tgetRouter : function () {\n\t\t\treturn this.getOwnerComponent().getRouter();\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for getting the view model by name in every controller of the application.\n\t\t * @public\n\t\t * @param {string} sName the model name\n\t\t * @returns {sap.ui.model.Model} the model instance\n\t\t */\n\t\tgetModel : function (sName) {\n\t\t\treturn this.getView().getModel(sName);\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for setting the view model in every controller of the application.\n\t\t * @public\n\t\t * @param {sap.ui.model.Model} oModel the model instance\n\t\t * @param {string} sName the model name\n\t\t * @returns {sap.ui.mvc.View} the view instance\n\t\t */\n\t\tsetModel : function (oModel, sName) {\n\t\t\treturn this.getView().setModel(oModel, sName);\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for getting the resource bundle.\n\t\t * @public\n\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\n\t\t */\n\t\tgetResourceBundle : function () {\n\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t},\n        \n        /**\n         * Custom formatter for displaying the country and region of a location in one text field.\n         * This formatter is needed to avoid the displaying of stranded commas if the country / region is empty.\n         * @param   {string}    sCountry    The country of the location.\n         * @param   {string}    sRegion     The region of the location.\n         * @returns {string}    The formatted string.\n         */\n        formatLocationInfo: function(sCountry, sRegion) {\n            if (!sCountry && !sRegion) {\n                return \"\";\n            }\n            else if (!sCountry || !sRegion) {\n                return sCountry || sRegion;\n            }\n            else {\n                return sRegion + \", \" + sCountry;\n            }\n        },\n        \n\t\t/**\n\t\t * Event handler  for navigating back.\n\t\t * It checks if there is a history entry. If yes, history.go(-1) will happen.\n\t\t * If not, it will replace the current entry of the browser history with the master route.\n\t\t * @public\n\t\t */\n\t\tonNavBack : function() {\n\t\t\tvar sPreviousHash = sap.ui.core.routing.History.getInstance().getPreviousHash(),\n\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\n\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t// The history contains a previous entry\n\t\t\t\thistory.go(-1);\n\t\t\t} else {\n\t\t\t\toCrossAppNavigator.toExternal({\n\t\t\t\t\ttarget: {shellHash: \"#Shell-home\"}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when  the dynamic side container changes the breakpoint.\n\t\t * Updates the view model to ajust the toggle buttons visibilities.\n\t\t * @param   {Event} oEvent  The event object.\n\t\t * @returns {void}\n\t\t */\n\t\tonBreakpointChange: function (oEvent) {\n\t\t\tvar sCurrentBreakpoint = oEvent.getParameter(\"currentBreakpoint\"),\n\t\t\t    oViewModel = this.getView().getModel(\"view\");\n \n\t\t\tif (sCurrentBreakpoint === \"S\") {\n\t\t\t\toViewModel.setProperty(\"/toggleMapVisible\", !this.byId(\"dscMain\").getShowMainContent());\n\t\t\t\toViewModel.setProperty(\"/toggleDetailsVisible\", !this.byId(\"dscMain\").getShowSideContent());\n\t\t\t} else {\n\t\t\t\toViewModel.setProperty(\"/toggleMapVisible\", false);\n\t\t\t\toViewModel.setProperty(\"/toggleDetailsVisible\", false);\n\t\t\t}\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the selection of the waypoint list is changed.\n\t\t * Updates the view model in order to enable / disable selection based buttons.\n\t\t * @param   {Event} oEvent  The event object.\n\t\t * @returns {void}\n\t\t */\n\t\tonListSelectionChange: function(oEvent){\n\t\t    this.getModel(\"view\").setProperty(\"/selected\", oEvent.getParameter(\"selected\"));\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the \"plus\" button is pressed.\n\t\t * Clears the search fields and filtering of the value help dialog and then opens it.\n\t\t * @returns {void}\n\t\t */\n\t\tonAddWaypoint: function() {\n\t\t    this.byId(\"seaLocationNameSearch\").setValue(\"\");\n\t\t    this.byId(\"seaLocationCountrySearch\").setValue(\"\");\n\t\t    this.byId(\"seaLocationRegionSearch\").setValue(\"\");\n\t\t    this.getModel(\"view\").setProperty(\"/locationAdvancedSearch\", false);\n\t\t    this.onSearchLocationMain();\n\t\t    this.byId(\"vhdLocation\").open();\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the \"delete\" button is pressed.\n\t\t * Removes the selected waypoint and recomputes the route.\n\t\t * @returns {void}\n\t\t */\n\t\tonRemoveWaypoint: function() {\n\t\t    var oItem = this.byId(\"lstWaypoints\").getSelectedItem();\n\t\t    if (oItem) {\n\t\t        var sKey = oItem.getBindingContext(\"view\").getProperty(\"id\"),\n\t\t            oData = this.getModel(\"view\").getData(),\n\t\t            iOrder = oData.waypoints[sKey].order,\n\t\t            sCurrent;\n\t\t        for (sCurrent in oData.waypoints) {\n\t\t            if (oData.waypoints.hasOwnProperty(sCurrent) && oData.waypoints[sCurrent].order > iOrder) {\n\t\t                oData.waypoints[sCurrent].order--;\n\t\t            }\n\t\t        }\n\t\t        delete oData.waypoints[sKey];\n\t\t        oData.waypointCount--;\n\t\t        oData.selected = false;\n\t\t        this.getModel(\"view\").refresh();\n\t\t        this._updateDirections();\n\t\t    }\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the \"up\" button is pressed.\n\t\t * Moves the currently selected waypoint one place upwards by decrementing its order property\n\t\t * (and incrementing the order property of the waypoint above it).\n\t\t * @returns {void}\n\t\t */\n\t\tonMoveWaypointUp: function() {\n\t\t    var oItem = this.byId(\"lstWaypoints\").getSelectedItem();\n\t\t    if (oItem) {\n\t\t        var sKey = oItem.getBindingContext(\"view\").getProperty(\"id\"),\n\t\t            oWaypoints = this.getModel(\"view\").getObject(\"/waypoints\"),\n\t\t            iOrder = oWaypoints[sKey].order - 1,\n\t\t            sCurrent;\n\t\t        for (sCurrent in oWaypoints) {\n\t\t            if (oWaypoints.hasOwnProperty(sCurrent) && oWaypoints[sCurrent].order === iOrder) {\n\t\t                oWaypoints[sCurrent].order++;\n\t\t                oWaypoints[sKey].order--;\n        \t\t        this.byId(\"lstWaypoints\").getBinding(\"items\").sort(new Sorter(\"order\"));\n        \t\t        this._updateDirections();\n        \t\t        break;\n\t\t            }\n\t\t        }\n\t\t    }\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the \"down\" button is pressed.\n\t\t * Moves the currently selected waypoint one place downwards by incrementing its order property\n\t\t * (and decrementing the order property of the waypoint above it).\n\t\t * @returns {void}\n\t\t */\n\t\tonMoveWaypointDown: function() {\n\t\t    var oItem = this.byId(\"lstWaypoints\").getSelectedItem();\n\t\t    if (oItem) {\n\t\t        var sKey = oItem.getBindingContext(\"view\").getProperty(\"id\"),\n\t\t            oWaypoints = this.getModel(\"view\").getObject(\"/waypoints\"),\n\t\t            iOrder = oWaypoints[sKey].order + 1,\n\t\t            sCurrent;\n\t\t        for (sCurrent in oWaypoints) {\n\t\t            if (oWaypoints.hasOwnProperty(sCurrent) && oWaypoints[sCurrent].order === iOrder) {\n\t\t                oWaypoints[sCurrent].order--;\n\t\t                oWaypoints[sKey].order++;\n        \t\t        this.byId(\"lstWaypoints\").getBinding(\"items\").sort(new Sorter(\"order\"));\n        \t\t        this._updateDirections();\n        \t\t        break;\n\t\t            }\n\t\t        }\n\t\t    }\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the \"Advanced\" / \"Basic\" button is pressed.\n\t\t * Updates the view model to show or hide the advanced search panel.\n\t\t * @returns {void}\n\t\t */\n\t\tonToggleAdvancedSearch: function() {\n\t\t    this.getModel(\"view\").setProperty(\"/locationAdvancedSearch\", \n\t\t        !this.getModel(\"view\").getProperty(\"/locationAdvancedSearch\"));\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the \"show map\" button is pressed. This can only happen if the size of the screen is below \n\t\t * the breakpoint defined in the sideContentFallDown of the dynamic side container.\n\t\t * Updates the model accordingly and instructs the dynamic side container to switch content.\n\t\t * @returns {void}\n\t\t */\n\t\tonShowMap: function() {\n\t\t    var oViewModel = this.getView().getModel(\"view\");\n\t\t\toViewModel.setProperty(\"/toggleMapVisible\", false);\n\t\t\toViewModel.setProperty(\"/toggleDetailsVisible\", true);\n\t\t\tthis.byId(\"dscMain\").toggle();\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the \"show details\" button is pressed. This can only happen if the size of the screen is below \n\t\t * the breakpoint defined in the sideContentFallDown of the dynamic side container.\n\t\t * Updates the model accordingly and instructs the dynamic side container to switch content.\n\t\t * @returns {void}\n\t\t */\n\t\tonShowDetails: function() {\n\t\t    var oViewModel = this.getView().getModel(\"view\");\n\t\t\toViewModel.setProperty(\"/toggleMapVisible\", true);\n\t\t\toViewModel.setProperty(\"/toggleDetailsVisible\", false);\n\t\t\tthis.byId(\"dscMain\").toggle();\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the \"save\" button is pressed.\n\t\t * Collects the necessary data, performs validations and sends the data to the backend.\n\t\t * If the operation is succesfully finished, the \"View Route\" app is opened with the newly created route.\n\t\t * @returns {void}\n\t\t */\n\t\tonSaveRoute: function() {\n\t\t    var sKey,\n\t\t        oWaypoints = this.getModel(\"view\").getObject(\"/waypoints\"),\n\t\t        aWaypoints = [],\n\t\t        oi18n = this.getResourceBundle(),\n\t\t        sName = this.getModel(\"view\").getProperty(\"/routeName\"),\n\t\t        oDirections,\n\t\t        oRoute,\n\t\t        oLeg, \n\t\t        oStep,\n\t\t        aRes = [],\n\t\t        i, j, k;\n\t\t        \n            oDirections = this._display.getDirections();\n\t\t    for (sKey in oWaypoints) {\n                if (oWaypoints.hasOwnProperty(sKey)) {\n                    aWaypoints.push(oWaypoints[sKey]);\n                }\n            }\n            if (aWaypoints.length < 2 || !sName || !(oDirections && oDirections.routes && oDirections.routes.length)) {\n                MessageBox.error(oi18n.getText(\"errorInvalidParameters\"));\n                return;\n            }\n            \n            aWaypoints.sort(function(a, b){ return a.order - b.order; });\n            for (i = 0; i < aWaypoints.length; ++i) {\n                aWaypoints[i] = aWaypoints[i].id;\n            }\n            \n            oRoute = oDirections.routes[0];\n\t\t\tfor (i = 0; i < oRoute.legs.length; ++i) {\n\t\t\t\toLeg = oRoute.legs[i];\n\t\t\t\tfor (j = 0; j < oLeg.steps.length; ++j) {\n\t\t\t\t\toStep = oLeg.steps[j];\n\t\t\t\t\tfor (k = 0; k < oStep.path.length; ++k) {\n\t\t\t\t\t\taRes.push(oStep.path[k].lng().toFixed(5) + \" \" + oStep.path[k].lat().toFixed(5));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n            \n            $.ajax({\n                url:    \"/destinations/INET_HTTP_DIPLOMA_J0I/services/primary.xsjs?entity=Route&name=\" + \n                            sName + \"&waypoints=\" + aWaypoints.join(\",\"),\n                method: \"POST\",\n\t            headers: { \"X-CSRF-Token\": this.getModel().getSecurityToken() },\n                data:   \"LINESTRING( \" + aRes.join(\", \") + \" )\",\n                success: function(sRouteId) {\n                    if (!sap.ushell || !sap.ushell.Container || !sap.ushell.Container.getService) {\n        \t\t\t\treturn;\n        \t\t\t}\n        \t\t\tvar oService = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\n        \t\t\tif (!oService) {\n        \t\t\t\treturn;\n        \t\t\t}\n        \t\t\t\n        \t\t\toService.toExternal({\n        \t\t\t\ttarget: {\n        \t\t\t\t\tshellHash: \"Route-View&/Routes/\" + sRouteId\n        \t\t\t\t}\n        \t\t\t});\n                },\n                error:  function(oRequest) {\n                    MessageBox.error(oi18n.getText(\"errorText\", {details: oRequest.responseText}));\n                }\n            });\n\t\t},\n\t\t\n\t\t/**\n\t\t * Opens the location maintainence dialog.\n\t\t * @returns {void}\n\t\t */\n\t\topenLocationDialog: function() {\n\t\t\tthis.byId(\"locationName\").setValue(\"\");\n\t\t\tthis.byId(\"locationLat\").setValue(\"\");\n\t\t\tthis.byId(\"locationLng\").setValue(\"\");\n\t\t\tthis.byId(\"dialogLocation\").open();\n\t\t},\n\t\t\n\t\t/**\n\t\t * Closes the location maintainence dialog.\n\t\t * @returns {void}\n\t\t */\n\t\tcloseLocationDialog: function() {\n\t\t\tthis.byId(\"dialogLocation\").close();\n\t\t},\n\t\t\n\t\t/**\n\t\t * Creates a new location.\n\t\t * @returns {void}\n\t\t */\n\t\tcreateLocation: function() {\n\t\t\t$.ajax({\n\t\t\t\turl: \"/destinations/INET_HTTP_DIPLOMA_J0I/services/primary.xsjs?entity=Location\",\n\t\t\t\tmethod: \"POST\",\n\t            headers: { \"X-CSRF-Token\": this.getModel().getSecurityToken() },\n\t\t\t\tdata: JSON.stringify([{\n\t\t\t\t\tname:\t\tthis.byId(\"locationName\").getValue(), \n\t\t\t\t\tlatitude:\tthis.byId(\"locationLat\").getValue(),\n\t\t\t\t\tlongitude:\tthis.byId(\"locationLng\").getValue(),\n\t\t\t\t\tregion: \tthis.byId(\"locationRegion\").getValue(),\n\t\t\t\t\tcountry:\tthis.byId(\"locationCountry\").getValue()\n\t\t\t\t}]),\n\t\t\t\tsuccess: function() {\n\t\t\t\t\tMessageToast.show(this.getResourceBundle().getText(\"successCreateLocation\"));\n\t\t\t\t\tthis.byId(\"locationName\").setValue(\"\");\n\t\t\t\t\tthis.byId(\"locationLat\").setValue(\"\");\n\t\t\t\t\tthis.byId(\"locationLng\").setValue(\"\");\n\t\t\t\t\tthis.byId(\"locationRegion\").setValue(\"\");\n\t\t\t\t\tthis.byId(\"locationCountry\").setValue(\"\");\n\t\t\t\t\tthis.getModel().refresh();\n\t\t\t\t}.bind(this),\n\t\t\t\terror: function() {\n\t\t\t\t\tMessageToast.show(this.getResourceBundle().getText(\"errorText\"));\n\t\t\t\t}.bind(this)\n\t\t\t});\n\t\t},\n\t\t\n\t\t/**\n\t\t * Deletes the selected location.\n\t\t * @param\t{Event}\toEvent\tThe event object.\n\t\t * @returns {void}\n\t\t */\n\t\tdeleteLocation: function(oEvent) {\n\t\t\tthis.getModel().remove(oEvent.getParameter(\"listItem\").getBindingContext().getPath());\n\t\t},\n\t\t\n\t\t/**\n\t\t * Event handler for the upload button press.\n\t\t * Uploads the CSV file to the backend.\n\t\t * @returns {void}\n\t\t */\n\t\tonLocationUploadPress: function() {\n\t\t\tthis.byId(\"locationUploader\").removeAllHeaderParameters();\n            this.byId(\"locationUploader\").addHeaderParameter(new sap.ui.unified.FileUploaderParameter({\n                name:   \"X-CSRF-Token\",\n                value:  this.getModel().getSecurityToken()\n            }));\n            this.byId(\"locationUploader\").setUploadUrl(\"/destinations/INET_HTTP_DIPLOMA_J0I/\" + \n            \t\"services/primary.xsjs?upload=true&entity=Location&header=\" + this.byId(\"locationHeader\").getSelected());\n\t\t\tthis.byId(\"locationUploader\").upload();\n\t\t},\n\t\t\n\t\t/**\n\t\t * Common \"search\" event handler for all three search fields on the location value help dialog.\n\t\t * Performs a filtering based on the type of search (basic / advanced) and the search queries.\n\t\t * @returns {void}\n\t\t */\n\t\tonSearchLocationMain: function() {\n\t\t    var aFilters = [], sQuery,\n\t\t        bAdvanced = this.getModel(\"view\").getProperty(\"/locationAdvancedSearch\");\n\t\t    \n\t\t    sQuery = this.byId(\"seaLocationNameSearch\").getValue();\n\t\t\tif (sQuery && sQuery.length > 0) {\n\t\t\t\taFilters.push(new sap.ui.model.Filter(\"name\", sap.ui.model.FilterOperator.Contains, sQuery));\n\t\t\t}\n\t\t\t\n\t\t\tsQuery = this.byId(\"seaLocationCountrySearch\").getValue();\n\t\t\tif (sQuery && sQuery.length > 0 && bAdvanced) {\n\t\t\t\taFilters.push(new sap.ui.model.Filter(\"country\", sap.ui.model.FilterOperator.Contains, sQuery));\n\t\t\t}\n\t\t\t\n\t\t\tsQuery = this.byId(\"seaLocationRegionSearch\").getValue();\n\t\t\tif (sQuery && sQuery.length > 0 && bAdvanced) {\n\t\t\t\taFilters.push(new sap.ui.model.Filter(\"region\", sap.ui.model.FilterOperator.Contains, sQuery));\n\t\t\t}\n\t\t\t\n\t\t\tthis.byId(\"tblLocationSearchMain\").getBinding(\"items\").filter(aFilters, \"Application\");\n\t\t},\n\t\t\n\t\t/**\n\t\t * Closes the location value help dialog.\n\t\t * @returns {void}\n\t\t */\n\t\tonLocationMainClose: function() {\n\t\t    this.byId(\"vhdLocation\").close();\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when an item from the location value search help is pressed.\n\t\t * Loads the coordinates of the selected location from the backend and updates the route.\n\t\t * @param   {Event} oEvent  The event object.\n\t\t * @returns {void}\n\t\t */\n\t\tonLocationAdded: function(oEvent) {\n\t\t    var oModel = this.getModel(\"view\"),\n\t\t        oContext = oEvent.getSource().getBindingContext(),\n\t\t        oWaypoints = oModel.getObject(\"/waypoints\"),\n\t\t        iLength = 0,\n\t\t        sKey,\n\t\t        fnOnError = MessageToast.show.bind(MessageToast, this.getResourceBundle().getText(\"errorText\"));\n\t\t        \n\t\t    for (sKey in oWaypoints) {\n\t\t        if (oWaypoints.hasOwnProperty(sKey)) {\n\t\t            ++iLength;\n\t\t        }\n\t\t    }\n\t\t    sKey = oContext.getProperty(\"id\");\n\t\t    if (oWaypoints[sKey]) {\n\t\t        return;\n\t\t    }\n\t\t    oWaypoints[sKey] = {\n\t            id:     sKey,\n\t            name:   oContext.getProperty(\"name\"),\n\t            order:  iLength + 1\n\t        };\n\t        oModel.getData().waypointCount++;\n\t        oModel.refresh();\n\t        \n\t        $.ajax({\n\t            url:    \"/destinations/INET_HTTP_DIPLOMA_J0I/services/primary.xsjs\",\n\t            data:   {\n\t                entity: \"Location\",\n\t                ids:    sKey\n\t            },\n\t            success: function(oData) {\n\t                if (oData && oData[sKey]) {\n\t                    oWaypoints[sKey].latitude = oData[sKey].position[1];\n\t                    oWaypoints[sKey].longitude = oData[sKey].position[0];\n\t                    this._updateDirections();\n\t                }\n\t                else {\n\t                    fnOnError();\n\t                }\n\t            }.bind(this),\n\t            error:  fnOnError\n\t        });\n\t        \n\t        this.byId(\"vhdLocation\").close();\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the search event of the search bar from the delete location list is triggered.\n\t\t * Applies a simple filtering to the location list.\n\t\t * @param   {Event} oEvent  The event object.\n\t\t * @returns {void}\n\t\t */\n\t\tonLocationDeleteSearch: function(oEvent) {\n\t\t    var aFilters = [],\n\t\t        sQuery = oEvent.getParameter(\"query\");\n\t\t\tif (sQuery && sQuery.length > 0) {\n\t\t\t\taFilters.push(new sap.ui.model.Filter(\"name\", sap.ui.model.FilterOperator.Contains, sQuery));\n\t\t\t}\n\t\t\tthis.byId(\"locationList\").getBinding(\"items\").filter(aFilters, \"Application\");\n\t\t},\n\t\t\n\t\t/**\n\t\t * Event handler for the upload complete event of the file uploader.\n\t\t * Shows a message (either success or error) and refreshes the model.\n\t\t * @param\t{object}\toEvent\tThe event object.\n\t\t */\n\t\tonLocationUploadComplete: function(oEvent) {\n\t\t\tif (oEvent.getParameter(\"status\") === 200 || oEvent.getParameter(\"status\") === 204) {\n\t\t\t\tMessageToast.show(this.getResourceBundle().getText(\"uploadSuccess\"));\n\t\t\t\tthis.getModel().refresh();\n\t\t\t\tthis.byId(\"locationUploader\").clear();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tMessageToast.show(this.getResourceBundle().getText(\"errorText\"));\n\t\t\t}\n\t\t},\n        \n        /**\n         * Updates the proposed route based on the current waypoints.\n         * If there are less than 2 waypoints, the map is cleared.\n         * @private\n         * @returns {void}\n         */\n        _updateDirections: function() {\n            var oWaypoints = this.getModel(\"view\").getObject(\"/waypoints\"),\n                aWaypoints = [],\n                aLatLngs = [],\n                sKey,\n                i;\n            if (!this._service){\n                return;\n            }\n            \n            for (sKey in oWaypoints) {\n                if (oWaypoints.hasOwnProperty(sKey)) {\n                    aWaypoints.push(oWaypoints[sKey]);\n                }\n            }\n            aWaypoints.sort(function(a, b){ return a.order - b.order; });\n            if (aWaypoints.length < 2) {\n                this._display.setMap(null);\n                return;\n            }\n            this._display.setMap(this._map);\n            \n            for (i = 1; i < aWaypoints.length - 1; ++i) {\n                aLatLngs.push({\n                    location: {\n                        lat: aWaypoints[i].latitude, \n                        lng: aWaypoints[i].longitude\n                    },\n                    stopover: false\n                });\n            }\n            \n            this._service.route({\n                origin:         {lat: aWaypoints[0].latitude, lng: aWaypoints[0].longitude},\n                destination:    {lat: aWaypoints[aWaypoints.length - 1].latitude, lng: aWaypoints[aWaypoints.length - 1].longitude},\n                waypoints:      aLatLngs,\n                travelMode: google.maps.TravelMode.DRIVING\n            }, function(oResult, iStatus) {\n                if (iStatus === google.maps.DirectionsStatus.OK) {\n                    this._display.setDirections(oResult);\n                }\n            }.bind(this));\n        },\n        \n        /**\n         * Initializes the map (either after rendering or after google maps lib load).\n         * This method is guaranted to be called at least once is both the map and the details panel are visible \n         * and each time the map is displayed if only one panel is visible at a time.\n         * Refreshes the route displaye on the map.\n         */\n\t\t_initMap: function() {\n\t\t    if (this.byId(\"map\").getDomRef() && typeof google !== \"undefined\" && !this._map) {\n\t\t        this.byId(\"map\").getDomRef().parentElement.style.height = \"100%\";\n\t\t        this._map = new google.maps.Map(this.byId(\"map\").getDomRef(), {\n    \t\t\t\tmapTypeId:\tgoogle.maps.MapTypeId.ROADMAP,\n    \t\t\t\tcenter: \tnew google.maps.LatLng(45.33,28.20),\n    \t\t\t\tzoom:\t\t6\n\t\t\t\t});\n\t\t\t\tthis._service = new google.maps.DirectionsService();\n\t\t\t\tthis._display = new google.maps.DirectionsRenderer({\n\t\t\t\t\tmap: this._map\n\t\t\t\t});\n\t\t    }\n\t\t    this._updateDirections();\n\t\t}\n\t});\n\n});",
		"diploma/admin/route/create/model/models.js": "sap.ui.define([\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/Device\"\n], function(JSONModel, Device) {\n\t\"use strict\";\n\n\treturn {\n\n\t\tcreateDeviceModel: function() {\n\t\t\tvar oModel = new JSONModel(Device);\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t}\n\n\t};\n\n});",
		"diploma/admin/route/create/Component.js": "sap.ui.define([\n\t\"sap/ui/core/UIComponent\",\n\t\"sap/ui/Device\",\n\t\"diploma/admin/route/create/model/models\"\n], function(UIComponent, Device, models) {\n\t\"use strict\";\n    var sGoogleApiLocation = \"https:/\" + \"/maps.googleapis.com/maps/api/js?libraries=visualization\";\n    \n\treturn UIComponent.extend(\"diploma.admin.route.create.Component\", {\n\n\t\tmetadata: {\n\t\t\tmanifest: \"json\"\n\t\t},\n\n\t\t/**\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tinit: function() {\n\t\t\tthis._loadGoogleMaps();\n\t\t\t\n\t\t\t// call the base component's init function\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\t\t\t\t\n\t\t\t// set the device model\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\t\t},\n\t\t\n\t\t/**\n\t\t * @function _loadGoogleMaps\n\t\t * @private\n\t\t * Loads the Google libraries if not already loaded.\n\t\t * \n\t\t * @returns {void}\n\t\t */\n\t\t _loadGoogleMaps: function() {\n\t\t \tvar oPromise = jQuery.Deferred();\n\t\t \tif (typeof google === \"undefined\") {\n\t\t \t\tjQuery.sap.includeScript(sGoogleApiLocation, \"gmaps\", oPromise.resolve.bind(oPromise), oPromise.reject.bind(oPromise));\n\t\t \t}\n\t\t \telse {\n\t\t \t\toPromise.resolve();\n\t\t \t}\n\t\t \tthis.getMapPromise = function() {\n\t\t \t    return oPromise.promise();\n\t\t \t};\n\t\t },\n\n\t\t/**\n\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t\t * design mode class should be set, which influences the size appearance of some controls.\n\t\t * @public\n\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t\t */\n\t\tgetContentDensityClass: function() {\n\t\t\tif (this._sContentDensityClass === undefined) {\n\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\n\t\t\t\t\tthis._sContentDensityClass = \"\";\n\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\n\t\t\t\t} else {\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._sContentDensityClass;\n\t\t}\n\t});\n\n});"
	}
});