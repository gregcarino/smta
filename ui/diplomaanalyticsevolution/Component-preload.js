/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "diploma/analytics/evolution/Component-preload",
	"modules": {
		"diploma/analytics/evolution/Component.js": "sap.ui.define([\n\t\"sap/ui/core/UIComponent\",\n\t\"sap/ui/Device\",\n\t\"diploma/analytics/evolution/model/models\",\n\t\"diploma/analytics/evolution/controller/ErrorHandler\"\n], function(UIComponent, Device, models, ErrorHandler) {\n\t\"use strict\";\n\n\treturn UIComponent.extend(\"diploma.analytics.evolution.Component\", {\n\n\t\tmetadata: {\n\t\t\tmanifest: \"json\"\n\t\t},\n\n\t\t/**\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t * In this function, the FLP and device models are set and the router is initialized.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tinit: function() {\n\t\t\t// set the main model\n\t\t\tthis._loadPromise = this._loadGoogleMaps();\n\t\t\t\n\t\t\t// call the base component's init function\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t// initialize the error handler with the component\n\t\t\tthis._oErrorHandler = new ErrorHandler(this);\n\n\t\t\t// set the device model\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\t\t\t// set the FLP model\n\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\n\n\t\t\t// create the views based on the url/hash\n\t\t\tthis.getRouter().initialize();\n\t\t},\n\t\t\n\t\t/**\n\t\t * @function getLoadPromise\n\t\t * Retrieves the load promise.\n\t\t * @returns {Promise} A promise resolved when both the map library and the main model are loaded.\n\t\t */\n\t\t getLoadPromise: function() {\n\t\t \treturn this._loadPromise;\n\t\t },\n\t\t\n\t\t/**\n\t\t * @function _loadGoogleMaps\n\t\t * @private\n\t\t * Loads the Google libraries if not already loaded.\n\t\t * \n\t\t * @returns {Promise} A promise which is resolve when the map library is loaded.\n\t\t */\n\t\t _loadGoogleMaps: function() {\n\t\t \tvar oPromise = jQuery.Deferred();\n\t\t \tif (typeof google === \"undefined\") {\n\t\t \t\tjQuery.sap.includeScript(\"https://maps.googleapis.com/maps/api/js?libraries=visualization\", \"gmaps\", \n\t\t \t\t\toPromise.resolve.bind(oPromise), oPromise.reject.bind(oPromise));\n\t\t \t}\n\t\t \telse {\n\t\t \t\toPromise.resolve();\n\t\t \t}\n\t\t \treturn oPromise.promise();\n\t\t },\n\t\t \n\t\t/**\n\t\t * Returns a generic error handling function.\n\t\t * @function getErrorHandler\n\t\t * @returns {function} Error handling function.\n\t\t */\n\t\tgetErrorHandler: function() {\n\t\t\treturn this._oErrorHandler.showGenericError.bind(this._oErrorHandler);\n\t\t},\n\n\t\t/**\n\t\t * The component is destroyed by UI5 automatically.\n\t\t * In this method, the ErrorHandler is destroyed.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tdestroy: function() {\n\t\t\tthis._oErrorHandler.destroy();\n\t\t\t// call the base component's destroy function\n\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\n\t\t},\n\n\t\t/**\n\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t\t * design mode class should be set, which influences the size appearance of some controls.\n\t\t * @public\n\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t\t */\n\t\tgetContentDensityClass: function() {\n\t\t\tif (this._sContentDensityClass === undefined) {\n\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\n\t\t\t\t\tthis._sContentDensityClass = \"\";\n\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\n\t\t\t\t} else {\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._sContentDensityClass;\n\t\t}\n\n\t});\n\n});",
		"diploma/analytics/evolution/controller/BaseController.js": "sap.ui.define([\n\t\"sap/ui/core/mvc/Controller\"\n], function(Controller) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"diploma.analytics.evolution.controller.BaseController\", {\n\t\t/**\n\t\t * Convenience method for accessing the router.\n\t\t * @public\n\t\t * @returns {sap.ui.core.routing.Router} the router for this component\n\t\t */\n\t\tgetRouter: function() {\n\t\t\treturn sap.ui.core.UIComponent.getRouterFor(this);\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for getting the view model by name.\n\t\t * @public\n\t\t * @param {string} [sName] the model name\n\t\t * @returns {sap.ui.model.Model} the model instance\n\t\t */\n\t\tgetModel: function(sName) {\n\t\t\treturn this.getView().getModel(sName);\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for setting the view model.\n\t\t * @public\n\t\t * @param {sap.ui.model.Model} oModel the model instance\n\t\t * @param {string} sName the model name\n\t\t * @returns {sap.ui.mvc.View} the view instance\n\t\t */\n\t\tsetModel: function(oModel, sName) {\n\t\t\treturn this.getView().setModel(oModel, sName);\n\t\t},\n\n\t\t/**\n\t\t * Getter for the resource bundle.\n\t\t * @public\n\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\n\t\t */\n\t\tgetResourceBundle: function() {\n\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t},\n\n\t\t/**\n\t\t * Event handler when the share by E-Mail button has been clicked\n\t\t * @public\n\t\t */\n\t\tonShareEmailPress: function() {\n\t\t\tvar oViewModel = (this.getModel(\"objectView\") || this.getModel(\"worklistView\"));\n\t\t\tsap.m.URLHelper.triggerEmail(\n\t\t\t\tnull,\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\n\t\t\t);\n\t\t}\n\n\t});\n\n});",
		"diploma/analytics/evolution/controller/App.controller.js": "sap.ui.define([\n\t\"diploma/analytics/evolution/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\"\n], function(BaseController, JSONModel) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"diploma.analytics.evolution.controller.App\", {\n\n\t\tonInit: function() {\n\t\t\tvar oViewModel = new JSONModel({\n\t\t\t    busy: true,\n\t\t\t    delay: 0\n\t\t\t}),\n\t\t\t\tfnSetAppNotBusy,\n\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\n            this.setModel(oViewModel, \"appView\");\n            \n\t\t\tfnSetAppNotBusy = function() {\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t};\n\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(fnSetAppNotBusy);\n\n\t\t\t// apply content density mode to root view\n\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t}\n\t});\n\n});",
		"diploma/analytics/evolution/model/formatter.js": "sap.ui.define([\"sap/ui/core/format/DateFormat\"], function(DateFormat) {\n\t\"use strict\";\n\tvar oInstance = DateFormat.getDateTimeInstance({\n\t\tstyle: \"medium\"\n\t});\n\t\n\treturn {\n\n\t\t/**\n\t\t * Rounds the number unit value to 2 digits\n\t\t * @public\n\t\t * @param {string} sValue the number string to be rounded\n\t\t * @returns {string} sValue with 2 digits rounded\n\t\t */\n\t\tnumberUnit: function(sValue) {\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\treturn parseFloat(sValue).toFixed(2);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Formats a timestamp to the medium locale-specific format.\n\t\t * @public\n\t\t * @params\t{Date|int}\tdTimestamp\tThe timestamp.\n\t\t * @returns {string}\tThe formatted timestamp.\n\t\t */\n\t\ttsToDateTimeMedium: function(dTimestamp) {\n\t\t\tif (typeof dTimestamp === \"number\") {\n\t\t\t\tdTimestamp = new Date(dTimestamp);\n\t\t\t}\n\t\t\treturn oInstance.format(dTimestamp);\n\t\t}\n\n\t};\n\n});",
		"diploma/analytics/evolution/localService/mockserver.js": "sap.ui.define([\n\t\"sap/ui/core/util/MockServer\"\n], function(MockServer) {\n\t\"use strict\";\n\tvar oMockServer,\n\t\t_sAppModulePath = \"diploma/analytics/evolution/\",\n\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\n\n\treturn {\n\n\t\t/**\n\t\t * Initializes the mock server.\n\t\t * You can configure the delay with the URL parameter \"serverDelay\".\n\t\t * The local mock data in this folder is returned instead of the real data for testing.\n\t\t * @public\n\t\t */\n\t\tinit: function() {\n\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\n\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\n\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\n\t\t\t\tsEntity = \"Devices\",\n\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\n\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\n\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\n\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\n\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\n\t\t\t\t// ensure there is a trailing slash\n\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\n\n\t\t\toMockServer = new MockServer({\n\t\t\t\trootUri: sMockServerUrl\n\t\t\t});\n\n\t\t\t// configure mock server with a delay of 1s\n\t\t\tMockServer.config({\n\t\t\t\tautoRespond: true,\n\t\t\t\tautoRespondAfter: (oUriParameters.get(\"serverDelay\") || 1000)\n\t\t\t});\n\n\t\t\t// load local mock data\n\t\t\toMockServer.simulate(sMetadataUrl, {\n\t\t\t\tsMockdataBaseUrl: sJsonFilesUrl,\n\t\t\t\tbGenerateMissingMockData: true\n\t\t\t});\n\n\t\t\tvar aRequests = oMockServer.getRequests(),\n\t\t\t\tfnResponse = function(iErrCode, sMessage, aRequest) {\n\t\t\t\t\taRequest.response = function(oXhr) {\n\t\t\t\t\t\toXhr.respond(iErrCode, {\n\t\t\t\t\t\t\t\"Content-Type\": \"text/plain;charset=utf-8\"\n\t\t\t\t\t\t}, sMessage);\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t// handling the metadata error test\n\t\t\tif (oUriParameters.get(\"metadataError\")) {\n\t\t\t\taRequests.forEach(function(aEntry) {\n\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\n\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Handling request errors\n\t\t\tif (sErrorParam) {\n\t\t\t\taRequests.forEach(function(aEntry) {\n\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\n\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\toMockServer.start();\n\n\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\n\t\t},\n\n\t\t/**\n\t\t * @public returns the mockserver of the app, should be used in integration tests\n\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\n\t\t */\n\t\tgetMockServer: function() {\n\t\t\treturn oMockServer;\n\t\t}\n\t};\n\n});",
		"diploma/analytics/evolution/controller/Main.controller.js": "/* global google */\nsap.ui.define([\n\t\"diploma/analytics/evolution/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n    \"sap/viz/ui5/data/FlattenedDataset\",\n    \"sap/viz/ui5/controls/common/feeds/FeedItem\",\n    \"sap/viz/ui5/format/ChartFormatter\",\n    \"sap/viz/ui5/controls/Popover\",\n    \"sap/m/MessageBox\",\n\t\"diploma/analytics/evolution/model/formatter\"\n], function(BaseController, JSONModel, FlattenedDataset, FeedItem, ChartFormatter, Popover, MessageBox, formatter) {\n\t\"use strict\";\n\t\t\n    var FIORI_LABEL_SHORTFORMAT_10 = \"__UI5__ShortIntegerMaxFraction10\";\n    var FIORI_LABEL_FORMAT_2 = \"__UI5__FloatMaxFraction2\";\n    var FIORI_LABEL_SHORTFORMAT_2 = \"__UI5__ShortIntegerMaxFraction2\";\n    var FIORI_LABEL_DATEFORMAT = \"__UI5__CustomDate\";\n\t\t\t\t\n\t/**\n\t * Transforms a weight into a color.\n\t * @param\t{float}\tfWeight\tThe weight of the data point.\n\t * @returns {string}\tA string with the CSS color.\n\t */\n\tvar fnWeightToColor = function(fWeight) {\n\t\tvar iR, iG, iB;\n\t\tfWeight = Math.min(1, Math.max(1 - fWeight, 0));\n\t\tif (fWeight <=  0.3333) {\n\t\t\tiR = 255;\n\t\t\tiB = 0;\n\t\t\tiG = Math.min(255, Math.ceil(255 * (fWeight / 0.3333)));\n\t\t}\n\t\telse if (fWeight <= 0.6666) {\n\t\t\tiR = 255 - Math.min(255, Math.ceil(255 * (fWeight - 0.3333) / 0.3333));\n\t\t\tiB = 0;\n\t\t\tiG = 255;\n\t\t}\n\t\telse {\n\t\t\tiR = 0;\n\t\t\tiB = Math.min(255, Math.ceil(255 * (fWeight - 0.6666) / 0.3333));\n\t\t\tiG = 255;\n\t\t}\n\t\treturn \"rgb(\" + iR + \",\" + iG + \",\" + iB + \")\";\n\t};\n    \n\treturn BaseController.extend(\"diploma.analytics.evolution.controller.Main\", {\n\t\t\n\t\tformatter: formatter,\n\t\t\n\t\t_measure: null,\n\t\t_transport: null,\n\t\t\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\t\t\n\t\t/**\n\t\t * Called when the worklist controller is instantiated.\n\t\t * @public\n\t\t */\n\t\tonInit: function() {\n\t\t\tthis.byId(\"icoRefresh\").setTooltip(this.getResourceBundle().getText(\"refresh\"));\n\t\t\tthis.setModel(new JSONModel({}), \"data\");\n\t\t\t\n\t\t\tthis._initChartFormatter();\n\t\t\tthis._initScatterChart();\n\t\t\tthis._initLineChart();\n\t\t\tthis.getOwnerComponent().getLoadPromise().then(function(){\n\t\t\t\tthis.byId(\"heatMap\").attachAfterRendering({}, this._updateMap, this);\n\t\t\t}.bind(this));  \n\t\t\t\n\t\t\tvar oVhd = sap.ui.xmlview(\"diploma.analytics.evolution.view.TransportValueHelp\");\n\t\t\tthis.byId(\"page\").addDependent(oVhd);\n\t\t\tthis._vhdc = oVhd.getController();\n\t\t\tthis._vhdc.addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t\tthis._vhdc.attachCancel(this.onVhdCancel, this);\n\t\t\tthis._vhdc.attachConfirm(this.onVhdConfirm, this);\n\t\t},\n\t\t\n        /** Lifecycle hook. Used to show the VHD at the beginning. */\n        onAfterRendering: function() {\n            if (this._measure === null || this._transport === null) {\n                this._vhdc.open();\n            }\n        },\n\t\t\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\t\t\n\t\t/** Called when the user presses the \"change selection\" button. Opens the VHD. */\n\t\tonChangeSelection: function() {\n\t\t    this._vhdc.open();\n\t\t},\n\t\t\n\t\t/** Called when the refresh button is pressed. Reloads the data.*/\n\t\tonRefresh: function() {\n            if (this._measure !== null && this._transport !== null) {\n                this._load(this._transport, this._measure);\n            }\n            if (this.byId(\"tblScheduleEvolution\").getBinding(\"items\")) {\n            \tthis.byId(\"tblScheduleEvolution\").getBinding(\"items\").refresh();\n            }\n\t\t},\n\t\t\n\t\t/** Called when the user presses the cancel button. */\n\t\tonVhdCancel: function() {\n\t\t    if (this._measure === null || this._transport === null) {\n\t\t        this.onNavBack();\n\t\t    }\n\t\t},\n\t\t\n\t\t/** \n\t\t * Called when the user presses the VHD confirm button.\n\t\t * Checks that at least one measure + transport wre selected.\n\t\t * If yes, then it loads the data, else it shows an eror message.\n\t\t * @param   {Event} oEvent  The event object.\n\t\t * @returns {void}\n\t\t */\n\t\t onVhdConfirm: function(oEvent) {\n\t\t     var mParams = oEvent.getParameters();\n\t\t     if (mParams.measure === null ||  mParams.transport === null) {\n\t\t         MessageBox.error(this.getResourceBundle().getText(\"errorInvalidSelection\"));\n\t\t         oEvent.preventDefault();   \n\t\t     }\n\t\t     else {\n\t\t         this._measure = mParams.measure;\n\t\t         this._transport = mParams.transport;\n\t\t         this._load(mParams.transport, mParams.measure);\n\t\t     }\n\t\t },\n\t\t\n\t\t/**\n\t\t * Navigates back in the browser history, if the entry was created by this app.\n\t\t * If not, it navigates to the Fiori Launchpad home page.\n\t\t * @public\n\t\t */\n\t\tonNavBack: function() {\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash(),\n\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\n\t\t\t\t\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t// The history contains a previous entry\n\t\t\t\thistory.go(-1);\n\t\t\t} else {\n\t\t\t\t// Navigate back to FLP home\n\t\t\t\toCrossAppNavigator.toExternal({\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tshellHash: \"#\"\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t\n\t\t/**\n\t\t * Loads the data for the charts.\n\t\t * @private\n\t\t * @param\t{string}\toTransport\tThe transport's properties.\n\t\t * @param\t{string}\toMeasure\tThe measure's properties.\n\t\t * @returns {void}\n\t\t */\n\t\t_load: function(oTransport, oMeasure) {\n\t\t\tvar oContainer = this.byId(\"chartContainer\");\n\t\t\tif (oTransport && oTransport.id) {\n\t\t\t\tthis.byId(\"tblScheduleEvolution\").getBinding(\"items\").filter([\n\t\t\t\t\tnew sap.ui.model.Filter(\"transport\", \"EQ\", oTransport.id)]);\n\t\t\t}\n\t\t\tif (oMeasure && oTransport) {\n\t\t\t\toContainer.setBusy(true);\n\t\t\t\tjQuery.get(\"/destinations/INET_HTTP_DIPLOMA_J0I/services/secondary.xsjs\", {\n\t\t\t\t\t\tentity: \t\"Value\",\n\t\t\t\t\t\taction:\t\t\"Read\",\n\t\t\t\t\t\ttransport:\toTransport.id,\n\t\t\t\t\t\tmeasure:\toMeasure.id\n\t\t\t\t\t}, \n\t\t\t\t\tthis._processData.bind(this, oTransport, oMeasure), \n\t\t\t\t\t\"json\"\n\t\t\t\t).fail(this.getOwnerComponent().getErrorHandler())\n\t\t\t\t.always(oContainer.setBusy.bind(oContainer, false));\n\t\t\t}\n\t\t},\n\t\t\n\t\t/**\n\t\t * Processes the data obtained from the backend.\n\t\t * @private\n\t\t * @param\t{string}\toTransport\tThe transport's properties.\n\t\t * @param\t{string}\toMeasure\tThe measure's properties.\n\t\t * @param\t{object[]}\taData\t    The data retrieved.\n\t\t * @returns {void}\n\t\t */\n\t\t_processData: function(oTransport, oMeasure, aData) {\n\t\t\tvar i, nMax = Number.MIN_VALUE, nMin = Number.MAX_VALUE;\n\t\t\tfor (i = 0; i < aData.length; ++i) {\n\t\t\t\taData[i].date = new Date(aData[i].timestamp);\n\t\t\t\taData[i].value = parseFloat(aData[i].value);\n\t\t\t\tnMax = Math.max(nMax, aData[i].value);\n\t\t\t\tnMin = Math.min(nMin, aData[i].value);\n\t\t\t}\n\t\t\tthis.getModel(\"data\").setData(aData);\n\t\t\tthis._refeshLabels(oTransport, oMeasure);\n\t\t\t\n\t\t\tthis._clearMap();\n\t\t\tvar aMapData = [];\n\t\t\tvar nInterval = Math.abs(nMax - nMin) || 1;\n\t\t\tif (aData.length > 20) {\n    \t\t\tfor (i = 1; i < aData.length; ++i) {\n    \t\t\t\taMapData.push({\n    \t\t\t\t\ttype: \"Feature\",\n    \t\t\t\t\tproperties: {\n    \t\t\t\t\t\tweight: Math.abs((aData[i].value + aData[i - 1].value) / 2 - nMin) / nInterval\n    \t\t\t\t\t},\n    \t\t\t\t\tgeometry: {\n    \t\t\t\t\t\ttype:\t\"LineString\",\n    \t\t\t\t\t\tcoordinates: [\n    \t\t\t\t\t\t\taData[i - 1].position,\n    \t\t\t\t\t\t\taData[i].position\n    \t\t\t\t\t\t]\n    \t\t\t\t\t}\n    \t\t\t\t});\n    \t\t\t}\n    \t\t\tthis._features = aMapData;\n\t\t\t}\n\t\t\telse {\n\t\t\t    for (i = 0; i < aData.length; ++i) {\n\t\t\t        aMapData.push(new google.maps.Marker({\n                        position: {\n                            lat: aData[i].position[1],\n                            lng: aData[i].position[0]\n                        },\n                        icon: {\n                            path: google.maps.SymbolPath.CIRCLE,\n                            scale: 5,\n                            fillColor: fnWeightToColor(Math.abs((aData[i].value- nMin) / nInterval)),\n                            fillOpacity: 1,\n                            strokeColor: \"black\",\n                            strokeWeight: 2\n                        },\n                        draggable: false\n                    }));\n\t\t\t    }\n\t\t\t    this._markers = aMapData;\n\t\t\t}\n\t\t\tthis._setMapData();\n\t\t\tthis._setMapCenter();\n\t\t},\n\t\t\n\t\t/**\n\t\t * Focuses the map to show the data.\n\t\t * @private\n\t\t */\n\t\t_setMapCenter: function() {\n\t\t\tif (this._map && this.byId(\"chartContainer\") && this.byId(\"chartContainer\").getSelectedContent() && \n\t\t\t\tthis.byId(\"chartContainer\").getSelectedContent().getId() === this.createId(\"heatMapCont\")) {\n\t\t\t\tvar oBounds = new google.maps.LatLngBounds();\n\t\t\t\tif (this._features && this._features.length) {\n    \t\t\t\toBounds.extend(new google.maps.LatLng({\n    \t\t\t\t\tlat: this._features[0].geometry.coordinates[0][1],\n    \t\t\t\t\tlng: this._features[0].geometry.coordinates[0][0]\n    \t\t\t\t}));\n    \t\t\t\toBounds.extend(new google.maps.LatLng({\n    \t\t\t\t\tlat: this._features[this._features.length - 1].geometry.coordinates[1][1],\n    \t\t\t\t\tlng: this._features[this._features.length - 1].geometry.coordinates[1][0]\n    \t\t\t\t}));\n\t\t\t\t}\n\t\t\t\telse if (this._markers && this._markers.length) {\n\t\t\t\t    oBounds.extend(this._markers[0].getPosition());\n\t\t\t\t    oBounds.extend(this._markers[this._markers.length - 1].getPosition());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t    return;\n\t\t\t\t}\n\t\t    \tthis._map.fitBounds(oBounds);\n\t\t\t}\n\t\t},\n\t\t\n\t\t/**\n\t\t * Writes the data to the data layer of the map or to the markers.\n\t\t * @private\n\t\t */\n\t\t_setMapData: function() {\n\t\t\tif (this._map) {\n\t\t\t    if (this._features && this._features.length) {\n\t\t\t        this._map.data.addGeoJson({type: \"FeatureCollection\", features: this._features});\n\t\t\t    }\n\t\t\t\telse if (this._markers && this._markers.length) {\n\t\t\t\t    for (var i = 0; i < this._markers.length; ++i) {\n\t\t\t\t        this._markers[i].setMap(this._map);\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\t/**\n\t\t * Clears the map by removing the features and markers.\n\t\t * @private\n\t\t */\n\t\t_clearMap: function() {\n\t\t    if (this._map) {\n\t\t\t\tthis._map.data.forEach(function(feature) {\n\t\t\t        this._map.data.remove(feature);\n\t\t\t    }.bind(this));\n\t\t    }\n\t\t    if (this._markers) {\n\t\t        for (var i = 0; i < this._markers.length; ++i) {\n\t\t            this._markers[i].setMap(null);\n\t\t        }\n\t\t    }\n\t\t    this._features = [];\n\t\t    this._markers = [];\n\t\t},\n\t\t\n\t\t/**\n\t\t * Builds the map if needed and updates its size to fit the container.\n\t\t */\n\t\t_updateMap: function() {\n\t\t\tif (!this._map) {\n\t\t\t\tthis._map = new google.maps.Map(this.byId(\"heatMap\").getDomRef(), {\n\t\t\t\t\tcenter:\t\tnew google.maps.LatLng(45.33,28.20),\n\t\t\t\t\tmapTypeId:\tgoogle.maps.MapTypeId.HYBRID\n\t\t\t\t});\n\t\t\t\tthis._map.data.setStyle(function(oFeature) {\n\t\t\t\t    var fWeight = oFeature.getProperty(\"weight\");\n\t\t\t\t    return {\n\t\t\t\t      strokeColor: fnWeightToColor(fWeight),\n\t\t\t\t      strokeWeight: 3\n\t\t\t\t    };\n\t\t\t\t});\n\t\t\t\tthis._setMapData();\n\t\t\t}\n\t\t\tvar oMap = this.byId(\"heatMap\").getDomRef();\n\t\t\tvar oWrapper = oMap.parentElement;\n\t\t\tvar oContainer = oWrapper.parentElement;\n\t\t\toContainer.style.height = \"100%\";\n\t\t\tvar nHeight = oContainer.clientHeight - oContainer.firstChild.clientHeight;\n\t\t\toWrapper.style.height = nHeight + \"px\";\n\t\t\tgoogle.maps.event.trigger(this._map, \"resize\");\n            this._setMapCenter();\n\t\t},\n\t\t\n\t\t/**\n\t\t * Refreshes the labels of the charts.\n\t\t * @param\t{string}\toTransport\tThe transport's properties.\n\t\t * @param\t{string}\toMeasure\tThe measure's properties.\n\t\t * @returns {void}\n\t\t */\n\t\t_refeshLabels: function(oTransport, oMeasure) {\n\t\t\tvar sLimitKey   = this.getModel().createKey(\"Limits\", {\n\t\t\t        transport:  oTransport.id,\n\t\t\t        measure:    oMeasure.id\n\t\t\t    });\n\t\t\t\n\t\t\tthis.getModel().read(\"/\" + sLimitKey, {\n\t\t\t    success:  function(oData) {\n\t\t\t        var aLines = [];\n\t\t\t        if (oData.upperBound !== null && oData.upperBound !== undefined) {\n    \t\t\t\t    aLines.push({\n        \t\t\t\t\tvalue:\t\tNumber(oData.upperBound),\n                            visible:\ttrue,\n                            size:\t\t1,\n                            type:\t\t\"dotted\",\n                            label: {\n                                text:\tthis.getResourceBundle().getText(\"upperBound\"),\n                                visible: true\n                            }\n        \t\t\t\t});\n        \t\t\t}\n        \t\t\tif (oData.lowerBound !== null && oData.lowerBound !== undefined) {\n        \t\t\t\taLines.push({\n        \t\t\t\t\tvalue:\t\tNumber(oData.lowerBound),\n                            visible:\ttrue,\n                            size:\t\t1,\n                            type:\t\t\"dotted\",\n                            label: {\n                                text:\tthis.getResourceBundle().getText(\"lowerBound\"),\n                                visible: true\n                            }\n        \t\t\t\t});\n        \t\t\t}\n        \t\t\tthis.getView().byId(\"scatterChart\").setVizProperties({\n        \t\t\t\tplotArea: {\n        \t\t\t\t\treferenceLine: {\n        \t\t\t\t\t\tline: {\n        \t\t\t\t\t\t\tvalueAxis: aLines \n        \t\t\t\t\t\t}\n        \t\t\t\t\t}\n        \t\t\t\t}\n        \t\t\t });\n        \t\t\tthis.getView().byId(\"lineChart\").setVizProperties({\n        \t\t\t\tplotArea: {\n        \t\t\t\t\treferenceLine: {\n        \t\t\t\t\t\tline: {\n        \t\t\t\t\t\t\tvalueAxis: aLines \n        \t\t\t\t\t\t}\n        \t\t\t\t\t}\n        \t\t\t\t}\n        \t\t\t });\n\t\t\t    }.bind(this),\n\t\t\t    error: function() { }\n\t\t\t});\n\t\t\t\n\t\t\t\n\t\t\tthis.getView().byId(\"scatterChart\").setVizProperties({\n            \ttitle: {\n            \t\ttext: this.getResourceBundle().getText(\"chartTitle\", [oTransport.name, oMeasure.name])\n            \t},\n                valueAxis: {\n                \ttitle: {\n                \t\ttext: this.getResourceBundle().getText(\"valueTitle\", [oMeasure.name, oMeasure.unit])\n                \t}\n                },\n\t\t\t\tplotArea: {\n\t\t\t\t\treferenceLine: {\n\t\t\t\t\t\tline: {\n\t\t\t\t\t\t\tvalueAxis: [] \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t });\n\t\t\tthis.getView().byId(\"lineChart\").setVizProperties({\n            \ttitle: {\n            \t\ttext: this.getResourceBundle().getText(\"chartTitle\", [oTransport.name, oMeasure.name])\n            \t},\n                valueAxis: {\n                \ttitle: {\n                \t\ttext: this.getResourceBundle().getText(\"valueTitle\", [oMeasure.name, oMeasure.unit])\n                \t}\n                },\n\t\t\t\tplotArea: {\n\t\t\t\t\treferenceLine: {\n\t\t\t\t\t\tline: {\n\t\t\t\t\t\t\tvalueAxis: [] \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t });\n\t\t},\n\t\t\n\t\t/**\n\t\t * Initializes the chart formatter.\n\t\t */\n\t\t_initChartFormatter: function() {\n\t\t\tvar chartFormatter = ChartFormatter.getInstance();\n            chartFormatter.registerCustomFormatter(FIORI_LABEL_SHORTFORMAT_10, function(value) {\n                var fixedInteger = sap.ui.core.format.NumberFormat.getIntegerInstance({style: \"short\",\n                    maxFractionDigits: 10});\n                return fixedInteger.format(value);\n            });\n            chartFormatter.registerCustomFormatter(FIORI_LABEL_FORMAT_2, function(value) {\n                var fixedFloat = sap.ui.core.format.NumberFormat.getFloatInstance({style: \"Standard\",\n                    maxFractionDigits: 2});\n                return fixedFloat.format(value);\n            });\n            chartFormatter.registerCustomFormatter(FIORI_LABEL_SHORTFORMAT_2, function(value) {\n                var fixedInteger = sap.ui.core.format.NumberFormat.getIntegerInstance({style: \"short\",\n                    maxFractionDigits: 2});\n                return fixedInteger.format(value);\n            });\n            chartFormatter.registerCustomFormatter(FIORI_LABEL_DATEFORMAT, function(value) {\n                var fixedDate = sap.ui.core.format.DateFormat.getDateTimeInstance(\"dd.MM.yyyy HH:mm:ss\");\n                return fixedDate.format(value);\n            });\n            sap.viz.api.env.Format.numericFormatter(chartFormatter);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Initializes the scatter chart.\n\t\t */\n\t\t_initScatterChart: function() {\n\t\t\tvar oVizFrame = this.getView().byId(\"scatterChart\");\n            oVizFrame.setVizType(\"timeseries_scatter\");\n            oVizFrame.setUiConfig({\n                \"applicationSet\": \"fiori\"\n            });\n            \n            var oPopOver = new Popover();\n            this.getView().addDependent(oPopOver);\n            oPopOver.connect(oVizFrame.getVizUid());\n            \n            var oDataset = new FlattenedDataset({\n\t\t\t\tdimensions: [{\n\t\t\t\t\tname:\t\tthis.getResourceBundle().getText(\"timeDimension\"),\n\t\t\t\t\tvalue:\t\t\"{date}\",\n\t\t\t\t\tdataType:\t\"date\"\n\t\t\t\t}],\n                measures: [{\n                    name:\tthis.getResourceBundle().getText(\"valueDimension\"),\n                    value:\t\"{value}\"\n                }],\n                data: {\n                    path: \"/\"\n                }\n            });\n            \n            oVizFrame.setVizProperties({\n                general: {\n                    layout: {\n                        padding: 0.04\n                    }\n                },\n                timeAxis: {\n                \tlevels: [\"minute\", \"hour\", \"day\",\"month\"],\n                \ttitle: {\n                \t\tvisible: false,\n                \t\ttext:\t this.getResourceBundle().getText(\"timeDimension\")\n                \t}\n                },\n                valueAxis: {\n                \ttitle: {\n                \t\tvisible: true\n                \t}\n                },\n                plotArea: {\n                    dataLabel: {                        \n                        visible: false,\n                        formatString:FIORI_LABEL_SHORTFORMAT_2,\n                        hideWhenOverlap: true\n                    }\n                },\n                interaction: {\n                \tselectability: {\n                \t\tmode: \"SINGLE\"\n                \t}\n                }\n            });\n\t\t\tvar oFormat = {};\n\t\t\toFormat[this.getResourceBundle().getText(\"timeDimension\")] = FIORI_LABEL_DATEFORMAT;\n\t\t\toPopOver.setFormatString(oFormat);\n\t\t\t\n            oVizFrame.setDataset(oDataset);\n            oVizFrame.setModel(this.getModel(\"data\"));\n            oVizFrame.addFeed(new FeedItem({\n                uid:\t\"timeAxis\",\n                type:\t\"Dimension\",\n                values: [this.getResourceBundle().getText(\"timeDimension\")]\n            }));\n            oVizFrame.addFeed(new FeedItem({\n                uid:\t\"valueAxis\",\n                type:\t\"Measure\",\n                values: [this.getResourceBundle().getText(\"valueDimension\")]\n            }));\n\t\t},\n\t\t\n\t\t/**\n\t\t * Initializes the line chart.\n\t\t */\n\t\t_initLineChart: function() {\n\t\t\tvar oVizFrame = this.getView().byId(\"lineChart\");\n            oVizFrame.setVizType(\"timeseries_line\");\n            oVizFrame.setUiConfig({\n                \"applicationSet\": \"fiori\"\n            });\n            \n            var oPopOver = new Popover();\n            this.getView().addDependent(oPopOver);\n            oPopOver.connect(oVizFrame.getVizUid());\n            \n            var oDataset = new FlattenedDataset({\n\t\t\t\tdimensions: [{\n\t\t\t\t\tname:\t\tthis.getResourceBundle().getText(\"timeDimension\"),\n\t\t\t\t\tvalue:\t\t\"{date}\",\n\t\t\t\t\tdataType:\t\"date\"\n\t\t\t\t}],\n                measures: [{\n                    name:\tthis.getResourceBundle().getText(\"valueDimension\"),\n                    value:\t\"{value}\"\n                }],\n                data: {\n                    path: \"/\"\n                }\n            });\n            \n            oVizFrame.setVizProperties({\n                general: {\n                    layout: {\n                        padding: 0.04\n                    }\n                },\n                timeAxis: {\n                \tlevels: [\"minute\", \"hour\", \"day\",\"month\"],\n                \ttitle: {\n                \t\tvisible: false,\n                \t\ttext:\t this.getResourceBundle().getText(\"timeDimension\")\n                \t},\n                    interval: {\n                        unit: \"auto\"\n                    }\n                },\n                valueAxis: {\n                \ttitle: {\n                \t\tvisible: true\n                \t}\n                },\n                plotArea: {\n                    dataLabel: {                        \n                        visible: false,\n                        formatString:FIORI_LABEL_SHORTFORMAT_2,\n                        hideWhenOverlap: true\n                    },\n                    window: {\n                        start: null,\n                        end: null\n                    }\n                },\n                interaction: {\n                \tselectability: {\n                \t\tmode: \"SINGLE\"\n                \t}\n                }\n            });\n\t\t\tvar oFormat = {};\n\t\t\toFormat[this.getResourceBundle().getText(\"timeDimension\")] = FIORI_LABEL_DATEFORMAT;\n\t\t\toPopOver.setFormatString(oFormat);\n\t\t\t\n            oVizFrame.setDataset(oDataset);\n            oVizFrame.setModel(this.getModel(\"data\"));\n            oVizFrame.addFeed(new FeedItem({\n                uid:\t\"timeAxis\",\n                type:\t\"Dimension\",\n                values: [this.getResourceBundle().getText(\"timeDimension\")]\n            }));\n            oVizFrame.addFeed(new FeedItem({\n                uid:\t\"valueAxis\",\n                type:\t\"Measure\",\n                values: [this.getResourceBundle().getText(\"valueDimension\")]\n            }));\n\t\t}\n\t});\n});",
		"diploma/analytics/evolution/controller/ErrorHandler.js": "sap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/m/MessageBox\"\n], function(Object, MessageBox) {\n\t\"use strict\";\n\n\treturn Object.extend(\"diploma.analytics.evolution.controller.ErrorHandler\", {\n\n\t\t/**\n\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\n\t\t * @class\n\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\n\t\t * @public\n\t\t * @alias diploma.analytics.evolution.controller.ErrorHandler\n\t\t */\n\t\tconstructor: function(oComponent) {\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\n\t\t\tthis._oComponent = oComponent;\n\t\t\tthis._oModel = oComponent.getModel();\n\t\t\tthis._bMessageOpen = false;\n\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\n\n\t\t\tthis._oModel.attachMetadataFailed(function(oEvent) {\n\t\t\t\tvar oParams = oEvent.getParameters();\n\t\t\t\tthis._showMetadataError(oParams.response);\n\t\t\t}, this);\n\n\t\t\tthis._oModel.attachRequestFailed(function(oEvent) {\n\t\t\t\tvar oParams = oEvent.getParameters();\n\n\t\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\n\t\t\t\t// We already cover this case with a notFound target so we skip it here.\n\t\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\n\t\t\t\tif (oParams.response.statusCode !== \"404\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\n\t\t\t\t\t\"Cannot POST\") === 0)) {\n\t\t\t\t\tthis._showServiceError(oParams.response);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t},\n\n\t\t/**\n\t\t * Shows a {@link sap.m.MessageBox} when the metadata call has failed.\n\t\t * The user can try to refresh the metadata.\n\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t * @private\n\t\t */\n\t\t_showMetadataError: function(sDetails) {\n\t\t\tMessageBox.error(\n\t\t\t\tthis._sErrorText, {\n\t\t\t\t\tid: \"metadataErrorMessageBox\",\n\t\t\t\t\tdetails: sDetails,\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\tactions: [MessageBox.Action.RETRY, MessageBox.Action.CLOSE],\n\t\t\t\t\tonClose: function(sAction) {\n\t\t\t\t\t\tif (sAction === MessageBox.Action.RETRY) {\n\t\t\t\t\t\t\tthis._oModel.refreshMetadata();\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this)\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\n\t\t * Only the first error message will be display.\n\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t * @private\n\t\t */\n\t\t_showServiceError: function(sDetails) {\n\t\t\tif (this._bMessageOpen) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._bMessageOpen = true;\n\t\t\tMessageBox.error(\n\t\t\t\tthis._sErrorText, {\n\t\t\t\t\tid: \"serviceErrorMessageBox\",\n\t\t\t\t\tdetails: sDetails,\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\n\t\t\t\t\tonClose: function() {\n\t\t\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\t\t}.bind(this)\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\n\t\t * Only the first error message will be display.\n\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t * @private\n\t\t */\n\t\tshowGenericError: function(oDetails) {\n\t\t\tvar sDetails;\n\t\t\tif (this._bMessageOpen) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._bMessageOpen = true;\n\t\t\tif (typeof oDetails === \"string\") {\n\t\t\t\tsDetails = oDetails;\n\t\t\t}\n\t\t\telse if (oDetails.response) {\n\t\t\t\tsDetails = oDetails.response;\n\t\t\t}\n\t\t\tMessageBox.error(\n\t\t\t\tthis._sErrorText, {\n\t\t\t\t\tid: \"serviceErrorMessageBox\",\n\t\t\t\t\tdetails: sDetails,\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\n\t\t\t\t\tonClose: function() {\n\t\t\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\t\t}.bind(this)\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n});",
		"diploma/analytics/evolution/model/models.js": "sap.ui.define([\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/Device\"\n], function(JSONModel, Device) {\n\t\"use strict\";\n\n\treturn {\n\n\t\tcreateDeviceModel: function() {\n\t\t\tvar oModel = new JSONModel(Device);\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t},\n\n\t\tcreateFLPModel: function() {\n\t\t\tvar fnGetUser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\n\t\t\t\tbIsShareInJamActive = fnGetUser ? fnGetUser().isJamActive() : false,\n\t\t\t\toModel = new JSONModel({\n\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\n\t\t\t\t});\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t}\n\n\t};\n\n});",
		"diploma/analytics/evolution/controller/TransportValueHelp.controller.js": "sap.ui.define([\n\t\"diploma/analytics/evolution/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\"\n], function(BaseController, JSONModel, Filter, FilterOperator) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"diploma.analytics.evolution.controller.TransportValueHelp\", {\n\t\t\n\t\t/**\n\t\t *\tFlag indicating that the value help was not yet opened at all.\n\t\t *  @private\n\t\t *  @type {boolean}\n\t\t */\n\t\t_initial: true,\n\t\t\n\t\t/** Lifecycle method for initialization. */\n\t\tonInit: function() {\n\t\t    this.setModel(new JSONModel(), \"view\");\n\t\t    this._setInitialModelData();\n\t\t},\n\t\t\n\t\t_setInitialModelData: function() {\n\t\t    this.getModel(\"view\").setData({\n\t\t        transport: {\n\t\t            name: \"\",\n\t\t            id:   null\n\t\t        },\n\t\t        measure: null,\n\t\t        advanced: false,\n\t\t        search: {\n\t\t            description: \"\",\n\t\t            route: {\n\t\t                name: \"\",\n\t\t                from: \"\",\n\t\t                to:   \"\"\n\t\t            },\n\t\t            person: {\n\t\t                organization: \"\",\n\t\t                name: \"\"\n\t\t            },\n\t\t            waypoints: {\n\t\t                name:   \"\",\n\t\t                country:\"\",\n\t\t                region: \"\"\n\t\t            },\n\t\t            schedule: {\n\t\t                name:   \"\",\n\t\t                start:  null,\n\t\t                low:    \"\",\n\t\t                high:   \"\"\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t},\n\t\t\n\t\t/**\n\t\t * Adds the given style class directly to the dialog.\n\t\t * @param   {string}    sStyleClass     The style class to be added.\n\t\t * @returns {void}\n\t\t */\n\t\taddStyleClass: function(sStyleClass) {\n\t\t    this.byId(\"vhdTransport\").addStyleClass(sStyleClass);\n\t\t},\n\t\t\n\t\t/** Resets the view. */\n\t\tclear: function() {\n\t\t    this._setInitialModelData();\n\t\t    this.byId(\"selMeasure\").unbindElement();\n\t\t    this.byId(\"tblSearchMain\").getBinding(\"items\").filter([], \"Application\");\n\t\t},\n\t\t\n\t\t/** Opens the dialog. Initializes the model. */\n\t\topen: function() {\n\t\t\tif (this._initial) {\n\t\t\t\tthis._initial = false;\n\t\t\t\tthis.clear();\n\t\t\t}\n\t        this.byId(\"vhdTransport\").open();\n\t\t},\n\t\t\n\t\t/** Closes the dialog. */\n\t\tclose: function() {\n\t\t    this.byId(\"vhdTransport\").close();\n\t\t},\n\t\t\n\t\t/** Toggles between basic and advanced searching. */\n\t\tonToggle: function() {\n\t\t    this.getModel(\"view\").setProperty(\"/advanced\", !this.getModel(\"view\").getProperty(\"/advanced\"));\n\t\t},\n\t\t\n\t\t/** Called when the user presses the cancel button. Closes the dialog. */\n\t\tonCancel: function() {\n\t\t    if (this.fireEvent(\"cancel\", {}, true)) {\n\t\t        this.close();\n\t\t    }\n\t\t},\n\t\t\n\t\t/** Called when the user presses the confirm button */\n\t\tonConfirm: function() {\n\t\t    var oModel = this.getModel(\"view\"),\n\t\t        mParams = {\n\t\t            measure:    null,\n\t\t            transport:  oModel.getObject(\"/transport\") \n\t\t        },\n\t\t        oItem = this.byId(\"selMeasure\").getSelectedItem();\n\t\t    if (oItem) {\n\t\t        mParams.measure = {\n\t\t           id:      oItem.getBindingContext().getProperty(\"id\"),\n\t\t           name:    oItem.getBindingContext().getProperty(\"name\"),\n\t\t           unit:    oItem.getBindingContext().getProperty(\"unit\")\n\t\t        };\n\t\t    }\n\t\t    if (this.fireEvent(\"confirm\", mParams, true)) {\n\t\t        this.close();\n\t\t    }\n\t\t},\n\t\t\n\t\t/**\n\t\t * Attaches an event listener on the \"confirm\" event.\n\t\t * This event is fired when the user presses the confirm button.\n\t\t * @param   {function}  fnHandler   Callback function.\n\t\t * @param   {object=}   oListener   Listener object on which the handler is called.    \n\t\t * @returns {void}\n\t\t */\n\t\tattachConfirm: function(fnHandler, oListener) {\n\t\t    this.attachEvent(\"confirm\", fnHandler, oListener);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Attaches an event listener on the \"cancel\" event.\n\t\t * This event is fired when the user presses the cancel button.\n\t\t * @param   {function}  fnHandler   Callback function.\n\t\t * @param   {object=}   oListener   Listener object on which the handler is called.    \n\t\t * @returns {void}\n\t\t */\n\t\tattachCancel: function(fnHandler, oListener) {\n\t\t    this.attachEvent(\"cancel\", fnHandler, oListener);\n\t\t},\n\t\t\n\t\t/** \n\t\t * Handler method which is called when an item is pressed. \n\t\t * Changes the binding of the select input.\n\t\t * @param   {Event} oEvent  The event object.\n\t\t * @returns {void} \n\t\t */\n\t\tonSelect: function(oEvent) {\n\t\t    var oContext = oEvent.getSource().getBindingContext();\n\t\t    this.byId(\"selMeasure\").bindElement(oContext.getPath());\n\t\t    this.getModel(\"view\").setProperty(\"/transport/id\", oContext.getProperty(\"id\"));\n\t\t    this.getModel(\"view\").setProperty(\"/transport/name\", oContext.getProperty(\"Transport/description\"));\n\t\t},\n\t\t\n\t\t/** Common handler method for all search events of the search fields. Performs the list filtering.*/\n\t\tonSearch: function() {\n\t\t    var oModel = this.getModel(\"view\"),\n\t\t        aFilters = [],\n\t\t        sQuery,\n\t\t        /**\n\t\t         * Helper function. Adds a new \"contains\" filter to the filter list.\n\t\t         * @param   {string}    sViewProperty   The path in the view model where the query is stored.\n\t\t         * @param   {string}    sOdataProperty  The OData model path on which the filtering is done.\n\t\t         * @param\t{boolean}\tbEscape\t\t\tFlag indicating the the value should be escaped.\n\t\t         * @returns {void}\n\t\t         */\n\t\t        fnAddContainsFilter = function(sViewProperty, sOdataProperty, bEscape) {\n\t\t            sQuery = oModel.getProperty(sViewProperty);\n        \t\t    if (sQuery) {\n        \t\t        aFilters.push(new Filter(sOdataProperty, FilterOperator.Contains, \n        \t\t        \tbEscape ? \"'\" + sQuery + \"'\" : sQuery));\n        \t\t    }\n\t\t        },\n\t\t        /**\n\t\t         * Helper function. Increments the given date by one day.\n\t\t         * @param   {Date}  oDate   The input date.\n\t\t         * @returns {Date}  The new, incremented date.\n\t\t         */\n\t\t        fnAddOneDay = function(oDate) {\n\t\t            return new Date(oDate.getFullYear(),oDate.getMonth(),oDate.getDate()+1);\n\t\t        };\n\t\t        \n\t\t    fnAddContainsFilter(\"/search/description\", \"Transport/description\");\n\t\t    if (oModel.getProperty(\"/advanced\")) {\n\t\t        fnAddContainsFilter(\"/search/route/name\", \"Transport/Route/name\", true);\n\t\t        fnAddContainsFilter(\"/search/route/from\", \"fromName\");\n\t\t        fnAddContainsFilter(\"/search/route/to\", \"toName\");\n\t\t        \n\t\t        fnAddContainsFilter(\"/search/waypoints/name\", \"waypointNames\");\n\t\t        fnAddContainsFilter(\"/search/waypoints/country\", \"waypointCountries\");\n\t\t        fnAddContainsFilter(\"/search/waypoints/region\", \"waypointRegions\");\n\t\t        \n\t\t        fnAddContainsFilter(\"/search/schedule/name\", \"Transport/Schedule/name\", true);\n\t            sQuery = oModel.getProperty(\"/search/schedule/low\");\n    \t\t    if (sQuery && !isNaN(sQuery)) {\n    \t\t        aFilters.push(new Filter(\"totalDuration\", FilterOperator.GE, parseInt(sQuery, 10)));\n    \t\t    }\n\t            sQuery = oModel.getProperty(\"/search/schedule/high\");\n    \t\t    if (sQuery && !isNaN(sQuery)) {\n    \t\t        aFilters.push(new Filter(\"totalDuration\", FilterOperator.LE, parseInt(sQuery, 10)));\n    \t\t    }\n    \t\t    sQuery = oModel.getProperty(\"/search/schedule/start\");\n    \t\t    if (sQuery) {\n    \t\t        aFilters.push(new Filter(\"Transport/tWhen\", FilterOperator.BT, sQuery, fnAddOneDay(sQuery)));\n    \t\t    }\n\t\t        \n\t\t        fnAddContainsFilter(\"/search/person/name\", \"persons\");\n\t\t        fnAddContainsFilter(\"/search/person/organization\", \"organizations\");\n\t\t    }\n\t\t    \n\t\t    this.byId(\"tblSearchMain\").getBinding(\"items\").filter(aFilters, \"Application\");\n\t\t}\n\t\t\n\t});\n});",
		"diploma/analytics/evolution/view/Main.view.xml": "<mvc:View controllerName=\"diploma.analytics.evolution.controller.Main\" xmlns:footerbar=\"sap.ushell.ui.footerbar\"\n\txmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\" xmlns=\"sap.m\" xmlns:sc=\"sap.suite.ui.commons\"\n\txmlns:core=\"sap.ui.core\" xmlns:viz=\"sap.viz.ui5.controls\">\n\t<semantic:FullscreenPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"true\" title=\"{i18n>mainViewTitle}\" >\n\t\t<semantic:content>\n\t\t\t<sc:ChartContainer showFullScreen=\"false\" showPersonalization=\"false\" id=\"chartContainer\"\n\t\t\t\tautoAdjustHeight=\"true\" showLegend=\"false\" showLegendButton=\"false\" busyIndicatorDelay=\"0\" >\n\t\n\t\t\t\t<sc:dimensionSelectors>\n\t\t\t\t\t<Button\n\t\t\t\t\t    press=\"onChangeSelection\"\n\t\t\t\t\t    text=\"{i18n>changeSelection}\" \n\t\t\t\t        icon=\"sap-icon://multi-select\" \n\t\t\t\t        type=\"Transparent\"/>\n\t\t\t\t</sc:dimensionSelectors>\n\t\t\t\n\t\t\t\t<sc:customIcons>\n\t\t\t\t\t<core:Icon src=\"sap-icon://refresh\" press=\"onRefresh\" width=\"2em\" alt=\"{i18n>refesh}\" id=\"icoRefresh\"/> \n\t\t\t\t</sc:customIcons>\n\t\n\t\t\t\t<sc:content>\n\t\t\t\t\t<sc:ChartContainerContent icon=\"sap-icon://line-chart\"  title=\"{i18n>lineChart}\"> \n\t\t\t\t\t\t<sc:content>\n\t\t\t\t\t\t\t<viz:VizFrame id=\"lineChart\" height=\"100%\" width=\"100%\" uiConfig=\"{applicationSet:'fiori'}\" />\n\t\t\t\t\t\t</sc:content>\n\t\t\t\t\t</sc:ChartContainerContent>\t\n\t\t\t\t\t<sc:ChartContainerContent icon=\"sap-icon://scatter-chart\"  title=\"{i18n>scatterChart}\"> \n\t\t\t\t\t\t<sc:content>\n\t\t\t\t\t\t\t<viz:VizFrame id=\"scatterChart\" height=\"100%\" width=\"100%\" uiConfig=\"{applicationSet:'fiori'}\" />\n\t\t\t\t\t\t</sc:content>\n\t\t\t\t\t</sc:ChartContainerContent>\t\n\t\t\t\t\t<sc:ChartContainerContent icon=\"sap-icon://map-2\"  title=\"{i18n>heatMap}\" id=\"heatMapCont\"> \n\t\t\t\t\t\t<sc:content>\n\t\t\t\t\t\t\t<core:HTML id=\"heatMap\" \n\t\t\t\t\t\t\t\tcontent=\"&lt;div style=&quot;height:100%;width:100%&quot; /&gt;\" />\n\t\t\t\t\t\t</sc:content>\n\t\t\t\t\t</sc:ChartContainerContent>\t\n\t\t\t\t\t<sc:ChartContainerContent icon=\"sap-icon://time-entry-request\"  title=\"{i18n>scheduleEvolution}\"> \n\t\t\t\t\t\t<sc:content>\n\t\t\t\t\t\t\t<Table id=\"tblScheduleEvolution\" headerText=\"{i18n>tblScheduleEvolutionHeader}\" items=\"{\n\t\t\t\t\t\t\t\tpath:\t'/ScheduleEvolutions',\n\t\t\t\t\t\t\t\tsorter:\t{\n\t\t\t\t\t\t\t\t\tpath:\t'timestamp'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tparameters: {\n\t\t\t\t\t\t\t\t\texpand:\t'Location'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\">\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>colLocationNameText}\"/>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>colLocationTimestampText}\"/>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t\t<Text text=\"{Location/name}\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"{\n\t\t\t\t\t\t\t\t\t\tpath: 'timestamp', \n\t\t\t\t\t\t\t\t\t\tformatter: '.formatter.tsToDateTimeMedium'\n\t\t\t\t\t\t\t\t\t}\"/>\n\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</sc:content>\n\t\t\t\t\t</sc:ChartContainerContent>\t\n\t\t\t\t</sc:content>\t\n\t\t\t</sc:ChartContainer>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"diploma/analytics/evolution/view/App.view.xml": "<mvc:View controllerName=\"diploma.analytics.evolution.controller.App\" displayBlock=\"true\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<App busy=\"{main>/busy}\" busyIndicatorDelay=\"{main>/delay}\" id=\"app\"/>\n</mvc:View>",
		"diploma/analytics/evolution/view/TransportValueHelp.view.xml": "<mvc:View controllerName=\"diploma.analytics.evolution.controller.TransportValueHelp\" \n    xmlns:mvc=\"sap.ui.core.mvc\" \n    xmlns:core=\"sap.ui.core\" \n    xmlns:form=\"sap.ui.layout.form\"\n    xmlns=\"sap.m\">\n\t<Dialog id=\"vhdTransport\"\n\t    contentHeight=\"75%\"\n\t\tcontentWidth=\"43rem\" \n\t\tstretch=\"{device>/system/phone}\"\n\t    title=\"{i18n>vhdTransportTitle}\" >\n\t    <VBox>\n\t        \n\t        <HBox class=\"sapUiTinyMargin\" fitContainer=\"true\">\n\t            <Input enabled=\"false\" \n\t                width=\"100%\" \n\t                value=\"{view>/transport/name}\">\n\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t<FlexItemData growFactor=\"1\" />\n\t\t\t\t\t</layoutData>\n\t            </Input>\n\t            <Select id=\"selMeasure\" \n\t                width=\"100%\" \n\t                selectedKey=\"{view>/measure}\"\n\t                items=\"{path: 'Measures', sorter: {path: 'name'}}\">\n\t                <core:Item text=\"{name}\" key=\"{id}\" />\n\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t<FlexItemData growFactor=\"1\" />\n\t\t\t\t\t</layoutData>\n\t            </Select>\n\t        </HBox>\n\t        <Toolbar id=\"tlbMainSearch\">\n\t            <SearchField value=\"{view>/search/description}\"\n\t                placeholder=\"{i18n>searchByDescription}\"\n\t                search=\"onSearch\"/>\n\t            <ToolbarSpacer/>\n\t            <Button id=\"btnAdvancedSearch\" \n\t                type=\"Transparent\"\n\t                text=\"{= ${view>/advanced} ? ${i18n>hideAdvanced} : ${i18n>showAdvanced} }\"\n\t                press=\"onToggle\"/>\n\t        </Toolbar>\n\t        <IconTabBar visible=\"{view>/advanced}\" class=\"sapUiNoMarginTop sapUiNoMarginEnd\">\n\t            <items>\n\t                <IconTabFilter text=\"{i18n>itfRouteText}\">\n        \t            <form:SimpleForm\n                \t\t\tmaxContainerCols=\"2\" editable=\"true\"\n                \t\t\tlayout=\"ResponsiveGridLayout\"\n                \t\t\tlabelSpanL=\"4\"  labelSpanM=\"4\"\n                \t\t\temptySpanL=\"0\"  emptySpanM=\"0\"\n                \t\t\tcolumnsL=\"2\"    columnsM=\"2\"\n                \t\t\tclass=\"editableForm sapUiNoMarginTop sapUiNoMarginEnd\">\n                \t\t\t<form:content>\n                \t\t\t    <Label text=\"{i18n>transportRouteName}\"/>\n        \t                    <SearchField value=\"{view>/search/route/name}\" search=\"onSearch\" />\n                \t\t\t    <Label text=\"{i18n>transportRouteFrom}\"/>\n        \t                    <SearchField value=\"{view>/search/route/from}\" search=\"onSearch\"/>\n                \t\t\t    <Label text=\"{i18n>transportRouteTo}\"/>\n        \t                    <SearchField value=\"{view>/search/route/to}\" search=\"onSearch\"/>\n            \t\t\t    </form:content>\n            \t\t    </form:SimpleForm>\n\t                </IconTabFilter>\n\t                <IconTabFilter text=\"{i18n>itfWaypointsText}\">\n        \t            <form:SimpleForm\n                \t\t\tmaxContainerCols=\"2\" editable=\"true\"\n                \t\t\tlayout=\"ResponsiveGridLayout\"\n                \t\t\tlabelSpanL=\"4\"  labelSpanM=\"4\"\n                \t\t\temptySpanL=\"0\"  emptySpanM=\"0\"\n                \t\t\tcolumnsL=\"2\"    columnsM=\"2\"\n                \t\t\tclass=\"editableForm\">\n                \t\t\t<form:content>\n                \t\t\t    <Label text=\"{i18n>transportWaypointName}\"/>\n        \t                    <SearchField value=\"{view>/search/waypoints/name}\" search=\"onSearch\" />\n                \t\t\t    <Label text=\"{i18n>transportWaypointRegion}\"/>\n        \t                    <SearchField value=\"{view>/search/waypoints/region}\" search=\"onSearch\"/>\n                \t\t\t    <Label text=\"{i18n>transportWaypointCountry}\"/>\n        \t                    <SearchField value=\"{view>/search/waypoints/country}\" search=\"onSearch\"/>\n            \t\t\t    </form:content>\n            \t\t    </form:SimpleForm>\n\t                </IconTabFilter>\n\t                <IconTabFilter text=\"{i18n>itfScheduleText}\">\n        \t            <form:SimpleForm\n                \t\t\tmaxContainerCols=\"2\" editable=\"true\"\n                \t\t\tlayout=\"ResponsiveGridLayout\"\n                \t\t\tlabelSpanL=\"4\"  labelSpanM=\"4\"\n                \t\t\temptySpanL=\"0\"  emptySpanM=\"0\"\n                \t\t\tcolumnsL=\"2\"    columnsM=\"2\"\n                \t\t\tclass=\"editableForm sapUiNoMarginTop sapUiNoMarginEnd\">\n                \t\t\t<form:content>\n                \t\t\t    <Label text=\"{i18n>transportScheduleName}\"/>\n        \t                    <SearchField value=\"{view>/search/schedule/name}\" search=\"onSearch\" />\n                \t\t\t    <Label text=\"{i18n>transportScheduleStart}\"/>\n                \t\t\t    <DatePicker dateValue=\"{view>/search/schedule/start}\" \n                \t\t\t        displayFormat=\"short\" \n                \t\t\t        change=\"onSearch\" />\n                \t\t\t    <Label text=\"{i18n>transportScheduleDurationLow}\"/>\n        \t                    <SearchField value=\"{\n        \t                        path: 'view>/search/schedule/low',\n        \t                        type: 'sap.ui.model.Integer',\n        \t                        constraints: {minimum: 0}\n    \t                        }\" search=\"onSearch\"/>\n                \t\t\t    <Label text=\"{i18n>transportScheduleDurationHigh}\"/>\n        \t                    <SearchField value=\"{\n        \t                        path: 'view>/search/schedule/high',\n        \t                        type: 'sap.ui.model.Integer',\n        \t                        constraints: {minimum: 0}\n    \t                        }\" search=\"onSearch\"/>\n            \t\t\t    </form:content>\n            \t\t    </form:SimpleForm>\n\t                </IconTabFilter>\n\t                <IconTabFilter text=\"{i18n>itfPersonText}\">\n        \t            <form:SimpleForm\n                \t\t\tmaxContainerCols=\"2\" editable=\"true\"\n                \t\t\tlayout=\"ResponsiveGridLayout\"\n                \t\t\tlabelSpanL=\"4\"  labelSpanM=\"4\"\n                \t\t\temptySpanL=\"0\"  emptySpanM=\"0\"\n                \t\t\tcolumnsL=\"2\"    columnsM=\"2\"\n                \t\t\tclass=\"editableForm sapUiNoMarginTop sapUiNoMarginEnd\">\n                \t\t\t<form:content>\n                \t\t\t    <Label text=\"{i18n>transportOrganization}\"/>\n        \t                    <SearchField value=\"{view>/search/person/organization}\" search=\"onSearch\" />\n                \t\t\t    <Label text=\"{i18n>transportPersonName}\"/>\n        \t                    <SearchField value=\"{view>/search/person/name}\" search=\"onSearch\"/>\n            \t\t\t    </form:content>\n            \t\t    </form:SimpleForm>\n\t                </IconTabFilter>\n    \t\t    </items>\n\t        </IconTabBar>\n\t        <Table id=\"tblSearchMain\"\n\t            growing=\"true\"\n\t            items=\"{path: '/ExpandedTransports', sorter: {path: 'Transport/description'}, parameters: {expand: 'Transport'}}\">\n\t            <columns>\n\t                <Column><Label text=\"{i18n>transportDescription}\"/></Column>\n\t                <Column><Label text=\"{i18n>transportDate}\"/></Column>\n\t                <Column minScreenWidth=\"Tablet\" demandPopin=\"true\"><Label text=\"{i18n>transportFrom}\"/></Column>\n\t                <Column minScreenWidth=\"Tablet\" demandPopin=\"true\"><Label text=\"{i18n>transportTo}\"/></Column>\n\t            </columns>\n\t            <items>\n\t                <ColumnListItem type=\"Active\" press=\"onSelect\">\n\t                    <cells>\n\t                        <Text text=\"{Transport/description}\"/>\n\t                        <Text text=\"{\n                    \t        path: 'Transport/tWhen', \n                    \t        type: 'sap.ui.model.type.DateTime',\n                    \t        format: {style: 'short'}\n                \t        }\"/>\n\t                        <Text text=\"{fromName}\"/>\n\t                        <Text text=\"{toName}\"/>\n\t                    </cells>\n\t                </ColumnListItem>\n\t            </items>\n\t        </Table>\n\t    </VBox>\n\t    <buttons>\n\t        <Button text=\"{i18n>confirm}\" press=\"onConfirm\"/>\n\t        <Button text=\"{i18n>cancel}\" press=\"onCancel\"/>\n\t        <Button text=\"{i18n>reset}\" press=\"clear\"/>\n\t    </buttons>\n\t</Dialog>\n</mvc:View>"
	}
});