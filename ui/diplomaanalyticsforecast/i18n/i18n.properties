title=Predictive Analysis: Forecast
appTitle = Predictive Analysis
appDescription=Performs forecasting based on user input.
helpTooltip=Help
invalidFieldValues=Some parameters have invalid values. Please correct them before proceeding.
noFilter=Please select a filter value first!

inputFormTitle=Input Selection
controlFormTitle=Control Parameters

#XLBL
showAdvanced=Advanced

#XLBL
hideAdvanced=Basic

#XTIT
dlgVariantsTitle=Variants

#XBTN
btnCloseText=Close

#XTXT
itmVariantDefaultName=New Variant

#XTOL
btnSaveTooltip=Save current variant

#XTOL
btnLoadTooltip=Load selected variant

#XTOL
btnDeleteTooltip=Delete selected variant

#XTOL
btnCloseTooltip=Close

#XTIT
dlgValueHelpTitle=Search for {0}

#XPLD
seaSimplePlaceholderName=Search by Name...

#XPLD
seaSimplePlaceholderDescription=Search by Description...

#XLBL
lblRouteLocationFromText=Departure

#XLBL
lblRouteLocationToText=Destination

#XHDR
colRouteNameHeader=Name

#XHDR
colLocationFromHeader=Departure

#XHDR
colLocationToHeader=Destination

#XLBL
lblScheduleRouteNameText=Route

#XHDR
colScheduleNameHeader=Name

#XHDR
colScheduleRouteHeader=Route

#XLBL
lblPersonEmailText=Email

#XLBL
lblPersonOrganizationText=Organization

#XHDR
colPersonNameHeader=Name

#XHDR
colPersonEmailHeader=Email

#XHDR
colPersonOrganizationHeader=Organization

#XHDR
colOrganizationNameHeader=Organization Name

inputSource=Data source
inputMeasure=Measure name
inputBeginDate=From
inputEndDate=Until
inputBreakDown=Break Down By
inputFilterType=Filter By
inputFilterValue=Filter Value
execute=Execute
restart=Restart
errorMessage=An error has occurred during processing.

breakDownDay=Day
breakDownMonth=Month
breakDownYear=Year

filterTypeRoute=Route
filterTypeSchedule=Schedule
filterTypePerson=Person
filterTypeOrganization=Organization

timeDimension=Time
controlAlgorithm=Forecast algorithm

algorithmArimaInfo=The auto regressive integrated moving average (ARIMA) algorithm is famous in econometrics, statistics and time series analysis. An ARIMA model can be written as ARIMA (p, d, q), where p refers to the auto regressive order, d refers to integrated order, and q refers to the moving average order. This algorithm helps you understand the time series data better and predict future data in the series.
algorithmArimaName=ARIMA
algorithmBrownInfo=Exponential smoothing is a rule of thumb technique for smoothing time series data, particularly for recursively applying as many as three low-pass filters with exponential window functions. Such techniques have broad application that is not intended to be strictly accurate or reliable for every situation. The brown exponential smoothing model is suitable to model the time series with trend but without seasonality.
algorithmBrownName=Brown Exponential Smoothing
algorithmCrostonInfo=The Croston’s method is a forecast strategy for dealing with slow moving or intermittent time series items. The Croston’s method consists of two steps. First, separate exponential smoothing estimates are made of the average size of a. Second, the average interval between items is calculated. This is then used in a form of the constant model to predict the future items.
algorithmCrostonName=Croston's Method
algorithmDoubleInfo=Double Exponential Smoothing model is suitable to model the time series with trend but without seasonality. In the model there are two kinds of smoothed quantities: smoothed signal and smoothed trend.
algorithmDoubleName=Double Exponential Smoothing
algorithmForecastInfo=Forecast smoothing is used to calculate optimal parameters of a set of available smoothing functions, including Single Exponential Smoothing, Double Exponential Smoothing, and Triple Exponential Smoothing. This function also outputs the forecasting results based on these optimal parameters. This optimization is computed by exploring of the parameter space which includes all possible parameter combinations.
algorithmForecastName=Forecast Smoothing
algorithmLrInfo=Linear regression with damped trend and seasonal adjust is an approach for forecasting when a time series presents a trend. The current implementation provides a damped smoothing parameter for smoothing the forecasted values. This dampening parameter avoids the over-casting due to the “indefinitely” increasing or decreasing trend. In addition, if the time series presents seasonality, you can deal with it by providing the length of the periods in order to adjust the forecasting results. 
algorithmLrName=Linear Regression
algorithmNoiseInfo=This algorithm is used to identify whether a time series is a white noise series. If white noise exists in the raw time series, the algorithm returns the value of 1. If not, the value of 0 will be returned.
algorithmNoiseName=White Noise Test
algorithmSeasonInfo=This algorithm is used to test whether a time series has a seasonality or not. If it does, the corresponding additive or multiplicative seasonality model is identified, and the de-seasonalized series (both trend and seasonality are eliminated) is given.
algorithmSeasonName=Seasonality Test
algorithmSingleInfo=Single Exponential Smoothing model is suitable to model the time series without trend and seasonality. In the model, the smoothed value is the weighted sum of previous smoothed value and previous observed value.
algorithmSingleName=Single Exponential Smoothing
algorithmTrendInfo=This algorithm is used to identify whether a time series has an upward or downward trend or not, and calculate the de-trended time series.
algorithmTrendName=Trend Test
algorithmTripleInfo=Triple exponential smoothing is used to handle the time series data containing a seasonal component. This method is based on three smoothing equations: stationary component, trend, and seasonal. Both seasonal and trend can be additive or multiplicative.
algorithmTripleName=Triple Exponential Smoothing

controlArimaDInfo=Value of the differentiation order.
controlArimaDName=D
controlArimaMethodCSS=Conditional sum of squares (CSS)
controlArimaMethodInfo=Parameter estimation method.
controlArimaMethodMLE=Maximum likelihood estimation (MLE)
controlArimaMethodName=Method
controlArimaPInfo=Value of the auto regression order.
controlArimaPName=P
controlArimaQInfo=Value of the moving average order.
controlArimaQName=Q
controlArimaSeasonalDInfo=Value of the differentiation order for seasonal part.
controlArimaSeasonalDName=Seasonal D
controlArimaSeasonalPInfo=Value of the auto regression order for seasonal part.
controlArimaSeasonalPName=Seasonal P
controlArimaSeasonalPeriodInfo=Value of the seasonal period.
controlArimaSeasonalPeriodName=Seasonal Period
controlArimaSeasonalQInfo=Value of the moving average order for seasonal part.
controlArimaSeasonalQName=Seasonal Q
controlArimaStationaryInfo=Flag indicating if the result may be stationary.
controlArimaStationaryName=Stationary

controlBrownAdaptiveMethodInfo=Flag indicating if the adaptive method should be used instead of the regular brown exponential smoothing.
controlBrownAdaptiveMethodName=Adaptive Method

controlCommonAlphaInfo=The smoothing constant alpha.
controlCommonAlphaName=Alpha
controlCommonBetaInfo=Value of the smoothing constant beta.
controlCommonBetaName=Beta
controlCommonCycleInfo=The length of a seasonal cycle (e.g. for an inteval between time points of one month, a quaterly cycle would have value 3).
controlCommonCycleName=Cycle Length
controlCommonDampedInfo=Indicates whether or not to use a damping model.
controlCommonDampedName=Damped
controlCommonDeltaInfo=Delta weight parameter value.
controlCommonDeltaName=Delta
controlCommonExpostInfo=Flag indicating if the ex-post values should also be part of the output.
controlCommonExpostName=Ex-post Flag
controlCommonForcastNumInfo=Number of values to be forecast.
controlCommonForcastNumName=Forecast Number
controlCommonGammaInfo=Value of the smoothing constant gamma.
controlCommonGammaName=Gamma
controlCommonIgnoreZeroInfo=Flag indicating whether to ignore or not the zeros in the input data.
controlCommonIgnoreZeroName=Ignore Zero
controlCommonInitialMethodFirst=First Initialization Method
controlCommonInitialMethodInfo=Initialization method for trend and seasonal.
controlCommonInitialMethodName=Initial Method
controlCommonInitialMethodSecond=Second Initialization Method
controlCommonMeasureET=Error total (ET)
controlCommonMeasureInfo=Measures are used to check the accuracy of the forecast made by the algorithms. They are calculated based on the difference between the historical values and the forecasted values of the fitted model. 
controlCommonMeasureMAD=Mean absolute deviation (MAD)
controlCommonMeasureMAPE=Mean absolute percentage error (MAPE)
controlCommonMeasureMASE=Out-of-sample mean absolute scaled error (MASE)
controlCommonMeasureMPE=Mean percentage error (MPE)
controlCommonMeasureMSE=Mean squared error (MSE)
controlCommonMeasureName=Measure name
controlCommonMeasureRMSE=Root mean squared error (RMSE)
controlCommonMeasureSMAPE=Symmetric mean absolute percentage error (SMAPE)
controlCommonMeasureWMAPE=Weighted mean absolute percentage error (WMAPE)
controlCommonPhiInfo=Value of the damped smoothing constant.
controlCommonPhiName=Phi
controlCommonSeasonalAdditive=Additive seasonality
controlCommonSeasonalInfo=Parameter indicating the expected type of seasonality.
controlCommonSeasonalMultiplicative=Multiplicative seasonality
controlCommonSeasonalName=Seasonality

controlCrostonMethodConstant=Constant
controlCrostonMethodInfo=Specifies the method (model) used to forecast the future values.
controlCrostonMethodName=Method
controlCrostonMethodSporadic=Sporadic

controlForecastSAccuracyMeasureInfo=The criterion used for the optimization. 
controlForecastSAccuracyMeasureMAPE=Mean absolute percentage error (MAPE)
controlForecastSAccuracyMeasureMSE=Mean squared error (MSE)
controlForecastSAccuracyMeasureName=Accuracy Measure
controlForecastSModelDESM=Double Exponential Smoothing (DESM)
controlForecastSModelInfo=The name of the model which should be targeted.
controlForecastSModelName=Model Name
controlForecastSModelSESM=Single Exponential Smoothing (SESM)
controlForecastSModelTESM=Triple Exponential Smoothing (TESM)
controlForecastSOptimizationMethodHeuristic=Heuristic optimization
controlForecastSOptimizationMethodInfo=The method which is used to select the best parameters for the chosen model.
controlForecastSOptimizationMethodLBFGS=LBFGS-B optimization 
controlForecastSOptimizationMethodName=Optimization Method
controlForecastSOptimizerInfo=The maximum time (in seconds) that the optimization algorithm is allowed to run.
controlForecastSOptimizerName=Optimizer Time Budget
controlForecastSSelectionInfo=This flag instructs the algorithm to automatically select the best amongst the three available models (SESM, DESM and TESM). If the flag is not set, the user-defined model is used directly.
controlForecastSSelectionName=Automatic Model Selection
controlForecastSTrainingInfo=The ratio of the input data that should be used to train the algorithm.
controlForecastSTrainingName=Training Ratio

controlLinearAffectFutureInfo=Specifies whether the damped trend affects the only the future value or also the historical values.
controlLinearAffectFutureName=Affect Future Only
controlLinearPeriodsInfo=The length of the periods.
controlLinearPeriodsName=Period Length
controlLinearSeasonHandleAverage=Average method
controlLinearSeasonHandleInfo=Method used for calculating the index value in each of the periods.
controlLinearSeasonHandleLinear=Fitting linear regression
controlLinearSeasonHandleName=Seasonality Handling Method
controlLinearSeasonalityAuto=Automatically detect
controlLinearSeasonalityInfo=Specifies whether the data presents seasonality and how should the length of the periods be computed if it exists.
controlLinearSeasonalityName=Seasonality Type
controlLinearSeasonalityNone=Non-seasonality
controlLinearSeasonalityUser=User-specified 
controlLinearTrendInfo=Damped trend factor. 
controlLinearTrendName=Trend Factor

controlSeasonalityTestAlphaInfo=The threshold for the autocorrelation coefficient. 
controlSeasonalityTestAlphaName=Alpha

controlSingleAdaptive=Adaptive-response-rate SESM
controlSingleInfo=Indicates what method should be used to build the model.
controlSingleName=Method
controlSingleSingle=Single exponential smoothing (SESM)

controlTrendTestAlphaInfo=Tolerance probability for MK test.
controlTrendTestAlphaName=Alpha
controlTrendTestMethodDifference=Difference Sign Test
controlTrendTestMethodInfo=The method used for identifying the trend.
controlTrendTestMethodMK=Rank (MK) Test
controlTrendTestMethodName=Method

controlWhiteNoiseLagInfo=Specifies the lag autocorrelation coefficient that the statistic will be based on.
controlWhiteNoiseLagName=Lag
controlWhiteNoiseProbabilityInfo=The confidence level used for chi-square distribution.
controlWhiteNoiseProbabilityName=Probability

helpAlgorithmChildHeader=Available Algorithms
helpAlgorithmChildIntro=Forecast Algorithm
helpAlgorithmFieldTitle=Algorithm Parameter
helpAlgorithmHeader=Forecast Algorithm
helpAlgorithmInfo=The selection allows the user to specify which algorithm should be applied to the data. Each algorithm has each own's set of parameters which need to be maintained by the user.
helpAlgorithmTitle=Algorithms

helpArimaFieldIntro=ARIMA Parameter
helpBrownexpsmoothFieldIntro=Brown Exponential Smoothing Parameter
helpCrostonFieldIntro=Croston's Method Parameter
helpDoublesmoothFieldIntro=Double Exponential Smoothing Parameter
helpForecastsmoothingFieldIntro=Forecast Smoothing Parameter
helpLrwithseasonaladjustFieldIntro=Linear Regression Parameter
helpSeasonalitytestFieldIntro=Seasonality Test Parameter
helpSinglesmoothFieldIntro=Single Exponential Smoothing Parameter
helpTrendtestFieldIntro=Trend Test Parameter
helpTriplesmoothFieldIntro=Triple Exponential Smoothing Parameter
helpWhitenoisetestFieldIntro=White Noise Test Parameter

averageValueName=Limit Offsets
helpInputSourceAverage=Limit Offsets
helpInputSourceAverageHeader=Limit Offsets
helpInputSourceAverageInfo=Selects data from the average read value offset from the limit for the selected measure.

helpInputSourceLimit=Limit Infringements
limitValueName=Limit Infringements
helpInputSourceLimitHeader=Limit Infringements
helpInputSourceLimitInfo=Selects data from the count of limit infringements for the selected measure.

sourceValueName=Value Readings
helpInputSourceValue=Value Readings
helpInputSourceValueHeader=Value Readings
helpInputSourceValueInfo=Selects data directly from the reported value tables for a given measure.

helpInputBreakValue=Break Down Type
helpInputBreakHeader=Break Down Type
helpInputBreakChildHeader=Break Down Types
helpInputBreakInfo=Selects the level at which the data should be aggregated.
helpInputBreakTypesIntro=Break Down Type
helpInputBreakTitle=Break Down Type

helpBreakDownDay=Day
helpBreakDownMonth=Month
helpBreakDownYear=Year

helpInputBreakDayHeader=Day
helpInputBreakDayInfo=Aggregates data per day.
helpInputBreakMonthHeader=Month
helpInputBreakMonthInfo=Aggregates data per month.
helpInputBreakYearHeader=Year
helpInputBreakYearInfo=Aggregates data per year.

helpInputFilterTypeHeader=Filter Type
helpInputFilterTypeInfo=Defines how to filter the data.
helpInputFilterTypeChildrenHeader=Filter Types

helpFilterTypeRoute=Route
helpFilterTypeSchedule=Schedule
helpFilterTypePerson=Person
helpFilterTypeOrganization=Organization
helpInputFilterTypeTitle=Filter Type
helpInputFilterTypesIntro=Filter Type

helpInputFilterTypeRouteHeader=Route
helpInputFilterTypeRouteInfo=Filter the data by the route of the transport(s).

helpInputFilterTypeScheduleHeader=Schedule
helpInputFilterTypeScheduleInfo=Filter the data by the schedule of the transport(s).

helpInputFilterTypePersonHeader=Person
helpInputFilterTypePersonInfo=Filter the data by the persons involved in the transport(s).

helpInputFilterTypeOrganizationHeader=Organization
helpInputFilterTypeOrganizationInfo=Filter the data by the organizations involved in the transport(s).

helpInputFilterValueHeader=Filter Value
helpInputFilterValueInfo=Value used for filtering.

helpInputBeginHeader=Begin Date
helpInputBeginInfo=The earliest date from which the input data should be considered.
helpInputCriteriaIntro=Selection Criteria
helpInputCriteriaTitle=Criteria
helpInputEndHeader=End Date
helpInputEndInfo=The latest date until which the input data should be considered.

helpInputMeasureHeader=Measure
helpInputMeasureInfo=The measure for which values should be retrieved from the database.
helpInputOffsetHeader=Offset
helpInputOffsetInfo=Flag indicating whether or not to use the offset values for limit violations instead of limit viloation counts.
helpInputSourceChildHeader=Available Sources
helpInputSourceChildIntro=Data Source
helpInputSourceCriteriaHeader=Selection Criteria
helpInputSourceTitle=Data Source
helpInputSourceHeader=Data Source
helpInputSourceInfo=Specifies the data source that should be used as input for the forecast algorithm.
helpInputTransportHeader=Transport
helpInputTransportInfo=The transport for which read values should be selected.

outputMeasureDate=Timestamp
outputMeasureError=Eror
outputMeasureHigh80=Forecast High (80)
outputMeasureHigh95=Forecast High (95)
outputMeasureLow80=Forecast Low (80)
outputMeasureLow95=Forecast Low (95)
outputMeasureMean=Forecast Mean
outputMeasureValue=Input Value
outputStatsCycle=Cycle Number
outputStatsMode=Seasonality Mode
outputStatsName=Name
outputStatsTrendResult=Has Trend?
outputMeasureResult=Result
outputStatsValue=Value
outputStatsNoiseType=Noise Type
outputStatsExistance=Existance