/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "diploma/analytics/forecast/Component-preload",
	"modules": {
		"diploma/analytics/forecast/view/Main.view.xml": "<mvc:View controllerName=\"diploma.analytics.forecast.controller.Main\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns:l=\"sap.ui.layout\"\n\txmlns:f=\"sap.ui.layout.form\"\n\txmlns:core=\"sap.ui.core\"\n\txmlns:spet=\"diploma.analytics.forecast.controller\"\n\txmlns:viz=\"sap.viz.ui5.controls\"\n\txmlns:sc=\"sap.suite.ui.commons\"\n\txmlns=\"sap.m\">\n\t<spet:HelpPopover pages=\"{/config/help}\" id=\"popHelp\">\n\t\t<spet:HelpPage pageId=\"{page}\" title=\"{title}\" header=\"{header}\" description=\"{description}\" \n\t\t\tchildrenHeader=\"{childrenHeader}\" link=\"{link}\" intro=\"{intro}\" introPageId=\"{parent}\" children=\"{children}\"> \n\t\t\t<core:Item text=\"{name}\" key=\"{page}\"/>\n\t\t</spet:HelpPage>\n\t</spet:HelpPopover>\n\t<App id=\"appControlForecast\" >\n\t\t<Page id=\"pageInput\">\n\t\t\t<customHeader>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<ToolbarSpacer />\n\t\t\t\t\t<Title text=\"{i18n>title}\" class=\"sapUiNoMarginEnd\" />\n\t\t\t\t\t<Button type=\"Transparent\" class=\"sapUiNoMarginBegin\" icon=\"sap-icon://arrow-down\" press=\"onOpenVariants\"  />\n\t\t\t\t\t<ToolbarSpacer />\n\t\t\t\t</Toolbar>\n\t\t\t</customHeader>\n\t\t\t<f:Form maxContainerCols=\"2\" editable=\"true\" id=\"frmInput\">\n\t\t\t\t<f:title>\n\t\t\t\t\t<core:Title text=\"{i18n>inputFormTitle}\" />\n\t\t\t\t</f:title>\n\t\t\t\t<f:layout>\n\t\t\t\t\t<f:ResponsiveGridLayout labelSpanL=\"4\" labelSpanM=\"4\"\n\t\t\t\t\t\temptySpanL=\"3\" emptySpanM=\"3\" columnsL=\"1\" columnsM=\"1\" />\n\t\t\t\t</f:layout>\n\t\t\t\t<f:FormContainer>\n\t\t\t\t\t<f:FormElement label=\"{i18n>inputSource}\">\n\t\t\t\t\t\t<FlexBox alignItems=\"Start\">\t\n\t\t\t\t\t\t\t<Select width=\"100%\" id=\"selSource\" items=\"{/config/input/sources}\"\n\t\t\t\t\t\t\t\tselectedKey=\"{request>/input/source}\">\n\t\t\t\t\t\t\t\t<items> <core:Item text=\"{name}\" key=\"{id}\"/> </items>\n\t\t\t\t\t\t\t\t<layoutData> <FlexItemData growFactor=\"1\" /> </layoutData>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<Button icon=\"sap-icon://sys-help\" type=\"Transparent\" press=\"onHelpPress\" tooltip=\"{i18n>helpTooltip}\">\n\t\t\t\t\t\t\t\t<layoutData> <FlexItemData growFactor=\"0\" /> </layoutData>\n\t\t\t\t\t\t\t\t<customData> <core:CustomData key=\"page\" value=\"input-source\" /> </customData>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\n\t\t\t\t\t<f:FormElement label=\"{i18n>inputMeasure}\">\n\t\t\t\t\t\t<FlexBox alignItems=\"Start\">\t\n\t\t\t\t\t\t\t<Select width=\"100%\" id=\"selMeasure\" items=\"{/measures}\"\n\t\t\t\t\t\t\t\tselectedKey=\"{request>/input/measure}\">\n\t\t\t\t\t\t\t\t<items> <core:Item text=\"{name}\" key=\"{id}\"/> </items>\n\t\t\t\t\t\t\t\t<layoutData> <FlexItemData growFactor=\"1\" /> </layoutData>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<Button icon=\"sap-icon://sys-help\" type=\"Transparent\" press=\"onHelpPress\" tooltip=\"{i18n>helpTooltip}\">\n\t\t\t\t\t\t\t\t<layoutData> <FlexItemData growFactor=\"0\" /> </layoutData>\n\t\t\t\t\t\t\t\t<customData> <core:CustomData key=\"page\" value=\"input-measure\" /> </customData>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\n\t\t\t\t\t<f:FormElement label=\"{i18n>inputBeginDate}\">\n\t\t\t\t\t\t<FlexBox alignItems=\"Start\">\n\t\t\t\t\t\t\t<DatePicker id=\"datStart\" width=\"100%\" value=\"{request>/input/start}\" valueFormat=\"yyyy-MM-dd\">\n\t\t\t\t\t\t\t\t<layoutData> <FlexItemData growFactor=\"1\" /> </layoutData>\n\t\t\t\t\t\t\t</DatePicker>\n\t\t\t\t\t\t\t<Button icon=\"sap-icon://sys-help\" type=\"Transparent\" press=\"onHelpPress\" tooltip=\"{i18n>helpTooltip}\">\n\t\t\t\t\t\t\t\t<layoutData> <FlexItemData growFactor=\"0\" /> </layoutData>\n\t\t\t\t\t\t\t\t<customData> <core:CustomData key=\"page\" value=\"input-begin\" /> </customData>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\n\t\t\t\t\t<f:FormElement label=\"{i18n>inputEndDate}\" >\n\t\t\t\t\t\t<FlexBox alignItems=\"Start\">\t\n\t\t\t\t\t\t\t<DatePicker id=\"datEnd\" width=\"100%\" value=\"{request>/input/end}\" valueFormat=\"yyyy-MM-dd\">\n\t\t\t\t\t\t\t\t<layoutData> <FlexItemData growFactor=\"1\" /> </layoutData>\n\t\t\t\t\t\t\t</DatePicker>\n\t\t\t\t\t\t\t<Button icon=\"sap-icon://sys-help\" type=\"Transparent\" press=\"onHelpPress\">\n\t\t\t\t\t\t\t\t<layoutData> <FlexItemData growFactor=\"0\" /> </layoutData>\n\t\t\t\t\t\t\t\t<customData> <core:CustomData key=\"page\" value=\"input-end\" /> </customData>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\n\t\t\t\t\t<f:FormElement label=\"{i18n>inputBreakDown}\" >\n\t\t\t\t\t\t<FlexBox alignItems=\"Start\">\t\n\t\t\t\t\t\t\t<Select width=\"100%\" id=\"selBreakDown\" items=\"{/config/input/breakDownTypes}\"\n\t\t\t\t\t\t\t\tselectedKey=\"{request>/input/breakDown}\">\n\t\t\t\t\t\t\t\t<items> <core:Item text=\"{name}\" key=\"{id}\"/> </items>\n\t\t\t\t\t\t\t\t<layoutData> <FlexItemData growFactor=\"1\" /> </layoutData>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<Button icon=\"sap-icon://sys-help\" type=\"Transparent\" press=\"onHelpPress\">\n\t\t\t\t\t\t\t\t<layoutData> <FlexItemData growFactor=\"0\" /> </layoutData>\n\t\t\t\t\t\t\t\t<customData> <core:CustomData key=\"page\" value=\"input-break\" /> </customData>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t<f:FormElement label=\"{i18n>inputFilterType}\" >\n\t\t\t\t\t\t<FlexBox alignItems=\"Start\">\t\t\n\t\t\t\t\t\t\t<Select width=\"100%\" id=\"selFilterType\" items=\"{/config/input/filterTypes}\"\n\t\t\t\t\t\t\t\tselectedKey=\"{request>/input/filterType}\" change=\"onFilterTypeChange\">\n\t\t\t\t\t\t\t\t<items> <core:Item text=\"{name}\" key=\"{id}\"/> </items>\n\t\t\t\t\t\t\t\t<layoutData> <FlexItemData growFactor=\"1\" /> </layoutData>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<Button icon=\"sap-icon://sys-help\" type=\"Transparent\" press=\"onHelpPress\">\n\t\t\t\t\t\t\t\t<layoutData> <FlexItemData growFactor=\"0\" /> </layoutData>\n\t\t\t\t\t\t\t\t<customData> <core:CustomData key=\"page\" value=\"input-filter-type\" /> </customData>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\n\t\t\t\t\t<f:FormElement label=\"{i18n>inputFilterValue}\" >\n\t\t\t\t\t\t<FlexBox alignItems=\"Start\">\t\t\n\t\t\t\t\t\t\t<Input width=\"100%\" valueHelpRequest=\"onOpenValueHelp\" showValueHelp=\"true\" \n\t\t\t\t\t\t\t\tvalueHelpOnly=\"true\" id=\"inpFilterValue\" value=\"{request>/input/filterName}\">\n\t\t\t\t\t\t\t\t<layoutData> <FlexItemData growFactor=\"1\" /> </layoutData>\n\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t\t<Button icon=\"sap-icon://sys-help\" type=\"Transparent\" press=\"onHelpPress\">\n\t\t\t\t\t\t\t\t<layoutData> <FlexItemData growFactor=\"0\" /> </layoutData>\n\t\t\t\t\t\t\t\t<customData> <core:CustomData key=\"page\" value=\"input-filter-value\" /> </customData>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t</f:FormElement>\n\t\t\t\t</f:FormContainer>\n\t\t\t</f:Form>\n\t\t\t\n\t\t\t<f:Form maxContainerCols=\"2\" editable=\"true\" id=\"frmControl\">\n\t\t\t\t<f:title>\n\t\t\t\t\t<core:Title text=\"{i18n>controlFormTitle}\" />\n\t\t\t\t</f:title>\n\t\t\t\t<f:layout>\n\t\t\t\t\t<f:ResponsiveGridLayout labelSpanL=\"4\" labelSpanM=\"4\"\n\t\t\t\t\t\temptySpanL=\"3\" emptySpanM=\"3\" columnsL=\"1\" columnsM=\"1\" />\n\t\t\t\t</f:layout>\n\t\t\t\t<f:FormContainer>\n\t\t\t\t\t<f:FormElement label=\"{i18n>controlAlgorithm}\">\n\t\t\t\t\t\t<FlexBox alignItems=\"Start\">\t\n\t\t\t\t\t\t\t<Select width=\"100%\" id=\"selAlgorithm\" change=\"onAlgorithmChanged\" \n\t\t\t\t\t\t\t\tselectedKey=\"{request>/algorithm}\" items=\"{/config/algorithms}\">\n\t\t\t\t\t\t\t\t<items> <core:Item text=\"{name}\" key=\"{id}\"/> </items>\n\t\t\t\t\t\t\t\t<layoutData> <FlexItemData growFactor=\"1\" /> </layoutData>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<Button icon=\"sap-icon://sys-help\" type=\"Transparent\" press=\"onHelpPress\" tooltip=\"{i18n>helpTooltip}\">\n\t\t\t\t\t\t\t\t<layoutData> <FlexItemData growFactor=\"0\" /> </layoutData>\n\t\t\t\t\t\t\t\t<customData> <core:CustomData key=\"page\" value=\"algorithm\" /> </customData>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t</f:FormElement>\n\t\t\t\t</f:FormContainer>\n\t\t\t\t<f:FormContainer id=\"fmcControlFields\">\n\t\t\t\t</f:FormContainer>\n\t\t\t</f:Form>\n\t\t\t<footer>\n\t\t\t    <Toolbar>\n\t\t\t        <ToolbarSpacer />\n\t\t\t        <Button type=\"Accept\" text=\"{i18n>execute}\" icon=\"sap-icon://begin\" press=\"onExecute\"/>\n\t\t\t    </Toolbar>\n\t\t\t</footer>\n\t\t</Page>\n\t\t<Page title=\"{i18n>title}\" enableScrolling=\"true\" id=\"pageResults\">\n\t\t    <IconTabBar stretchContentHeight=\"true\" expandable=\"false\" expanded=\"true\">\n\t\t        <items>\n\t\t            <IconTabFilter icon=\"sap-icon://line-chart\" visible=\"{= ${visibility/resultChart} &amp;&amp; ${data>/result} !== null }\">\n            \t\t\t<sc:ChartContainer showFullScreen=\"true\" showPersonalization=\"false\" autoAdjustHeight=\"true\" showLegend=\"true\" showLegendButton=\"true\" >\n    \t\t                <sc:ChartContainerContent> \n        \t\t\t\t\t\t<sc:content>\n        \t\t\t\t\t\t\t<viz:VizFrame id=\"lineChart\" height=\"100%\" width=\"100%\" uiConfig=\"{applicationSet:'fiori'}\" />\n        \t\t\t\t\t\t</sc:content>\n        \t\t\t\t\t</sc:ChartContainerContent>\t\n        \t\t\t\t</sc:ChartContainer>\n\t\t            </IconTabFilter>\n\t\t            <IconTabFilter icon=\"sap-icon://table-view\" visible=\"{= ${visibility/resultTable} &amp;&amp; ${data>/result} !== null }\">\n\t\t                <ScrollContainer width=\"100%\" height=\"100%\" vertical=\"true\" horizontal=\"true\">\n\t\t                    <Table growing=\"true\" growingThreshold=\"100\" growingScrollToLoad=\"true\" columns=\"{measures}\" id=\"tblResults\">\n    \t\t                    <columns>\n    \t\t                        <Column> <Label text=\"{name}\" /> </Column>\n    \t\t                    </columns>\n    \t\t                </Table>\n\t\t                </ScrollContainer>\n\t\t            </IconTabFilter>\n\t\t            <IconTabFilter icon=\"sap-icon://number-sign\" visible=\"{= ${visibility/statsTable} &amp;&amp; ${data>/statistics} !== null }\">\n\t\t                <ScrollContainer width=\"100%\" height=\"100%\" vertical=\"true\" horizontal=\"true\">\n\t\t                    <Table growing=\"false\" columns=\"{stats}\" id=\"tblStats\">\n\t\t                        <columns>\n    \t\t                        <Column> <Label text=\"{name}\" /> </Column>\n    \t\t                    </columns>\n    \t\t                </Table>\n\t\t                </ScrollContainer>\n\t\t            </IconTabFilter>\n\t\t        </items>\n\t\t    </IconTabBar>\n\t\t\t<footer>\n\t\t\t    <Toolbar>\n\t\t\t        <Button type=\"Back\" text=\"{i18n>restart}\" press=\"onRestart\"/>\n\t\t\t    </Toolbar>\n\t\t\t</footer>\n\t    </Page>\n\t\t<dependents>\n\t\t\t<mvc:XMLView viewName=\"diploma.analytics.forecast.view.ValueHelp\" id=\"vhdEntity\"/>\n\t\t\t<mvc:XMLView viewName=\"diploma.analytics.forecast.view.Variants\" id=\"dlgVariants\"/>\n\t\t</dependents>\n\t</App>\n</mvc:View>",
		"diploma/analytics/forecast/view/ValueHelp.view.xml": "<mvc:View controllerName=\"diploma.analytics.forecast.controller.ValueHelp\"\n\txmlns:mvc=\"sap.ui.core.mvc\" \n    xmlns:core=\"sap.ui.core\" \n    xmlns:form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<Dialog id=\"dlgValueHelp\" \n\t    contentHeight=\"75%\"\n\t\tcontentWidth=\"40rem\" \n\t\tstretch=\"{device>/system/phone}\"\n\t    title=\"{parts: [{path: 'i18n>dlgValueHelpTitle'}, {path: 'view>/name'}], formatter: '.formatter.formatMessage'}\">\n\t\t<VBox>\n\t        <Toolbar id=\"tlbMainSearch\">\n\t            <SearchField value=\"{view>/simple/value}\"\n\t                placeholder=\"{view>/simple/placeholder}\"\n\t                search=\"onSearch\"/>\n\t            <ToolbarSpacer/>\n\t            <Button id=\"btnAdvancedSearch\" \n\t            \tvisible=\"{view>/hasAdvanced}\"\n\t                type=\"Transparent\"\n\t                text=\"{= ${view>/advanced} ? ${i18n>hideAdvanced} : ${i18n>showAdvanced} }\"\n\t                press=\"onToggle\"/>\n\t        </Toolbar>\n\t        \n\t        <Panel visible=\"{view>/advanced}\" class=\"sapUiNoContentPadding\">\n\t            <form:Form editable=\"true\">\n\t\t\t\t\t<form:layout>\n\t\t\t\t\t\t<form:ResponsiveGridLayout\n\t\t\t\t\t\t\tlabelSpanL=\"3\" labelSpanM=\"3\"\n\t\t\t\t\t\t\temptySpanL=\"1\" emptySpanM=\"1\"\n\t\t\t\t\t\t\tcolumnsL=\"1\" columnsM=\"1\" />\n\t\t\t\t\t</form:layout>\n\t            \t<form:FormContainer formElements=\"{view>/complex}\">\n\t            \t\t<form:FormElement label=\"{view>label}\" >\n\t            \t\t\t<SearchField value=\"{view>value}\"\n\t\t\t\t                search=\"onSearch\"/>\n\t            \t\t</form:FormElement>\n\t            \t</form:FormContainer>\n\t            </form:Form>\n\t        </Panel>\n\t        <Table id=\"tblSearchMain\"\n\t            growing=\"true\"\n\t            columns=\"{view>/display}\">\n\t            <columns>\n\t                <Column><Label text=\"{view>header}\"/></Column>\n\t            </columns>\n\t        </Table>\n\t    </VBox>\n\t    <buttons>\n\t        <Button text=\"{i18n>cancel}\" press=\"onCancel\"/>\n\t    </buttons>\n\t</Dialog>\n</mvc:View>",
		"diploma/analytics/forecast/view/Variants.view.xml": "<mvc:View controllerName=\"diploma.analytics.forecast.controller.Variants\"\n\txmlns:mvc=\"sap.ui.core.mvc\" \n\txmlns=\"sap.m\">\n\t\n\t<Dialog\n\t\tid=\"dlgVariants\"\n\t\tcontentHeight=\"20rem\"\n\t\tcontentWidth=\"10rem\"\n\t\tstretch=\"{device>/system/phone}\"\n\t\ttitle=\"{i18n>dlgVariantsTitle}\"\n\t\tclass=\"sapUiPopupWithPadding\" >\n\t\t\n\t\t<List mode=\"SingleSelectLeft\" items=\"{path: 'view>/variants', sorter: {path: 'view>name'}}\" id=\"lstVariants\">\n\t\t\t<CustomListItem>\n\t\t\t\t<Input width=\"100%\" value=\"{view>name}\"/>\n\t\t\t</CustomListItem>\n\t\t</List>\n\t\t\n\t\t<buttons>\n\t\t\t<Button icon=\"sap-icon://save\" tooltip=\"{i18n>btnSaveTooltip}\" press=\"onSave\" />\n\t\t\t<Button icon=\"sap-icon://open-folder\" tooltip=\"{i18n>btnLoadTooltip}\" press=\"onLoad\" />\n\t\t\t<Button icon=\"sap-icon://delete\" tooltip=\"{i18n>btnDeleteTooltip}\" press=\"onDelete\" />\n\t\t\t<Button text=\"{i18n>btnCloseText}\" tooltip=\"{i18n>btnCloseTooltip}\" press=\"onClose\" />\n\t\t</buttons>\n\t\t\n\t</Dialog>\n\t\n</mvc:View>",
		"diploma/analytics/forecast/controller/Main.controller.js": "sap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/model/type/Integer\",\n\t\"sap/ui/model/type/Float\",\n\t\"sap/m/MessageToast\",\n    \"sap/viz/ui5/data/FlattenedDataset\",\n    \"sap/viz/ui5/controls/common/feeds/FeedItem\",\n    \"sap/viz/ui5/format/ChartFormatter\",\n    \"sap/viz/ui5/controls/Popover\",\n    \"diploma/analytics/forecast/model/formatter\",\n    \"sap/m/MessageBox\",\n    \"diploma/analytics/forecast/controller/FioriDependencies\"\n], function(Controller, Integer, Float, MessageToast, FlattenedDataset, FeedItem, ChartFormatter, Popover, formatter, MessageBox) {\n\t\"use strict\";\n\n    var FIORI_LABEL_SHORTFORMAT_2 = \"__UI5__ShortIntegerMaxFraction2\";\n    var FIORI_LABEL_DATEFORMAT = \"__UI5__CustomDate\";\n    \n\treturn Controller.extend(\"diploma.analytics.forecast.controller.Main\", {\n\t\t\n\t\tformatter: formatter,\n\t\t\n\t\t/**\n\t\t * Filecycle hook.\n\t\t * Attaches vaidation handlers, bind elements to initial bindings, initializes the chart .\n\t\t */\n\t\tonInit: function() {\n\t\t\tvar oModel = this.getOwnerComponent().getModel(),\n\t\t\t\ti18n = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t\toModel.seti18n(i18n);\n\t\t\t\n\t\t\tsap.ui.getCore().attachValidationError(function (oEvent) {\n\t\t\t\tvar oControl = oEvent.getParameter(\"element\");\n\t\t\t\tif (oControl && oControl.setValueState) {\n\t\t\t\t\toControl.setValueState(\"Error\");\n\t\t\t\t}\n\t\t\t});\n\t\t\tsap.ui.getCore().attachValidationSuccess(function (oEvent) {\n\t\t\t\tvar oControl = oEvent.getParameter(\"element\");\n\t\t\t\tif (oControl && oControl.setValueState) {\n\t\t\t\t\toControl.setValueState(\"None\");\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tthis.byId(\"fmcControlFields\").bindAggregation(\"formElements\", {\n\t\t\t\tpath: \"/config/control/ARIMA\",\n\t\t\t\tfactory: this.formElementFactory.bind(this)\n\t\t\t});\n\t\t\t\n\t\t\tthis._initLineChart();\n\t\t\t\n\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t\tthis.byId(\"vhdEntity\").getController().addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t\tthis.byId(\"dlgVariants\").getController().addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t\t\n\t\t\tthis.byId(\"vhdEntity\").getController().attachSelect(this.onSelectFilterEntities, this);\n\t\t\tthis.byId(\"dlgVariants\").getController().attachLoad(this.onVariantRestore, this);\n\t\t},\n\t\t\n\t\tonVariantRestore: function(oEvent) {\n\t\t\tvar oContent = oEvent.getParameter(\"content\");\n\t\t\tthis.byId(\"fmcControlFields\").bindAggregation(\"formElements\", {\n\t\t\t\tpath:\t\t\"/config/control/\" + oContent.algorithm,\n\t\t\t\tfactory:\tthis.formElementFactory.bind(this)\n\t\t\t});\n\t\t\tjQuery.sap.delayedCall(500, this, function(){\n\t\t\t\tthis.getView().getModel(\"request\").setData(oContent);\n\t\t\t});\n\t\t},\n\t\t\n\t\tonOpenVariants: function(){\n\t\t\tthis.byId(\"dlgVariants\").getController().open();\n\t\t},\n\t\t\n\t\tonOpenValueHelp: function() {\n\t\t\tvar oModel = this.getView().getModel(\"request\");\n\t\t\tthis.byId(\"vhdEntity\").getController().open(oModel.getProperty(\"/input/filterType\"));\n\t\t},\n\t\t\n\t\tonSelectFilterEntities: function(oEvent) {\n\t\t\tvar oModel = this.getView().getModel(\"request\");\n\t\t\toModel.setProperty(\"/input/filterValue\", oEvent.getParameter(\"id\"));\n\t\t\toModel.setProperty(\"/input/filterName\", oEvent.getParameter(\"name\"));\n\t\t},\n\t\t\n\t\tonFilterTypeChange: function() {\n\t\t\tvar oModel = this.getView().getModel(\"request\");\n\t\t\toModel.setProperty(\"/input/filterValue\", \"\");\n\t\t\toModel.setProperty(\"/input/filterName\", \"\");\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the algorithm select box is changed. Rebinds the form elements for the control parameters.\n\t\t * @param   {object}    oEvent  The event object,\n\t\t * @returns {void}\n\t\t */\n\t\tonAlgorithmChanged: function(oEvent) {\n\t\t\tvar sAlgorithm = oEvent.getSource().getSelectedKey(),\n\t\t\t\toModel = this.getView().getModel(\"request\");\n\t\t\toModel.getData().control = {};\n\t\t\toModel.refresh();\n\t\t\tthis.byId(\"fmcControlFields\").bindAggregation(\"formElements\", {\n\t\t\t\tpath:\t\t\"/config/control/\" + sAlgorithm,\n\t\t\t\tfactory:\tthis.formElementFactory.bind(this)\n\t\t\t});\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when a help button is pressed. Reads the help page from the custom data of the source button \n\t\t * and opens the help popover accordingly.\n\t\t * @param   {object}    oEvent  The event object,\n\t\t * @returns {void}\n\t\t */\n\t\tonHelpPress: function(oEvent) {\n\t\t\tvar sPage = oEvent.getSource().data(\"page\");\n\t\t\tthis.byId(\"popHelp\").openBy(oEvent.getSource(), sPage);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the execute button is pressed.\n\t\t * First, this method checks if all the fields have corect values. If not a message is shown.\n\t\t * Otherwise, the busy indicator is shown and the request data is sent to the backend.\n\t\t * Then the request returns, on success the result page is binded and shown.\n\t\t * @returns {void}\n\t\t */\n\t\tonExecute: function() {\n\t\t    var aElements = this.byId(\"fmcControlFields\").getFormElements(),\n\t\t        oFlexBox,\n\t\t        oControl,\n\t\t        i,\n\t\t        i18n = this.getView().getModel(\"i18n\").getResourceBundle(),\n\t\t        sAlgorithm = this.getView().getModel(\"request\").getProperty(\"/algorithm\"),\n\t\t        oPage = this.byId(\"pageResults\");\n\t\t    \n\t\t    for (i = 0; i < aElements.length; ++i) {\n\t\t        oFlexBox = aElements[i].getFields()[0];\n\t\t        oControl = oFlexBox.getItems()[0];\n\t\t        if (oControl.getValueState && oControl.getValueState() === \"Error\") {\n\t\t            MessageToast.show(this.getView().getModel(\"i18n\").getResourceBundle().getText(\"invalidFieldValues\"));\n\t\t            return;\n\t\t        }\n\t\t    }\n\t\t    \n\t\t    if (!this.getView().getModel(\"request\").getProperty(\"/input/filterValue\")) {\n\t\t    \tMessageToast.show(this.getView().getModel(\"i18n\").getResourceBundle().getText(\"noFilter\"));\n\t            return;\n\t\t    }\n\t\t    \n\t\t    this.getView().setBusy(true);\n\t\t    $.ajax({\n\t\t        method: \"POST\",\n\t\t        url:    \"/destinations/INET_HTTP_DIPLOMA_J0I/services/secondary.xsjs?action=Pal\",\n\t\t        dataType: \"json\",\n\t\t        headers: { \"x-csrf-token\": this.byId(\"vhdEntity\").getModel().getSecurityToken() },\n\t\t        data:   JSON.stringify(this.getView().getModel(\"request\").getData()),\n\t\t        success:   function(oData) {\n\t\t            this.getView().getModel(\"data\").setData(oData);\n        \t        this._bindResultPage(\"/config/output/presets/\" + \n        \t            this.getView().getModel().getProperty(\"/config/output/usage/\" + sAlgorithm));\n        \t\t    this.byId(\"appControlForecast\").to(oPage);\n\t\t        }.bind(this),\n\t\t        error: function(oResponse) {\n        \t\t\tMessageBox.error(i18n.getText(\"errorMessage\"), {\n        \t\t\t\tdetails:    oResponse.responseText\n        \t\t\t});\n\t\t        }\n\t\t    }).always(this.getView().setBusy.bind(this.getView(), false));\n\t\t    \n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the restart button is pressed. Simply navigates to the input page and discards the results.\n\t\t * @returns {void}\n\t\t */\n\t\tonRestart: function() {\n\t\t    this.getView().getModel(\"data\").setData({});\n\t\t    this.byId(\"appControlForecast\").back();\n\t\t},\n\t\t\n\t\t/**\n\t\t * Factory method for building the control field form elements.\n\t\t * @param   {string}    sId     The ID of the element to be created.\n\t\t * @param   {BindingContext}    oContext    The binding context of the object.\n\t\t * @returns {FormElement}   The newly created form element.\n\t\t */\n\t\tformElementFactory: function(sId, oContext) {\n\t\t    var sAlgorithm = oContext.getPath().split(\"/\")[3],\n\t\t        i18n = this.getView().getModel(\"i18n\").getResourceBundle();\n\t\t\treturn new sap.ui.layout.form.FormElement(sId, {\n\t\t\t\tlabel:\toContext.getProperty(\"name\"),\n\t\t\t\tfields:\t[\n\t\t\t\t\tnew sap.m.FlexBox({\n\t\t\t\t\t\talignItems: \"Start\",\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tthis._buildFieldInput(oContext).setLayoutData(new sap.m.FlexItemData({\n\t\t\t\t\t\t\t\tgrowFactor: 1\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\tnew sap.m.Button({\n\t\t\t\t\t\t\t\ticon: \"sap-icon://sys-help\",\n\t\t\t\t\t\t\t\ttype: \"Transparent\",\n\t\t\t\t\t\t\t\ttooltip: i18n.getText(\"helpTooltip\"),\n\t\t\t\t\t\t\t\tpress: this.onHelpPress.bind(this),\n\t\t\t\t\t\t\t\tcustomData: [new sap.ui.core.CustomData({\n\t\t\t\t\t\t\t\t    key:    \"page\",\n\t\t\t\t\t\t\t\t    value:  sAlgorithm.toLowerCase() + \"-\" + oContext.getProperty(\"id\").toLowerCase()\n\t\t\t\t\t\t\t\t})]\n\t\t\t\t\t\t\t}).setLayoutData(new sap.m.FlexItemData({\n\t\t\t\t\t\t\t\tgrowFactor: 0\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t]\n\t\t\t\t\t})\t\n\t\t\t\t]\n\t\t\t}); \n\t\t},\n\t\t\n\t\t/**\n\t\t * Builds an input field for a control parameter. The type is determined from the context.\n\t\t * Also, default values, constraints for input fields and possible items for select boxes are also taken from the context.\n\t\t * @private\n\t\t * @param   {BindingContext}    oContext    The binding context for the containing form element.\n\t\t * @returns {Input|CheckBox|Select} A contro based on the configuration from the context.   \n\t\t */\n\t\t_buildFieldInput: function(oContext) {\n\t\t\tvar sField = oContext.getProperty(\"field\"),\n\t\t\t\toConstraints = {},\n\t\t\t\tsResultPath = \"/control/\" + oContext.getProperty(\"id\"),\n\t\t\t\toType;\n\t\t\tthis.getView().getModel(\"request\").setProperty(sResultPath, oContext.getProperty(\"default\"));\n\t\t\tswitch(sField) {\n\t\t\t\tcase \"Checkbox\": return new sap.m.CheckBox().bindProperty(\"selected\", {\n\t\t\t\t\tmodel:\t\"request\",\n\t\t\t\t\tpath:\tsResultPath\n\t\t\t\t});\n\t\t\t\tcase \"Number\": \n\t\t\t\t\tif (oContext.getProperty(\"minimum\") !== undefined) {\n\t\t\t\t\t\toConstraints.minimum = oContext.getProperty(\"minimum\");\n\t\t\t\t\t}\n\t\t\t\t\tif (oContext.getProperty(\"maximum\") !== undefined) {\n\t\t\t\t\t\toConstraints.maximum = oContext.getProperty(\"maximum\");\n\t\t\t\t\t}\n\t\t\t\t\tif (oContext.getProperty(\"type\") === \"integer\") {\n\t\t\t\t\t\toType = new Integer({}, oConstraints);\n\t\t\t\t\t}\n\t\t\t\t\telse if (oContext.getProperty(\"type\") === \"float\") {\n\t\t\t\t\t\toType = new Float({}, oConstraints);\n\t\t\t\t\t}\n\t\t\t\t\tvar oInput = new sap.m.Input({\n\t\t\t\t\t\ttype:\t\"Number\",\n\t\t\t\t\t\twidth:\t\"100%\"\n\t\t\t\t\t}).bindValue({\n\t\t\t\t\t\tmodel:\t\"request\",\n\t\t\t\t\t\tpath:\tsResultPath,\n\t\t\t\t\t\ttype:\toType\n\t\t\t\t\t}).attachChange(function(oEvent) {\n\t\t\t\t\t    var oControl = oEvent.getSource();\n\t\t\t\t\t    if (oControl.getValue() === \"\") {\n\t\t\t\t\t        oControl.setValueState(\"Error\");\n\t\t\t\t\t    }\n\t\t\t\t\t});\n\t\t\t\t\treturn oInput;\n\t\t\t\tcase \"Select\": return new sap.m.Select({width:\t\"100%\"}).bindItems({\n\t\t\t\t\tpath:\t\toContext.getPath() + \"/items\",\n\t\t\t\t\ttemplate:\tnew sap.ui.core.Item({\n\t\t\t\t\t\tkey:\t\"{key}\",\n\t\t\t\t\t\ttext:\t\"{text}\"\n\t\t\t\t\t})\n\t\t\t\t}).bindProperty(\"selectedKey\", {\n\t\t\t\t\tmodel:\t\"request\",\n\t\t\t\t\tpath:\tsResultPath\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t\n\t\t/**\n\t\t * Binds the result page based on a output preset from the configuration.\n\t\t * @private\n\t\t * @param   {string}    sPresetPath     The path to the preset in the model.\n\t\t * @returns {void}\n\t\t */\n\t\t_bindResultPage: function(sPresetPath) {\n\t\t    var i,\n\t\t        oItem,\n\t\t        oPage = this.byId(\"pageResults\"),\n\t\t        oPreset = this.getView().getModel().getObject(sPresetPath);\n\t\t    \n\t\t    oPage.bindElement({\n\t\t        path:   sPresetPath\n\t\t    });\n\t\t    \n\t\t    if (oPreset.measures) {\n\t\t        this._bindLineChart(oPreset.measures);\n    \t\t    oItem = new sap.m.ColumnListItem({type: \"Inactive\"});\n    \t\t    for (i = 0; i < oPreset.measures.length; ++i) {\n    \t\t        oItem.addCell(new sap.m.Text().bindProperty(\"text\",{\n    \t\t            path:   oPreset.measures[i].field,\n    \t\t            model:  \"data\",\n    \t\t            formatter: oPreset.measures[i].format ? formatter[oPreset.measures[i].format] : formatter.none\n    \t\t        }));\n    \t\t    }\n    \t\t    this.byId(\"tblResults\").bindItems({\n    \t\t        path:   \"/result\",\n    \t\t        model:  \"data\",\n    \t\t        sorter: new sap.ui.model.Sorter(\"timestamp\", true),\n    \t\t        template: oItem\n    \t\t    });\n\t\t    }\n\t\t    \n\t\t    if (oPreset.stats) {\n\t\t        oItem = new sap.m.ColumnListItem({type: \"Inactive\"});\n    \t\t    for (i = 0; i < oPreset.stats.length; ++i) {\n    \t\t        oItem.addCell(new sap.m.Text({text: \"{data>\" + oPreset.stats[i].field + \"}\"}));\n    \t\t    }\n    \t\t    this.byId(\"tblStats\").bindItems({\n    \t\t        path:   \"/statistics\",\n    \t\t        model:  \"data\",\n    \t\t        template: oItem\n    \t\t    });\n\t\t    }\n\t\t},\n\t\t\n\t\n\t\t/**\n\t\t * Initializes the line chart.\n\t\t * @private\n\t\t * @returns {void}\n\t\t */\n\t\t_initLineChart: function() {\n\t\t\tvar chartFormatter = ChartFormatter.getInstance();\n            chartFormatter.registerCustomFormatter(FIORI_LABEL_SHORTFORMAT_2, function(value) {\n                var fixedInteger = sap.ui.core.format.NumberFormat.getIntegerInstance({style: \"short\",\n                    maxFractionDigits: 2});\n                return fixedInteger.format(value);\n            });\n            chartFormatter.registerCustomFormatter(FIORI_LABEL_DATEFORMAT, function(value) {\n                var fixedDate = sap.ui.core.format.DateFormat.getDateTimeInstance(\"dd.MM.yyyy HH:mm:ss\");\n                return fixedDate.format(value);\n            });\n            sap.viz.api.env.Format.numericFormatter(chartFormatter);\n            \n\t\t\tvar oVizFrame = this.getView().byId(\"lineChart\");\n            oVizFrame.setVizType(\"timeseries_line\");\n            oVizFrame.setUiConfig({\n                \"applicationSet\": \"fiori\"\n            });\n            \n            var oPopOver = new Popover();\n            this.getView().addDependent(oPopOver);\n            oPopOver.connect(oVizFrame.getVizUid());\n            \n            oVizFrame.setVizProperties({\n                title: {\n                    visible: false\n                },\n                general: {\n                    layout: {\n                        padding: 0.04\n                    }\n                },\n                timeAxis: {\n                \tlevels: [\"day\",\"month\", \"year\"],\n                \ttitle: {\n                \t\tvisible: false\n                \t},\n                    interval: {\n                        unit: \"auto\"\n                    }\n                },\n                valueAxis: {\n                \ttitle: {\n                \t\tvisible: false\n                \t},\n                    label: {\n                        formatString: FIORI_LABEL_SHORTFORMAT_2\n                    }\n                },\n                plotArea: {\n                    dataLabel: {                        \n                        visible:\t\tfalse,\n                        formatString:\tFIORI_LABEL_SHORTFORMAT_2,\n                        hideWhenOverlap: true\n                    },\n                    window: {\n                        start: null,\n                        end: null\n                    }\n                },\n                interaction: {\n                \tselectability: {\n                \t\tmode: \"SINGLE\"\n                \t}\n                }\n            });\n\t\t\tvar oFormat = {};\n\t\t\toFormat[this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"timeDimension\")] = FIORI_LABEL_DATEFORMAT;\n\t\t\toPopOver.setFormatString(oFormat);\n\t\t\t\n            oVizFrame.setModel(this.getOwnerComponent().getModel(\"data\"));\n\t\t},\n\t\t\n\t\t/**\n\t\t * Binds the data to the line chart.\n\t\t * @param\t{object}\taChartMeasures\tThe chart measure data (from the preset).\n\t\t * @returns {void}\n\t\t */\n\t\t_bindLineChart: function(aChartMeasures){\n\t\t\tvar oVizFrame = this.getView().byId(\"lineChart\");\n\t\t\tvar aNames = [], aMeasures = [], aRules = [];\n\t\t\tfor (var i = 0; i < aChartMeasures.length; ++i) {\n\t\t\t    if (aChartMeasures[i].field !== \"date\") {\n    \t\t\t\taNames.push(aChartMeasures[i].name);\n    \t\t\t\taMeasures.push({\n    \t\t\t\t\tname:\taChartMeasures[i].name,\n    \t\t\t\t\tvalue:  \"{\" + aChartMeasures[i].field + \"}\"\n    \t\t\t\t});\n    \t\t\t\taRules.push({\n    \t\t\t\t    \"dataContext\": {\"measureNames\": aChartMeasures[i].name},\n                        \"properties\": {\n                            \"color\": aChartMeasures[i].color,\n                            \"lineColor\": aChartMeasures[i].color,\n                            \"lineType\": aChartMeasures[i].dotted ? \"dotted\" : \"line\"\n                        },\n                        \"displayName\": aChartMeasures[i].name\n    \t\t\t\t});\n\t\t\t    }\n\t\t\t}\n\t\t\t\n            var oDataset = new FlattenedDataset({\n\t\t\t\tdimensions: [{\n\t\t\t\t\tname:\t\tthis.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"timeDimension\"),\n\t\t\t\t\tvalue:\t\t\"{date}\",\n\t\t\t\t\tdataType:\t\"date\"\n\t\t\t\t}],\n                measures: aMeasures,\n                data: {\n                    path: \"/result\"\n                }\n            });\n            \n            oVizFrame.removeAllFeeds();\n            oVizFrame.addFeed(new FeedItem({\n                uid:\t\"timeAxis\",\n                type:\t\"Dimension\",\n                values: [this.getOwnerComponent().getModel(\"i18n\").getResourceBundle().getText(\"timeDimension\")]\n            }));\n            oVizFrame.addFeed(new FeedItem({\n                uid:\t\"valueAxis\",\n                type:\t\"Measure\",\n                values: aNames\n            }));\n            \n            oVizFrame.setDataset(oDataset);\t\n\t\t\toVizFrame.setVizProperties({\n                plotArea: {\n                    dataPointStyle: {\n                        \"rules\": aRules\n                    }\n                }\n\t\t\t });\n\t\t}\n\t\t\n\t});\n\n});",
		"diploma/analytics/forecast/controller/HelpPage.js": "sap.ui.define([\r\n\t\t\"sap/m/Page\",\r\n\t\t\"sap/m/PageRenderer\",\r\n\t\t\"sap/m/Panel\",\r\n\t\t\"sap/m/List\",\r\n\t\t\"sap/m/StandardListItem\",\r\n\t\t\"./HelpTitle\",\r\n\t\t\"sap/m/Link\"\r\n\t], function (Page, PageRenderer, Panel, List, StandardListItem, HelpTitle, Link) {\r\n\t\t\"use strict\";\r\n\t\treturn Page.extend(\"diploma.analytics.forecast.controller.HelpPage\", {\r\n\t\t\tmetadata: {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tpageId:\t\t\t{type: \"string\"},\r\n\t\t\t\t\theader:\t\t\t{type: \"string\"},\r\n\t\t\t\t\tchildrenHeader:\t{type: \"string\"},\r\n\t\t\t\t\tdescription:\t{type: \"string\"},\r\n\t\t\t\t\tlink:\t\t\t{type: \"string\"},\t\r\n\t\t\t\t\tintro:\t\t\t{type: \"string\"},\r\n\t\t\t\t\tintroPageId:\t{type: \"string\"}\r\n\t\t\t\t},\r\n\t\t\t\tdefaultAggregation: \"children\",\r\n\t\t\t\taggregations: {\r\n\t\t\t\t\tchildren: {type: \"sap.ui.core.Item\", singularName: \"child\", multiple: true},\r\n\t\t\t\t\t_page:\t  {type: \"sap.m.Page\", visibility: \"hidden\", multiple: false}\r\n\t\t\t\t},\r\n\t\t\t\tevents: {\r\n\t\t\t\t\tonNavigate: {\r\n\t\t\t\t\t\tparameters: {\r\n\t\t\t\t\t\t\tpageId: \"string\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\trenderer: { },\r\n\t\t\t\r\n\t\t\t_initialize: function() {\r\n\t\t\t\tvar oList,\r\n\t\t\t\t\taItems,\r\n\t\t\t\t\ti;\r\n\t\t\t\t\t\r\n\t\t\t\tthis.addStyleClass(\"sapUiContentPadding\");\r\n\t\t\t\tif (this.getIntro()) {\r\n\t\t\t\t\tthis.addContent(new Link({\r\n\t\t\t\t\t\ttext:\t\tthis.getIntro(),\r\n\t\t\t\t\t\tsubtle:\t\ttrue,\r\n\t\t\t\t\t\tenabled:\tthis.getIntroPageId() ? true : false,\r\n\t\t\t\t\t\tpress:\t\tthis.fireEvent.bind(this, \"onNavigate\", {pageId: this.getIntroPageId()})\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t\tthis.addContent(new HelpTitle({\r\n\t\t\t\t\ttitle:\t\t\tthis.getHeader(),\r\n\t\t\t\t\ttitleActive:\tthis.getLink() ? true : false,\r\n\t\t\t\t\thref:\t\t\tthis.getLink(),\r\n\t\t\t\t\ttarget:\t\t\t\"_blank\",\r\n\t\t\t\t\ttext:\t\t\tthis.getDescription()\r\n\t\t\t\t}).addStyleClass(\"sapUiSmallMarginBottom\").addStyleClass(\"sapUiTinyMarginTop\"));\r\n\t\t\t\t\r\n\t\t\t\taItems = this.getChildren();\r\n\t\t\t\tif (aItems && aItems.length) {\r\n\t\t\t\t\toList = new List({\r\n\t\t\t\t\t\theaderText:\tthis.getChildrenHeader()\r\n\t\t\t\t\t});\r\n\t\t\t\t\tfor (i = 0; i < aItems.length; ++i) {\r\n\t\t\t\t\t\toList.addItem(new StandardListItem({\r\n\t\t\t\t\t\t\ttitle:\taItems[i].getText(),\r\n\t\t\t\t\t\t\ttype:\t\"Navigation\",\r\n\t\t\t\t\t\t\tpress:\tthis.fireEvent.bind(this, \"onNavigate\", {pageId: aItems[i].getKey()})\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.addContent(oList);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t}\r\n);",
		"diploma/analytics/forecast/controller/HelpPopover.js": "sap.ui.define([\r\n\t\t\"sap/ui/core/Control\",\r\n\t\t\"sap/m/ResponsivePopover\",\r\n\t\t\"sap/m/NavContainer\"\r\n\t], function (Control, ResponsivePopover, NavContainer) {\r\n\t\t\"use strict\";\r\n\t\treturn Control.extend(\"diploma.analytics.forecast.controller.HelpPopover\", {\r\n\t\t\tmetadata: {\r\n\t\t\t\tdefaultAggregation: \"pages\",\r\n\t\t\t\taggregations: {\r\n\t\t\t\t\tpages:\t\t{type: \"diploma.analytics.forecast.controller.HelpPage\", multiple: true, singleName: \"page\"},\r\n\t\t\t\t\t_popover:\t{type: \"sap.m.ResponsivePopover\", multiple: false, visibility: \"hidden\"}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t_initialize: function() {\r\n\t\t\t\tif (!this._oNavContainer) {\r\n\t\t\t\t\tvar aPages = this.removeAllPages(),\r\n\t\t\t\t\t\ti,\r\n\t\t\t\t\t\toPopover;\r\n\t\t\t\t\tthis.unbindAggregation(\"pages\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis._mPages = {};\r\n\t\t\t\t\tfor (i = 0; i < aPages.length; ++i) {\r\n\t\t\t\t\t    aPages[i]._initialize();\r\n\t\t\t\t\t\tthis._mPages[aPages[i].getPageId()] = aPages[i];\r\n\t\t\t\t\t\taPages[i].attachOnNavigate(this._navForwards, this);\r\n\t\t\t\t\t\taPages[i].attachNavButtonPress(this._navBackwards, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis._oNavContainer = new NavContainer({\r\n\t\t\t\t\t\tpages: aPages\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis._oNavContainer.attachAfterNavigate(function(oEvent){\r\n\t\t\t\t\t\tif (!oEvent.getParameter(\"isBack\")) {\r\n\t\t\t\t\t\t\toEvent.getParameter(\"to\").scrollTo(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\toPopover = new ResponsivePopover({\r\n\t\t\t\t\t\tplacement: \"Vertical\",\r\n\t\t\t\t\t\tcontentHeight:\t\"25rem\",\r\n\t\t\t\t\t\tcontentWidth:\t\"22rem\",\r\n\t\t\t\t\t\tcontent: [this._oNavContainer],\r\n\t\t\t\t\t\tshowHeader: false,\r\n\t\t\t\t\t\tshowCloseButton : true\r\n\t\t\t\t\t});\r\n\t\t\t\t\toPopover.attachAfterOpen(function(){\r\n\t\t\t\t\t\tthis._oNavContainer.getCurrentPage().scrollTo(0);\r\n\t\t\t\t\t}.bind(this));\r\n\t\t\t\t\tthis.setAggregation(\"_popover\", oPopover);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\topenBy: function(oControl, sPageId) {\r\n\t\t\t\tthis._initialize();\r\n\t\t\t\tvar oPage = this._mPages[sPageId];\r\n\t\t\t\toPage.setShowNavButton(false);\r\n\t\t\t\tthis._navStack = [];\r\n\t\t\t\tthis._oNavContainer.to(oPage, \"show\");\r\n\t\t\t\tthis.getAggregation(\"_popover\").openBy(oControl);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t_navForwards: function(oEvent) {\r\n\t\t\t\tvar oPage = this._mPages[oEvent.getParameter(\"pageId\")];\r\n\t\t\t\tthis._navStack.push(this._oNavContainer.getCurrentPage().getPageId());\r\n\t\t\t\toPage.setShowNavButton(true);\r\n\t\t\t\tthis._oNavContainer.to(oPage);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t_navBackwards: function(oEvent) {\r\n\t\t\t\tvar sPage = this._navStack.pop(),\r\n\t\t\t\t\toPage;\r\n\t\t\t\tif (sPage === undefined) {\r\n\t\t\t\t\toEvent.getSource().setShowNavButton(false);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\toPage = this._mPages[sPage];\r\n\t\t\t\t\toPage.setShowNavButton(this._navStack.length !== 0);\r\n\t\t\t\t\tthis._oNavContainer.backToPage(oPage);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\trenderer: function(){ }\r\n\t\t\t\r\n\t\t});\r\n\t}\r\n);",
		"diploma/analytics/forecast/controller/HelpTitle.js": "sap.ui.define([\r\n\t\t\"sap/m/ObjectIdentifier\"\r\n\t], function (ObjectIdentifier) {\r\n\t\t\"use strict\";\r\n\t\treturn ObjectIdentifier.extend(\"diploma.analytics.forecast.controller.HelpTitle\", {\r\n\t\t\tmetadata: {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\thref : {type : \"sap.ui.core.URI\"},\r\n\t\t\t\t\ttarget : {type: \"string\"}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetHref: function(sHref) {\r\n\t\t\t\tthis.setProperty(\"href\", sHref);\r\n\t\t\t\tif (this._getTitleControl().setHref) {\r\n\t\t\t\t\tthis._getTitleControl().setHref(sHref);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetTarget: function(sTarget) {\r\n\t\t\t\tthis.setProperty(\"target\", sTarget);\r\n\t\t\t\tif (this._getTitleControl().setTarget) {\r\n\t\t\t\t\tthis._getTitleControl().setTarget(sTarget);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\trenderer: {}\r\n\t\t});\r\n\t}\r\n);",
		"diploma/analytics/forecast/controller/ValueHelp.controller.js": "sap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/m/ColumnListItem\",\n\t\"sap/m/Text\",\n\t\"sap/m/Token\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/ui/model/odata/v2/ODataModel\",\n\t\"diploma/analytics/forecast/model/formatter\"\n], function(Controller, ColumnListItem, Text, Token, JSONModel, Filter, FilterOperator, ODataModel, formatter) {\n\t\"use strict\";\n\t\n\treturn Controller.extend(\"diploma.analytics.forecast.controller.ValueHelp\", {\n\t\t\n\t\tformatter: formatter,\n\t\t\n\t\t/** Initialization lifecycle hook. */\n\t\tonInit: function() {\n\t\t\tthis.getView().setModel(new JSONModel(), \"view\");\n\t\t\tthis.getView().setModel(new ODataModel(\"/destinations/INET_HTTP_DIPLOMA_J0I/services/primary.xsodata/\"));\n\t\t},\n\t\t\n\t\t/**\n\t\t * Attaches an event listener on the \"select\" event.\n\t\t * This event is a proxy event for the press event of the list items.\n\t\t * @param   {function}  fnHandler   Callback function.\n\t\t * @param   {object=}   oListener   Listener object on which the handler is called.    \n\t\t * @returns {void}\n\t\t */\n\t\tattachSelect: function(fnHandler, oListener) {\n\t\t    this.attachEvent(\"select\", fnHandler, oListener);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Attaches an event listener on the \"cancel\" event.\n\t\t * This event is fired when the user presses the cancel button.\n\t\t * @param   {function}  fnHandler   Callback function.\n\t\t * @param   {object=}   oListener   Listener object on which the handler is called.    \n\t\t * @returns {void}\n\t\t */\n\t\tattachCancel: function(fnHandler, oListener) {\n\t\t    this.attachEvent(\"cancel\", fnHandler, oListener);\n\t\t},\n\t\t\n\t\t/** Called when the user presses the cancel button. Closes the dialog. */\n\t\tonCancel: function() {\n\t\t    if (this.fireEvent(\"cancel\", {}, true)) {\n\t\t        this.close();\n\t\t    }\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the users selects an intem from the results table.\n\t\t * Fires the selection event and closes the dialog.\n\t\t * @param {Event}\toEvent\tThe event object.\n\t\t * @returns {void}\n\t\t */\n\t\tonItemPress: function(oEvent) {\n\t\t\tvar oContext = oEvent.getSource().getBindingContext(),\n\t\t\t\tsId = oContext.getProperty(\"id\"),\n\t\t\t\tsField = this.getView().getModel(\"view\").getProperty(\"/simple/field\"),\n\t\t\t\tsName = oContext.getProperty(sField);\n\t\t    if (this.fireEvent(\"select\", {id: sId, name: sName}, true)) {\n\t\t        this.close();\n\t\t    }\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the user triggers a search action on one of the search fields.\n\t\t * Filters the result table.\n\t\t * @returns {void}\n\t\t */\n\t\tonSearch: function() {\n\t\t\t var oModel = this.getView().getModel(\"view\"),\n\t\t         aFilters = [],\n\t\t         sQuery,\n\t\t         i,\n\t\t         aComplex = oModel.getProperty(\"/complex\");\n\t\t         \n\t\t\tsQuery = oModel.getProperty(\"/simple/value\");\n\t\t    if (sQuery) {\n\t\t        aFilters.push(new Filter(oModel.getProperty(\"/simple/field\"), FilterOperator.Contains, sQuery));\n\t\t    }\n\t\t    \n\t\t    if (oModel.getProperty(\"/advanced\")) {\n\t\t    \tfor (i = 0; i < aComplex.length; ++i) {\n\t\t    \t\tif (aComplex[i].value) {\n\t\t        \t\taFilters.push(new Filter(aComplex[i].field, FilterOperator.Contains, aComplex[i].value));\n\t\t    \t\t}\n\t\t    \t}\n\t\t    }\n\t\t    \n\t\t    this.byId(\"tblSearchMain\").getBinding(\"items\").filter(aFilters, \"Application\");\n\t\t},\n\t\t\n\t\t/**\n\t\t * Adds the given style class directly to the dialog.\n\t\t * @param   {string}    sStyleClass     The style class to be added.\n\t\t * @returns {void}\n\t\t */\n\t\taddStyleClass: function(sStyleClass) {\n\t\t    this.byId(\"dlgValueHelp\").addStyleClass(sStyleClass);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Opens the dialog. Builds the model and binds the table.\n\t\t * @param\t{string}\tsEntity\t\tThe entity name.\n\t\t * @returns {void}\n\t\t */\n\t\topen: function(sEntity) {\n\t\t\tthis._buildModel(sEntity);\n\t\t\tthis._bindTable();\n\t\t\tthis.byId(\"dlgValueHelp\").open();\n\t\t},\n\t\t\n\t\t/** Toggles between basic and advanced search. */\n\t\tonToggle: function() {\n\t\t\tvar oModel = this.getView().getModel(\"view\");\n\t\t\toModel.setProperty(\"/advanced\", !oModel.getProperty(\"/advanced\"));\n\t\t},\n\t\t\n\t\t/** Close the dialog. */\n\t\tclose: function() {\n\t\t\tthis.byId(\"dlgValueHelp\").close();\n\t\t},\n\t\t\n\t\t/** \n\t\t * Binds the search result table lines to the current entity. \n\t\t * @private\n\t\t * @returns {void}\n\t\t */\n\t\t_bindTable: function() {\n\t\t\tvar oModel = this.getView().getModel(\"view\"),\n\t\t\t\taDisplay = oModel.getProperty(\"/display\"),\n\t\t\t\ti,\n\t\t\t\taCells = [],\n\t\t\t\tmParameters = oModel.getProperty(\"/expand\") ? {\n\t\t\t\t\texpand:\toModel.getProperty(\"/expand\")\n\t\t\t\t} : {};\n\t\t\tfor (i = 0; i < aDisplay.length; ++i) {\n\t\t\t\taCells.push(new Text({text: \"{\" + aDisplay[i].field + \"}\" }));\n\t\t\t}\n\t\t\tthis.byId(\"tblSearchMain\").bindItems({\n\t\t\t\tpath:\t\t\"/\" + oModel.getProperty(\"/entitySet\"),\n\t\t\t\tparameters: mParameters,\n\t\t\t\ttemplate:\tnew ColumnListItem({\n\t\t\t\t\ttype:\t\"Active\",\n\t\t\t\t\tpress:\tthis.onItemPress.bind(this),\n\t\t\t\t\tcells:\taCells\n\t\t\t\t})\n\t\t\t});\n\t\t},\n\t\t\n\t\t/**\n\t\t * Builds the model based on the current entity.\n\t\t * @private\n\t\t * @param\t{string}\tsEntity\t\tThe entity name.\n\t\t * @returns {void}\n\t\t */\n\t\t_buildModel: function(sEntity) {\n\t\t\tvar i18n = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t\tswitch (sEntity) {\n\t\t\t\tcase \"Route\":\n\t\t\t\t\tthis.getView().getModel(\"view\").setData({\n\t\t\t\t\t\tadvanced: false,\n\t\t\t\t\t\tname:\t\ti18n.getText(\"filterTypeRoute\"),\n\t\t\t\t\t\tentitySet:\t\"Routes\",\n\t\t\t\t\t\tentity:\t\t\"Route\",\n\t\t\t\t\t\thasAdvanced: true,\n\t\t\t\t\t\texpand:\t\t\"FromLocation,ToLocation\",\n\t\t\t\t\t\tsimple: {\n\t\t\t\t\t\t\tplaceholder:\ti18n.getText(\"seaSimplePlaceholderName\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"name\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcomplex: [{\n\t\t\t\t\t\t\tlabel:\t\t\ti18n.getText(\"lblRouteLocationFromText\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"FromLocation/name\"\n\t\t\t\t\t\t},{\n\t\t\t\t\t\t\tlabel:\t\t\ti18n.getText(\"lblRouteLocationToText\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"ToLocation/name\"\n\t\t\t\t\t\t}],\n\t\t\t\t\t\tdisplay: [{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colRouteNameHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"name\"\n\t\t\t\t\t\t},{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colLocationFromHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"FromLocation/name\"\n\t\t\t\t\t\t},{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colLocationToHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"ToLocation/name\"\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Schedule\":\n\t\t\t\t\tthis.getView().getModel(\"view\").setData({\n\t\t\t\t\t\tadvanced: false,\n\t\t\t\t\t\tname:\t\ti18n.getText(\"filterTypeSchedule\"),\n\t\t\t\t\t\tentitySet:\t\"Schedules\",\n\t\t\t\t\t\tentity:\t\t\"Schedule\",\n\t\t\t\t\t\texpand:\t\t\"Route\",\n\t\t\t\t\t\thasAdvanced: true,\n\t\t\t\t\t\tsimple: {\n\t\t\t\t\t\t\tplaceholder:\ti18n.getText(\"seaSimplePlaceholderName\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"name\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcomplex: [{\n\t\t\t\t\t\t\tlabel:\t\t\ti18n.getText(\"lblScheduleRouteNameText\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"Route/name\"\n\t\t\t\t\t\t}],\n\t\t\t\t\t\tdisplay: [{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colScheduleNameHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"name\"\n\t\t\t\t\t\t},{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colScheduleRouteHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"Route/name\"\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Person\":\n\t\t\t\t\tthis.getView().getModel(\"view\").setData({\n\t\t\t\t\t\tadvanced: false,\n\t\t\t\t\t\tname:\t\ti18n.getText(\"filterTypePerson\"),\n\t\t\t\t\t\tentitySet:\t\"Persons\",\n\t\t\t\t\t\tentity:\t\t\"Person\",\n\t\t\t\t\t\texpand:\t\t\"Organization\",\n\t\t\t\t\t\thasAdvanced: true,\n\t\t\t\t\t\tsimple: {\n\t\t\t\t\t\t\tplaceholder:\ti18n.getText(\"seaSimplePlaceholderName\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"name\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcomplex: [{\n\t\t\t\t\t\t\tlabel:\t\t\ti18n.getText(\"lblPersonEmailText\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"email\"\n\t\t\t\t\t\t},{\n\t\t\t\t\t\t\tlabel:\t\t\ti18n.getText(\"lblPersonOrganizationText\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"Organization/name\"\n\t\t\t\t\t\t}],\n\t\t\t\t\t\tdisplay: [{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colPersonNameHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"name\"\n\t\t\t\t\t\t},{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colPersonEmailHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"email\"\n\t\t\t\t\t\t},{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colPersonOrganizationHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"Organization/name\"\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Organization\":\n\t\t\t\t\tthis.getView().getModel(\"view\").setData({\n\t\t\t\t\t\tadvanced: false,\n\t\t\t\t\t\tname:\t\ti18n.getText(\"filterTypeOrganization\"),\n\t\t\t\t\t\tentitySet:\t\"Organizations\",\n\t\t\t\t\t\tentity:\t\t\"Organization\",\n\t\t\t\t\t\thasAdvanced: false,\n\t\t\t\t\t\tsimple: {\n\t\t\t\t\t\t\tplaceholder:\ti18n.getText(\"seaSimplePlaceholderName\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"name\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcomplex: [],\n\t\t\t\t\t\tdisplay: [{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colOrganizationNameHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"name\"\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\t\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t});\n});",
		"diploma/analytics/forecast/controller/Variants.controller.js": "sap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/model/json/JSONModel\"\n], function(Controller, JSONModel){\n\t\n\treturn Controller.extend(\"diploma.analytics.forecast.controller.Variants\", {\n\t\t\n\t\t/** Lifecycle hook. */\n\t\tonInit: function() {\n\t\t\tvar oData = {variants: []};\n\t\t\tif (window.localStorage) {\n\t\t\t\ttry {\n\t\t\t\t\toData = JSON.parse(window.localStorage.getItem(\"diploma.analytics.forecast.variants\") || \"{}\");\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\toData = {\n\t\t\t\t\t\tvariants: []\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!oData.variants) {\n\t\t\t\toData.variants = [];\n\t\t\t}\n\t\t\tthis.getView().setModel(new JSONModel(oData), \"view\");\n\t\t},\n\t\t\n\t\t/**\n\t\t * Adds the given style class directly to the dialog.\n\t\t * @param   {string}    sStyleClass     The style class to be added.\n\t\t * @returns {void}\n\t\t */\n\t\taddStyleClass: function(sStyleClass) {\n\t\t    this.byId(\"dlgVariants\").addStyleClass(sStyleClass);\n\t\t},\n\t\t\n\t\t\n\t\t/**\n\t\t * Attaches an event listener on the \"load\" event.\n\t\t * This event is fired when the user presses the load button.\n\t\t * @param   {function}  fnHandler   Callback function.\n\t\t * @param   {object=}   oListener   Listener object on which the handler is called.    \n\t\t * @returns {void}\n\t\t */\n\t\tattachLoad: function(fnHandler, oListener) {\n\t\t    this.attachEvent(\"load\", fnHandler, oListener);\n\t\t},\n\t\t\n\t\t/** Opens the dialog */\n\t\topen: function() {\n\t\t\tthis.byId(\"dlgVariants\").open();\n\t\t},\n\t\t\n\t\t/**\n\t\t * Event handler for the press event of the close button.\n\t\t * Saves the new data and closes the dialog.\n\t\t */\n\t\tonClose: function() {\n\t\t\tvar oData = this.getView().getModel(\"view\").getData();\n\t\t\tif (window.localStorage) {\n\t\t\t\ttry {\n\t\t\t\t\twindow.localStorage.setItem(\"diploma.analytics.forecast.variants\", JSON.stringify(oData));\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\toData = {};\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.byId(\"dlgVariants\").close();\t\n\t\t},\n\t\t\n\t\t/** Event handler for the save button. Creates a new variant. */\n\t\tonSave: function() {\n\t\t\tvar oModel = this.getView().getModel(\"view\");\n\t\t\toModel.getData().variants.push({\n\t\t\t\tname:\t\tthis.getView().getModel(\"i18n\").getProperty(\"itmVariantDefaultName\"),\n\t\t\t\tcontent:\tjQuery.extend(true, {}, this.getView().getModel(\"request\").getData())\n\t\t\t});\n\t\t\toModel.refresh();\n\t\t},\n\t\t\n\t\t/** Event handler for the delete button. Removes the selected variant. */\n\t\tonDelete: function() {\n\t\t\tvar oItem = this.byId(\"lstVariants\").getSelectedItem(),\n\t\t\t\taPath,\n\t\t\t\toModel = this.getView().getModel(\"view\");\n\t\t\tif (!oItem) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\taPath = oItem.getBindingContext(\"view\").getPath().split(\"/\");\n\t\t\t\n\t\t\toModel.getData().variants.splice(parseInt(aPath[aPath.length - 1]), 1);\n\t\t\toModel.refresh();\n\t\t},\n\t\t\n\t\t/** Event handler for the load button. Fires the load event. */\n\t\tonLoad: function() {\n\t\t\tvar oItem = this.byId(\"lstVariants\").getSelectedItem();\n\t\t\tif (!oItem) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.fireEvent(\"load\", jQuery.extend(true, {}, oItem.getBindingContext(\"view\").getObject()));\n\t\t\tthis.byId(\"dlgVariants\").close();\n\t\t}\n\t\t\n\t});\n\t\n});",
		"diploma/analytics/forecast/controller/FioriDependencies.js": "sap.ui.define([\n    \"sap/viz/ui5/data/DimensionDefinition\",\n    \"sap/viz/ui5/data/MeasureDefinition\",\n    \"sap/ui/core/date/Gregorian\",\n    \"sap/suite/ui/commons/ChartContainerRenderer\",\n    \"sap/suite/ui/commons/ChartContainerContentRenderer\",\n    \"sap/viz/ui5/controls/VizFrameRenderer\",\n    \"sap/viz/ui5/data/transformers/ModelToFlattable\",\n    \"sap/m/ScrollContainerRenderer\"\n], function(){\n\treturn null;\n});",
		"diploma/analytics/forecast/model/models.js": "sap.ui.define([\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/Device\"\n], function(JSONModel, Device) {\n\t\"use strict\";\n\n\treturn {\n        \n        /**\n         * Builds the model for storing the device characteristics.\n         * @returns {JSONModel} The device model.\n         */\n\t\tcreateDeviceModel: function() {\n\t\t\tvar oModel = new JSONModel(Device);\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t},\n\t\t\n\t\t/**\n\t\t * Builds the model for storing the request object.\n\t\t * All the user inputs from the application have their value binded to this model.\n\t\t * The data from this model can be used directly in a request to the backend.\n\t\t * @returns {JSONModel} The request model.\n\t\t */\n\t\tcreateRequestModel: function() {\n\t\t\treturn new JSONModel({\n\t\t\t\tinput:\t\t{},\n\t\t\t\tcontrol:\t{},\n\t\t\t\talgorithm:\t\"ARIMA\"\n\t\t\t});\n\t\t},\n\t\t\n\t\t/**\n\t\t * Creates the data model which will store the results from the backend.\n\t\t * @returns {JSONModel} The data model.\n\t\t */\n\t\tcreateDataModel: function() {\n\t\t    var oModel = new JSONModel();\n\t\t    oModel.setSizeLimit(5000);\n\t\t    \n\t\t    /**\n\t\t     * Override for parsing the results by adding a new date column.\n\t\t     * This new column is obtained from the timestamp property.\n\t\t     * @param   {object}    oData   The new data for the model.\n\t\t     * @param   {boolean}   bForce  Whether or not to refresh the forcibly bindings.\n\t\t     * @returns {JSONModel} this.\n\t\t     */\n\t\t    oModel.setData = function(aData, bForce) {\n\t\t        if (aData && aData.result && aData.result.length) {\n    \t\t        for (var i = 0; i < aData.result.length; ++i) {\n    \t\t            aData.result[i].date = new Date(aData.result[i].timestamp);\n    \t\t        }\n\t\t        }\n\t\t        JSONModel.prototype.setData.call(this, aData, bForce);\n\t\t        return this;\n\t\t    };\n\t\t\treturn oModel;        \n\t\t},\n\t\t\n\t\t/**\n\t\t * Builds the main model. This model will simulataneusly contain the configuration data and \n\t\t * the avaliable measures and transports.\n\t\t * @returns {JSONModel} The main model.\n\t\t */\n\t\tcreateMainModel: function() {\n\t\t\tvar oModel = new JSONModel({}),\n\t\t\t\tfnReplacei18n;\n\t\t    oModel.setSizeLimit(5000);\n\t\t\t$.ajax({\n\t\t\t\tmethod: \t\"GET\",\n\t\t\t\turl:\t\t\"/destinations/INET_HTTP_DIPLOMA_J0I/services/secondary.xsjs?entity=Measure&action=Read\",\n\t\t\t\tdataType:\t\"json\",\n\t\t\t\tsuccess:\tfunction(oData) {\n\t\t\t\t\toModel.setData({\n\t\t\t\t\t\tmeasures:\toData\n\t\t\t\t\t}, true);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$.ajax({\n\t\t\t\tmethod: \t\"GET\",\n\t\t\t\turl:\t\tjQuery.sap.getModulePath(\"diploma.analytics.forecast.model\", \"/config.json\"),\n\t\t\t\tdataType:\t\"json\",\n\t\t\t\tsuccess:\tfunction(oData) {\n\t\t\t\t\tif (oModel._i18n) {\n\t\t\t\t\t\tfnReplacei18n(oModel._i18n, oData);\n\t\t\t\t\t}\n\t\t\t\t\toModel.setData({\n\t\t\t\t\t\tconfig:\t\toData\n\t\t\t\t\t}, true);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tfnReplacei18n = function(i18n, oData) {\n\t\t\t\tif (typeof oData !== \"object\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (var sKey in oData) {\n\t\t\t\t\tif (oData.hasOwnProperty(sKey)) {\n\t\t\t\t\t\tif (typeof oData[sKey] === \"string\") {\n\t\t\t\t\t\t\tif (oData[sKey].substring(0,5) === \"i18n>\") {\n\t\t\t\t\t\t\t\toData[sKey] = i18n.getText(oData[sKey].substring(5));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} \n\t\t\t\t\t\telse if (typeof oData[sKey] === \"object\") {\n\t\t\t\t\t\t\tfnReplacei18n(i18n, oData[sKey]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t/**\n\t\t\t * Convenience method for replacing the i18n references in the configuration.\n\t\t\t * @param   {ResourceBundle}    i18n    The i18n resource model.\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\toModel.seti18n = function(i18n) {\n\t\t\t\tif (this.getData() && this.getData().config) {\n\t\t\t\t\tfnReplacei18n(i18n, this.getData());\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}\n\t\t\t\tthis._i18n = i18n;\n\t\t\t};\n\t\t\treturn oModel;\n\t\t}\n\n\t};\n\n});",
		"diploma/analytics/forecast/model/formatter.js": "sap.ui.define([], function() {\n\t\"use strict\";\n\n\treturn {\n\n\t\t/**\n\t\t * Rounds the number unit value to 2 digits\n\t\t * @public\n\t\t * @param {string} sValue the number string to be rounded\n\t\t * @returns {string} sValue with 2 digits rounded\n\t\t */\n\t\tnumber: function(sValue) {\n\t\t\tif (isNaN(sValue) || sValue === null) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\treturn parseFloat(sValue).toFixed(2);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Formats a date.\n\t\t * @public\n\t\t * @param {date}    dValue  The date to be formatted.\n\t\t * @returns {string}    The formatted date.\n\t\t */\n\t\tdate: function(dValue) {\n\t\t    var fixedDate = sap.ui.core.format.DateFormat.getDateInstance({style: \"short\"});\n            return fixedDate.format(dValue);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Identity formatter.\n\t\t */\n\t\tnone: function(sValue) {\n\t\t    return sValue;\n\t\t},\n\t\t\n\t\t/**\n\t\t * Replaces placeholders in a text.\n\t\t * @public\n\t\t * @param\t{string}\tsText\tThe text with placeholders.\n\t\t * @param\t{string...}\taValues\tThe values to replace the placeholders.\n\t\t * @returns {string} The formatted string.\n\t\t */\n\t\tformatMessage: function(sText) {\n\t\t\treturn jQuery.sap.formatMessage(sText, Array.prototype.slice.call(arguments, 1));\n\t\t}\n\n\t};\n\n});",
		"diploma/analytics/forecast/Component.js": "sap.ui.define([\n\t\"sap/ui/core/UIComponent\",\n\t\"sap/ui/Device\",\n\t\"diploma/analytics/forecast/model/models\"\n], function(UIComponent, Device, models) {\n\t\"use strict\";\n\n\treturn UIComponent.extend(\"diploma.analytics.forecast.Component\", {\n\n\t\tmetadata: {\n\t\t\tmanifest: \"json\"\n\t\t},\n\n\t\t/**\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tinit: function() {\n\t\t\t// set the main model\n\t\t\tthis.setModel(models.createMainModel());\n\t\t\t\n\t\t\t// set the request model\n\t\t\tthis.setModel(models.createRequestModel(), \"request\");\n\t\t\t\n\t\t\t// set the data model\n\t\t\tthis.setModel(models.createDataModel(), \"data\");\n\t\t\t\n\t\t\t// call the base component's init function\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t// set the device model\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\t\t\t\n\t\t},\n\t\t\n\t\t/**\n\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t\t * design mode class should be set, which influences the size appearance of some controls.\n\t\t * @public\n\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t\t */\n\t\tgetContentDensityClass: function() {\n\t\t\tif (this._sContentDensityClass === undefined) {\n\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\n\t\t\t\t\tthis._sContentDensityClass = \"\";\n\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\n\t\t\t\t} else {\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._sContentDensityClass;\n\t\t}\n\t});\n\n});"
	}
});