<mvc:View controllerName="diploma.tracking.trace.controller.Main" xmlns:footerbar="sap.ushell.ui.footerbar" xmlns:form="sap.ui.layout.form"
	xmlns:mvc="sap.ui.core.mvc" xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:layout="sap.ui.layout" xmlns:diploma="diploma.tracking.trace.controller">
	<Page id="page">
		<customHeader>
			<Bar>
				<contentLeft>
					<Button press="onNavBack" icon="sap-icon://nav-back" />
				</contentLeft>
				<contentMiddle>
				<Title text="{parts: [{path: 'i18n>mainViewTitle'}, {path: 'i18n>mainViewTitleWithName'}, {path: 'name'}], formatter: '.formatter.title'}" />
				<Button icon="sap-icon://arrow-down" press="onOpenTraceActionSheet" />
				</contentMiddle>
				<contentRight>
					<Button type="Transparent" text="{i18n>btnStartTraceText}" icon="sap-icon://begin" 
						visible="{= !${view>/started} &amp;&amp; ${view>/selectedTrace} !== null }" press="onStart" />
					<Button type="Transparent" text="{i18n>btnPauseTraceText}" icon="sap-icon://pause" 
						visible="{= ${view>/started} &amp;&amp; !${view>/finished} &amp;&amp; !${view>/paused}}" press="onPause" />
					<Button type="Transparent" text="{i18n>btnResumeTraceText}" icon="sap-icon://play" 
						visible="{view>/paused}" press="onResume" />
					<Button type="Transparent" text="{i18n>btnResetTraceText}" icon="sap-icon://reset" 
						visible="{= ${view>/started} }" press="onReset" />
					<Button type="Transparent" text="{i18n>btnShowPolicyDataText}" icon="sap-icon://detail-view" 
						press="onOpenPolicyDialog" />
				</contentRight>
			</Bar>
		</customHeader>
		<content>
			<layout:DynamicSideContent id="sideContent" containerQuery="true" sideContentVisibility="ShowAboveS" sideContentFallDown="BelowM" busy="{view>/busy}">
				<layout:mainContent>
				</layout:mainContent>
				<layout:sideContent>
					<Panel id="pnlProperties" visible="{= ${id} !== null &amp;&amp; ${id} !== undefined }">
						<form:Form class="sapUiNoContentPadding" visible="{= ${showDetails} === 1 &amp;&amp; !${view>/started} }">
							<form:title>
								<core:Title level="H5" text="{i18n>titTransportDetailsFormText}" />
							</form:title>
							<form:layout>
								<form:GridLayout singleColumn="true" />
							</form:layout>
							<form:FormContainer>
								<form:FormElement label="{i18n>lblTransportNameText}">
									<Text text="{Transport/description}"/>
								</form:FormElement>
								<form:FormElement label="{i18n>lblLocationFromToText}">
									<Text text="{= ${Transport/returning} ? 
										${Transport/Route/ToLocation/name} +  ' - ' + ${Transport/Route/FromLocation/name} : 
										${Transport/Route/FromLocation/name} +  ' - ' + ${Transport/Route/ToLocation/name}
									}"/>
								</form:FormElement>
								<form:FormElement label="{i18n>lblTransportDeptText}">
									<Text text="{path: 'Transport/tWhen', formatter: '.formatter.date'}"/>
								</form:FormElement>
							</form:FormContainer>
						</form:Form>
						
						<form:Form visible="{= ${view>/started} }" >
							<form:title>
								<core:Title level="H5" text="{
									parts: [
										{path: 'i18n>titMeasuredValuesFormText'}, 
										{path: 'i18n>titMeasuredValuesFormWithTimestampText'}, 
										{path: 'view>/data/current/timestamp'}
									], 
									formatter: '.formatter.reading'
								}" />
							</form:title>
							<form:layout>
								<form:GridLayout singleColumn="true" />
							</form:layout>
							<form:FormContainer	formElements="{path: 'Transport/Measures', factory: '.buildMeasureLabelAndText'}" />
						</form:Form>
						
						<form:Form  visible="{= ${view>/started} }">
							<form:title>
								<core:Title level="H5" text="{i18n>titLimitsFormText}" />
							</form:title>
							<form:layout>
								<form:ResponsiveGridLayout backgroundDesign="Solid"/>
							</form:layout>
							<form:FormContainer formElements="{path: 'Transport/Limits', factory: '.buildLimitChartElement', parameters: {expand: 'Measure'}}"/>
						</form:Form>
					</Panel>
				</layout:sideContent>
			</layout:DynamicSideContent>
		</content>
		<dependents>
			<diploma:Interval interval="{interval}" enabled="{= ${view>/started} &amp;&amp; !${view>/finished} }" trigger="onTrigger" />
			
			<ActionSheet id="ashTraces" showCancelButton="false" placement="Bottom" title="{i18n>titAvialableTracesText}" 
				buttons="{path: '/Traces', sorter: {path: 'priority'}}">
				<buttons>
					<Button text="{name}" press="onChangeTrace" />
				</buttons>
			</ActionSheet>
			
			<Dialog id="dlgNguwEvent" title="{i18n>dlgEventOccurredTitle}">
				<Panel>
					<List visible="{= ${view>/nguwMessages} === null }" items="{view>/data/current/events}">
						<CustomListItem>
							<Text text="{view>text}" class="sapUiTinyMarginBottom" />
						</CustomListItem>
					</List>
					<HBox alignItems="Center" justifyContent="Center" width="100%">
						<BusyIndicator text="{i18n>bsyCallingNguwText}" class="sapUiSmallMargin" visible="{= ${view>/nguwMessages} === null }" />
					</HBox>
					<MessageStrip
						text="{i18n>mssNguwLimitedConnectivityText}"
						type="Warning"
						showIcon="true"
						visible="{= ${view>/nguwMessages} !== null &amp;&amp; ${view>/nguwDead} }"
						showCloseButton="false"
						class="sapUiTinyMarginBottom" />
					<Table headerText="{i18n>tblNguwMessagesHeaderText}" visible="{= ${view>/nguwMessages} !== null }" items="{view>/nguwMessages}" 
					 noDataText="{i18n>lstEventsNoDataText}" >
						<columns>
							<Column width="5rem"><header><Label text="{i18n>colNguwMessageTypeText}" /></header></Column>
							<Column><header><Label text="{i18n>colNguwMessageContentText}" /></header></Column>
						</columns>
						<ColumnListItem>
							<ObjectStatus state="{path: 'view>type', formatter: '.formatter.messageTypeStatus'}"
								text="{path: 'view>type', formatter: '.formatter.messageTypeText'}"/>
							<Text text="{view>message}" />
						</ColumnListItem>
					</Table>
				</Panel>
				<endButton>
					<Button text="{i18n>btnCloseDialogText}" press="onCloseNguwEventDialog" />
				</endButton>
			</Dialog>
			
			<Dialog id="dlgPolicyData" title="{i18n>dlgPolicyDataTitleText}" contentWidth="35em">
				<Panel width="100%">
					<HBox alignItems="Center" justifyContent="Center" width="100%" visible="{view>/policyLoading}">
						<BusyIndicator text="{i18n>bsyCallingNguwText}" class="sapUiSmallMargin"  />
					</HBox>
					<MessageStrip
						text="{i18n>mssNguwLimitedConnectivityErrorText}"
						type="Error"
						showIcon="true"
						visible="{= ${view>/nguwDead} &amp;&amp; !${view>/policyLoading} }"
						showCloseButton="false"/>
					<form:Form visible="{= !${view>/policyLoading} }">
						<form:layout>
							<form:ResponsiveGridLayout labelSpanL="8" labelSpanM="8" labelSpanS="8" emptySpanL="0" emptySpanM="0" emptySpanS="0" />
						</form:layout>
						<form:FormContainer formElements="{path: 'view>/policy', sorter: {path: 'id'}}" >
							<form:FormElement visible="{= !!${view>value} }"
								label="{parts: [{path: 'view>name'}, {path: 'view>description'}], formatter: '.formatter.nameOrDescription'}">
								<Text text="{view>value}"/>
							</form:FormElement>
						</form:FormContainer>
					</form:Form>
				</Panel>
				<endButton>
					<Button text="{i18n>btnCloseDialogText}" press="onClosePolicyDialog" />
				</endButton>
			</Dialog>
		</dependents>
	</Page>
</mvc:View>