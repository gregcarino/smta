/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "diploma/analytics/statistics/Component-preload",
	"modules": {
		"diploma/analytics/statistics/Component.js": "sap.ui.define([\n\t\"sap/ui/core/UIComponent\",\n\t\"sap/ui/Device\",\n\t\"diploma/analytics/statistics/model/models\",\n\t\"diploma/analytics/statistics/controller/ErrorHandler\"\n], function(UIComponent, Device, models, ErrorHandler) {\n\t\"use strict\";\n\n\treturn UIComponent.extend(\"diploma.analytics.statistics.Component\", {\n\n\t\tmetadata: {\n\t\t\tmanifest: \"json\"\n\t\t},\n\n\t\t/**\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t * In this function, the FLP and device models are set and the router is initialized.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tinit: function() {\n\t\t\t// call the base component's init function\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t// initialize the error handler with the component\n\t\t\tthis._oErrorHandler = new ErrorHandler(this);\n\n\t\t\t// set the device model\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\t\t\t// set the FLP model\n\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\n\t\t\t// set the data model\n\t\t\tthis.setModel(models.createDataModel(), \"data\");\n\n\t\t\t// create the views based on the url/hash\n\t\t\tthis.getRouter().initialize();\n\t\t},\n\n\t\t/**\n\t\t * Returns a generic error handling function.\n\t\t * @function getErrorHandler\n\t\t * @returns {function} Error handling function.\n\t\t */\n\t\tgetErrorHandler: function() {\n\t\t\treturn this._oErrorHandler.showGenericError.bind(this._oErrorHandler);\n\t\t},\n\t\t\n\t\t/**\n\t\t * The component is destroyed by UI5 automatically.\n\t\t * In this method, the ErrorHandler is destroyed.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tdestroy: function() {\n\t\t\tthis._oErrorHandler.destroy();\n\t\t\t// call the base component's destroy function\n\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\n\t\t},\n\n\t\t/**\n\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t\t * design mode class should be set, which influences the size appearance of some controls.\n\t\t * @public\n\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t\t */\n\t\tgetContentDensityClass: function() {\n\t\t\tif (this._sContentDensityClass === undefined) {\n\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\n\t\t\t\t\tthis._sContentDensityClass = \"\";\n\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\n\t\t\t\t} else {\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._sContentDensityClass;\n\t\t}\n\n\t});\n\n});",
		"diploma/analytics/statistics/controller/BaseController.js": "sap.ui.define([\n\t\"sap/ui/core/mvc/Controller\"\n], function(Controller) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"diploma.analytics.statistics.controller.BaseController\", {\n\t\t/**\n\t\t * Convenience method for accessing the router.\n\t\t * @public\n\t\t * @returns {sap.ui.core.routing.Router} the router for this component\n\t\t */\n\t\tgetRouter: function() {\n\t\t\treturn sap.ui.core.UIComponent.getRouterFor(this);\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for getting the view model by name.\n\t\t * @public\n\t\t * @param {string} [sName] the model name\n\t\t * @returns {sap.ui.model.Model} the model instance\n\t\t */\n\t\tgetModel: function(sName) {\n\t\t\treturn this.getView().getModel(sName);\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for setting the view model.\n\t\t * @public\n\t\t * @param {sap.ui.model.Model} oModel the model instance\n\t\t * @param {string} sName the model name\n\t\t * @returns {sap.ui.mvc.View} the view instance\n\t\t */\n\t\tsetModel: function(oModel, sName) {\n\t\t\treturn this.getView().setModel(oModel, sName);\n\t\t},\n\n\t\t/**\n\t\t * Getter for the resource bundle.\n\t\t * @public\n\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\n\t\t */\n\t\tgetResourceBundle: function() {\n\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t},\n\n\t\t/**\n\t\t * Event handler when the share by E-Mail button has been clicked\n\t\t * @public\n\t\t */\n\t\tonShareEmailPress: function() {\n\t\t\tvar oViewModel = (this.getModel(\"objectView\") || this.getModel(\"worklistView\"));\n\t\t\tsap.m.URLHelper.triggerEmail(\n\t\t\t\tnull,\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\n\t\t\t);\n\t\t}\n\n\t});\n\n});",
		"diploma/analytics/statistics/controller/ValueHelp.controller.js": "sap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/m/ColumnListItem\",\n\t\"sap/m/Text\",\n\t\"sap/m/Token\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"diploma/analytics/statistics/model/formatter\"\n], function(Controller, ColumnListItem, Text, Token, JSONModel, Filter, FilterOperator, formatter) {\n\t\"use strict\";\n\t\n\treturn Controller.extend(\"diploma.analytics.statistics.controller.ValueHelp\", {\n\t\t\n\t\tformatter: formatter,\n\t\t\n\t\t/** Initialization lifecycle hook. */\n\t\tonInit: function() {\n\t\t\tthis.getView().setModel(new JSONModel(), \"view\");\n\t\t},\n\t\t\n\t\t/**\n\t\t * Attaches an event listener on the \"confirm\" event.\n\t\t * This event is a proxy event for the press event of the list items.\n\t\t * @param   {function}  fnHandler   Callback function.\n\t\t * @param   {object=}   oListener   Listener object on which the handler is called.    \n\t\t * @returns {void}\n\t\t */\n\t\tattachConfirm: function(fnHandler, oListener) {\n\t\t    this.attachEvent(\"confirm\", fnHandler, oListener);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Attaches an event listener on the \"cancel\" event.\n\t\t * This event is fired when the user presses the cancel button.\n\t\t * @param   {function}  fnHandler   Callback function.\n\t\t * @param   {object=}   oListener   Listener object on which the handler is called.    \n\t\t * @returns {void}\n\t\t */\n\t\tattachCancel: function(fnHandler, oListener) {\n\t\t    this.attachEvent(\"cancel\", fnHandler, oListener);\n\t\t},\n\t\t\n\t\t/** Called when the user presses the confirm button */\n\t\tonConfirm: function() {\n\t\t    var oModel = this.getView().getModel(\"view\"),\n\t\t        aTokens = this.byId(\"tknSelection\").getTokens(),\n\t\t        mParams = {\n\t\t            entity: \toModel.getProperty(\"/entity\"),\n\t\t            selection:\t[]\n\t\t        };\n\t\t    if (aTokens) {\n\t\t        aTokens.forEach(function(oToken) {\n\t\t            mParams.selection.push({\n\t\t                key:    oToken.getKey(),\n\t\t                text:   oToken.getText()\n\t\t            });\n\t\t        });\n\t\t    }\n\t\t    if (this.fireEvent(\"confirm\", mParams, true)) {\n\t\t        this.close();\n\t\t    }\n\t\t},\n\t\t\n\t\t/** Called when the user presses the cancel button. Closes the dialog. */\n\t\tonCancel: function() {\n\t\t    if (this.fireEvent(\"cancel\", {}, true)) {\n\t\t        this.close();\n\t\t    }\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the users selects an intem from the results table.\n\t\t * Adds a new token to the tokenizer.\n\t\t * @param {Event}\toEvent\tThe event object.\n\t\t * @returns {void}\n\t\t */\n\t\tonItemPress: function(oEvent) {\n\t\t\tvar oContext = oEvent.getSource().getBindingContext(),\n\t\t\t\tsId = oContext.getProperty(\"id\"),\n\t\t\t\tsField = this.getView().getModel(\"view\").getProperty(\"/simple/field\"),\n\t\t\t\taTokens,\n\t\t\t\ti;\n\t\t\t\t\n\t\t\taTokens = this.byId(\"tknSelection\").getTokens();\n\t\t\tif (aTokens) {\n\t\t\t\tfor (i = 0; i < aTokens.length; ++i) {\n\t\t\t\t\tif (aTokens[i].getKey() === sId) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.byId(\"tknSelection\").addToken(new Token({\n\t\t\t\tkey:\tsId,\n\t\t\t\ttext:\toContext.getProperty(sField)\n\t\t\t}));\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the user triggers a search action on one of the search fields.\n\t\t * Filters the result table.\n\t\t * @returns {void}\n\t\t */\n\t\tonSearch: function() {\n\t\t\t var oModel = this.getView().getModel(\"view\"),\n\t\t         aFilters = [],\n\t\t         sQuery,\n\t\t         i,\n\t\t         aComplex = oModel.getProperty(\"/complex\");\n\t\t         \n\t\t\tsQuery = oModel.getProperty(\"/simple/value\");\n\t\t    if (sQuery) {\n\t\t        aFilters.push(new Filter(oModel.getProperty(\"/simple/field\"), FilterOperator.Contains, sQuery));\n\t\t    }\n\t\t    \n\t\t    if (oModel.getProperty(\"/advanced\")) {\n\t\t    \tfor (i = 0; i < aComplex.length; ++i) {\n\t\t    \t\tif (aComplex[i].value) {\n\t\t        \t\taFilters.push(new Filter(aComplex[i].field, FilterOperator.Contains, aComplex[i].value));\n\t\t    \t\t}\n\t\t    \t}\n\t\t    }\n\t\t    \n\t\t    this.byId(\"tblSearchMain\").getBinding(\"items\").filter(aFilters, \"Application\");\n\t\t},\n\t\t\n\t\t/**\n\t\t * Adds the given style class directly to the dialog.\n\t\t * @param   {string}    sStyleClass     The style class to be added.\n\t\t * @returns {void}\n\t\t */\n\t\taddStyleClass: function(sStyleClass) {\n\t\t    this.byId(\"dlgValueHelp\").addStyleClass(sStyleClass);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Opens the dialog. Builds the model and binds the table.\n\t\t * @param\t{string}\tsEntity\t\tThe entity name.\n\t\t * @returns {void}\n\t\t */\n\t\topen: function(sEntity) {\n\t\t\tthis._buildModel(sEntity);\n\t\t\tthis._bindTable();\n\t\t\tthis.byId(\"tknSelection\").removeAllTokens();\n\t\t\tthis.byId(\"dlgValueHelp\").open();\n\t\t},\n\t\t\n\t\t/** Toggles between basic and advanced search. */\n\t\tonToggle: function() {\n\t\t\tvar oModel = this.getView().getModel(\"view\");\n\t\t\toModel.setProperty(\"/advanced\", !oModel.getProperty(\"/advanced\"));\n\t\t},\n\t\t\n\t\t/** Close the dialog. */\n\t\tclose: function() {\n\t\t\tthis.byId(\"dlgValueHelp\").close();\n\t\t},\n\t\t\n\t\t/** \n\t\t * Binds the search result table lines to the current entity. \n\t\t * @private\n\t\t * @returns {void}\n\t\t */\n\t\t_bindTable: function() {\n\t\t\tvar oModel = this.getView().getModel(\"view\"),\n\t\t\t\taDisplay = oModel.getProperty(\"/display\"),\n\t\t\t\ti,\n\t\t\t\taCells = [],\n\t\t\t\tmParameters = oModel.getProperty(\"/expand\") ? {\n\t\t\t\t\texpand:\toModel.getProperty(\"/expand\")\n\t\t\t\t} : {};\n\t\t\tfor (i = 0; i < aDisplay.length; ++i) {\n\t\t\t\taCells.push(new Text({text: \"{\" + aDisplay[i].field + \"}\" }));\n\t\t\t}\n\t\t\tthis.byId(\"tblSearchMain\").bindItems({\n\t\t\t\tpath:\t\t\"/\" + oModel.getProperty(\"/entitySet\"),\n\t\t\t\tparameters: mParameters,\n\t\t\t\ttemplate:\tnew ColumnListItem({\n\t\t\t\t\ttype:\t\"Active\",\n\t\t\t\t\tpress:\tthis.onItemPress.bind(this),\n\t\t\t\t\tcells:\taCells\n\t\t\t\t})\n\t\t\t});\n\t\t},\n\t\t\n\t\t/**\n\t\t * Builds the model based on the current entity.\n\t\t * @private\n\t\t * @param\t{string}\tsEntity\t\tThe entity name.\n\t\t * @returns {void}\n\t\t */\n\t\t_buildModel: function(sEntity) {\n\t\t\tvar i18n = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t\tswitch (sEntity) {\n\t\t\t\tcase \"Route\":\n\t\t\t\t\tthis.getView().getModel(\"view\").setData({\n\t\t\t\t\t\tadvanced: false,\n\t\t\t\t\t\tname:\t\ti18n.getText(\"filterTypeRoute\"),\n\t\t\t\t\t\tentitySet:\t\"Routes\",\n\t\t\t\t\t\tentity:\t\t\"Route\",\n\t\t\t\t\t\thasAdvanced: true,\n\t\t\t\t\t\texpand:\t\t\"FromLocation,ToLocation\",\n\t\t\t\t\t\tsimple: {\n\t\t\t\t\t\t\tplaceholder:\ti18n.getText(\"seaSimplePlaceholderName\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"name\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcomplex: [{\n\t\t\t\t\t\t\tlabel:\t\t\ti18n.getText(\"lblRouteLocationFromText\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"FromLocation/name\"\n\t\t\t\t\t\t},{\n\t\t\t\t\t\t\tlabel:\t\t\ti18n.getText(\"lblRouteLocationToText\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"ToLocation/name\"\n\t\t\t\t\t\t}],\n\t\t\t\t\t\tdisplay: [{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colRouteNameHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"name\"\n\t\t\t\t\t\t},{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colLocationFromHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"FromLocation/name\"\n\t\t\t\t\t\t},{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colLocationToHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"ToLocation/name\"\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Schedule\":\n\t\t\t\t\tthis.getView().getModel(\"view\").setData({\n\t\t\t\t\t\tadvanced: false,\n\t\t\t\t\t\tname:\t\ti18n.getText(\"filterTypeSchedule\"),\n\t\t\t\t\t\tentitySet:\t\"Schedules\",\n\t\t\t\t\t\tentity:\t\t\"Schedule\",\n\t\t\t\t\t\texpand:\t\t\"Route\",\n\t\t\t\t\t\thasAdvanced: true,\n\t\t\t\t\t\tsimple: {\n\t\t\t\t\t\t\tplaceholder:\ti18n.getText(\"seaSimplePlaceholderName\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"name\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcomplex: [{\n\t\t\t\t\t\t\tlabel:\t\t\ti18n.getText(\"lblScheduleRouteNameText\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"Route/name\"\n\t\t\t\t\t\t}],\n\t\t\t\t\t\tdisplay: [{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colScheduleNameHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"name\"\n\t\t\t\t\t\t},{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colScheduleRouteHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"Route/name\"\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Person\":\n\t\t\t\t\tthis.getView().getModel(\"view\").setData({\n\t\t\t\t\t\tadvanced: false,\n\t\t\t\t\t\tname:\t\ti18n.getText(\"filterTypePerson\"),\n\t\t\t\t\t\tentitySet:\t\"Persons\",\n\t\t\t\t\t\tentity:\t\t\"Person\",\n\t\t\t\t\t\texpand:\t\t\"Organization\",\n\t\t\t\t\t\thasAdvanced: true,\n\t\t\t\t\t\tsimple: {\n\t\t\t\t\t\t\tplaceholder:\ti18n.getText(\"seaSimplePlaceholderName\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"name\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcomplex: [{\n\t\t\t\t\t\t\tlabel:\t\t\ti18n.getText(\"lblPersonEmailText\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"email\"\n\t\t\t\t\t\t},{\n\t\t\t\t\t\t\tlabel:\t\t\ti18n.getText(\"lblPersonOrganizationText\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"Organization/name\"\n\t\t\t\t\t\t}],\n\t\t\t\t\t\tdisplay: [{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colPersonNameHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"name\"\n\t\t\t\t\t\t},{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colPersonEmailHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"email\"\n\t\t\t\t\t\t},{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colPersonOrganizationHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"Organization/name\"\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Organization\":\n\t\t\t\t\tthis.getView().getModel(\"view\").setData({\n\t\t\t\t\t\tadvanced: false,\n\t\t\t\t\t\tname:\t\ti18n.getText(\"filterTypeOrganization\"),\n\t\t\t\t\t\tentitySet:\t\"Organizations\",\n\t\t\t\t\t\tentity:\t\t\"Organization\",\n\t\t\t\t\t\thasAdvanced: false,\n\t\t\t\t\t\tsimple: {\n\t\t\t\t\t\t\tplaceholder:\ti18n.getText(\"seaSimplePlaceholderName\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"name\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcomplex: [],\n\t\t\t\t\t\tdisplay: [{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colOrganizationNameHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"name\"\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Transport\":\n\t\t\t\t\tthis.getView().getModel(\"view\").setData({\n\t\t\t\t\t\tadvanced: false,\n\t\t\t\t\t\tname:\t\ti18n.getText(\"filterTypeTransport\"),\n\t\t\t\t\t\tentitySet:\t\"Transports\",\n\t\t\t\t\t\tentity:\t\t\"Transport\",\n\t\t\t\t\t\thasAdvanced: true,\n\t\t\t\t\t\texpand:\t\t\"Route,Schedule\",\n\t\t\t\t\t\tsimple: {\n\t\t\t\t\t\t\tplaceholder:\ti18n.getText(\"seaSimplePlaceholderDescription\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"description\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcomplex: [{\n\t\t\t\t\t\t\tlabel:\t\t\ti18n.getText(\"lblTransportRouteText\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"Route/name\"\n\t\t\t\t\t\t},{\n\t\t\t\t\t\t\tlabel:\t\t\ti18n.getText(\"lblTransportScheduleText\"),\n\t\t\t\t\t\t\tvalue:\t\t\t\"\",\n\t\t\t\t\t\t\tfield:\t\t\t\"Schedule/name\"\n\t\t\t\t\t\t}],\n\t\t\t\t\t\tdisplay: [{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colTransportDescHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"description\"\n\t\t\t\t\t\t},{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colTransportRouteHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"Route/name\"\n\t\t\t\t\t\t},{\n\t\t\t\t\t\t\theader:\t\t\ti18n.getText(\"colTransportScheduleHeader\"),\n\t\t\t\t\t\t\tfield:\t\t\t\"Schedule/name\"\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\t\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t});\n});",
		"diploma/analytics/statistics/localService/mockserver.js": "sap.ui.define([\n\t\"sap/ui/core/util/MockServer\"\n], function(MockServer) {\n\t\"use strict\";\n\tvar oMockServer,\n\t\t_sAppModulePath = \"diploma/analytics/compare/\",\n\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\n\n\treturn {\n\n\t\t/**\n\t\t * Initializes the mock server.\n\t\t * You can configure the delay with the URL parameter \"serverDelay\".\n\t\t * The local mock data in this folder is returned instead of the real data for testing.\n\t\t * @public\n\t\t */\n\t\tinit: function() {\n\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\n\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\n\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\n\t\t\t\tsEntity = \"Devices\",\n\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\n\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\n\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\n\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\n\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\n\t\t\t\t// ensure there is a trailing slash\n\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\n\n\t\t\toMockServer = new MockServer({\n\t\t\t\trootUri: sMockServerUrl\n\t\t\t});\n\n\t\t\t// configure mock server with a delay of 1s\n\t\t\tMockServer.config({\n\t\t\t\tautoRespond: true,\n\t\t\t\tautoRespondAfter: (oUriParameters.get(\"serverDelay\") || 1000)\n\t\t\t});\n\n\t\t\t// load local mock data\n\t\t\toMockServer.simulate(sMetadataUrl, {\n\t\t\t\tsMockdataBaseUrl: sJsonFilesUrl,\n\t\t\t\tbGenerateMissingMockData: true\n\t\t\t});\n\n\t\t\tvar aRequests = oMockServer.getRequests(),\n\t\t\t\tfnResponse = function(iErrCode, sMessage, aRequest) {\n\t\t\t\t\taRequest.response = function(oXhr) {\n\t\t\t\t\t\toXhr.respond(iErrCode, {\n\t\t\t\t\t\t\t\"Content-Type\": \"text/plain;charset=utf-8\"\n\t\t\t\t\t\t}, sMessage);\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t// handling the metadata error test\n\t\t\tif (oUriParameters.get(\"metadataError\")) {\n\t\t\t\taRequests.forEach(function(aEntry) {\n\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\n\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Handling request errors\n\t\t\tif (sErrorParam) {\n\t\t\t\taRequests.forEach(function(aEntry) {\n\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\n\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\toMockServer.start();\n\n\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\n\t\t},\n\n\t\t/**\n\t\t * @public returns the mockserver of the app, should be used in integration tests\n\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\n\t\t */\n\t\tgetMockServer: function() {\n\t\t\treturn oMockServer;\n\t\t}\n\t};\n\n});",
		"diploma/analytics/statistics/controller/FioriDependencies.js": "sap.ui.define([\n    \"sap/viz/ui5/data/DimensionDefinition\",\n    \"sap/viz/ui5/data/MeasureDefinition\",\n    \"sap/ui/core/date/Gregorian\",\n    \"sap/suite/ui/commons/ChartContainerRenderer\",\n    \"sap/suite/ui/commons/ChartContainerContentRenderer\",\n    \"sap/viz/ui5/controls/VizFrameRenderer\",\n    \"sap/viz/ui5/data/transformers/ModelToFlattable\",\n    \"sap/m/ScrollContainerRenderer\"\n], function(){\n\treturn null;\n});",
		"diploma/analytics/statistics/controller/App.controller.js": "sap.ui.define([\n\t\"diploma/analytics/statistics/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\"\n], function(BaseController, JSONModel) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"diploma.analytics.statistics.controller.App\", {\n\n\t\tonInit: function() {\n\t\t\tvar oViewModel,\n\t\t\t\tfnSetAppNotBusy,\n\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\n\n\t\t\toViewModel = new JSONModel({\n\t\t\t\tbusy: true,\n\t\t\t\tdelay: 0\n\t\t\t});\n\t\t\tthis.getView().setModel(oViewModel, \"appView\");\n\n\t\t\tfnSetAppNotBusy = function() {\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t};\n\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(fnSetAppNotBusy);\n\n\t\t\t// apply content density mode to root view\n\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t}\n\t});\n\n});",
		"diploma/analytics/statistics/controller/ErrorHandler.js": "sap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/m/MessageBox\"\n], function(Object, MessageBox) {\n\t\"use strict\";\n\n\treturn Object.extend(\"diploma.analytics.statistics.controller.ErrorHandler\", {\n\n\t\t/**\n\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\n\t\t * @class\n\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\n\t\t * @public\n\t\t * @alias diploma.analytics.statistics.controller.ErrorHandler\n\t\t */\n\t\tconstructor: function(oComponent) {\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\n\t\t\tthis._oComponent = oComponent;\n\t\t\tthis._oModel = oComponent.getModel();\n\t\t\tthis._bMessageOpen = false;\n\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\n\n\t\t\tthis._oModel.attachMetadataFailed(function(oEvent) {\n\t\t\t\tvar oParams = oEvent.getParameters();\n\t\t\t\tthis._showMetadataError(oParams.response);\n\t\t\t}, this);\n\n\t\t\tthis._oModel.attachRequestFailed(function(oEvent) {\n\t\t\t\tvar oParams = oEvent.getParameters();\n\n\t\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\n\t\t\t\t// We already cover this case with a notFound target so we skip it here.\n\t\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\n\t\t\t\tif (oParams.response.statusCode !== \"404\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\n\t\t\t\t\t\"Cannot POST\") === 0)) {\n\t\t\t\t\tthis._showServiceError(oParams.response);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t},\n\n\t\t/**\n\t\t * Shows a {@link sap.m.MessageBox} when the metadata call has failed.\n\t\t * The user can try to refresh the metadata.\n\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t * @private\n\t\t */\n\t\t_showMetadataError: function(sDetails) {\n\t\t\tMessageBox.error(\n\t\t\t\tthis._sErrorText, {\n\t\t\t\t\tid: \"metadataErrorMessageBox\",\n\t\t\t\t\tdetails: sDetails,\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\tactions: [MessageBox.Action.RETRY, MessageBox.Action.CLOSE],\n\t\t\t\t\tonClose: function(sAction) {\n\t\t\t\t\t\tif (sAction === MessageBox.Action.RETRY) {\n\t\t\t\t\t\t\tthis._oModel.refreshMetadata();\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this)\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\n\t\t * Only the first error message will be display.\n\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t * @private\n\t\t */\n\t\t_showServiceError: function(sDetails) {\n\t\t\tif (this._bMessageOpen) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._bMessageOpen = true;\n\t\t\tMessageBox.error(\n\t\t\t\tthis._sErrorText, {\n\t\t\t\t\tid: \"serviceErrorMessageBox\",\n\t\t\t\t\tdetails: sDetails,\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\n\t\t\t\t\tonClose: function() {\n\t\t\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\t\t}.bind(this)\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\n\t\t * Only the first error message will be display.\n\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t * @private\n\t\t */\n\t\tshowGenericError: function(oDetails) {\n\t\t\tvar sDetails;\n\t\t\tif (this._bMessageOpen) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._bMessageOpen = true;\n\t\t\tif (typeof oDetails === \"string\") {\n\t\t\t\tsDetails = oDetails;\n\t\t\t}\n\t\t\telse if (oDetails.response) {\n\t\t\t\tsDetails = oDetails.response;\n\t\t\t}\n\t\t\tMessageBox.error(\n\t\t\t\tthis._sErrorText, {\n\t\t\t\t\tid: \"serviceErrorMessageBox\",\n\t\t\t\t\tdetails: sDetails,\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\n\t\t\t\t\tonClose: function() {\n\t\t\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\t\t}.bind(this)\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n});",
		"diploma/analytics/statistics/controller/Results.controller.js": "sap.ui.define([\n\t\"diploma/analytics/statistics/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n    \"sap/viz/ui5/data/FlattenedDataset\",\n    \"sap/viz/ui5/controls/common/feeds/FeedItem\",\n    \"sap/viz/ui5/format/ChartFormatter\",\n    \"sap/ui/model/Filter\",\n    \"sap/viz/ui5/controls/Popover\",\n    \"sap/m/Token\",\n\t\"diploma/analytics/statistics/model/formatter\",\n    \"diploma/analytics/statistics/controller/FioriDependencies\"\n], function(BaseController, JSONModel, FlattenedDataset, FeedItem, ChartFormatter, Filter, Popover, Token, formatter) {\n\t\"use strict\";\n    \n    var FIORI_LABEL_SHORTFORMAT_10 = \"__UI5__ShortIntegerMaxFraction10\";\n    var FIORI_LABEL_FORMAT_2 = \"__UI5__FloatMaxFraction2\";\n    var FIORI_LABEL_SHORTFORMAT_2 = \"__UI5__ShortIntegerMaxFraction2\";\n    var FIORI_LABEL_DATEFORMAT = \"__UI5__CustomDate\";\n    \n\treturn BaseController.extend(\"diploma.analytics.statistics.controller.Results\", {\n\n\t\tformatter: formatter,\n\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Called when the worklist controller is instantiated.\n\t\t * @public\n\t\t */\n\t\tonInit: function() {\n\t\t\tvar oVizFrame, oPopOver;\n\t\t\tthis._initChartFormatter();\n\t\t\t\n\t\t\toVizFrame = this.getView().byId(\"lineChart\");\n            oPopOver = new Popover({id: this.createId(\"linePopover\")});\n            this.getView().addDependent(oPopOver);\n            oPopOver.connect(oVizFrame.getVizUid());\n            \n\t\t\tthis.getRouter().getRoute(\"results\").attachPatternMatched(this._onResultsMatched, this);\n\t\t},\n\t\t\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\t\t\n\t\t/**\n\t\t * Navigates back in the browser history, if the entry was created by this app.\n\t\t * If not, it navigates to the Fiori Launchpad home page.\n\t\t * @public\n\t\t */\n\t\tonNavBack: function() {\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash(),\n\t\t\t\toRouter = this.getOwnerComponent().getRouter();\n\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t// The history contains a previous entry\n\t\t\t\thistory.go(-1);\n\t\t\t} else {\n\t\t\t\t// Navigate back to selection screen\n\t\t\t\toRouter.navTo(\"selection\");\n\t\t\t}\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the results route is matched.\n\t\t * If new data has been received, it is parsed.\n\t\t * If no data is available, then a navigation to the selection screen is issued.\n\t\t * @private\n\t\t * @returns {void}\n\t\t */\n\t\t_onResultsMatched: function() {\n\t\t\tvar oData = this.getView().getModel(\"data\").getData();\n\t\t\tif (oData && (oData.config || oData.length)) {\n\t\t\t\tif (oData.config) {\n\t\t\t\t\tthis._onDataReceived(oData);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.onNavBack();\n\t\t\t}\n\t\t},\n\t\t\n\t\t\n\t\t/**\n\t\t * Called when data is received from the server.\n\t\t * Processes the data and initializes the charts.\n\t\t * @private\n\t\t * @param\t{object}\toData\tThe data received from the server.\n\t\t * @returns\t{void}\n\t\t */\n\t\t_onDataReceived: function(oData) {\n\t\t\tvar oDataModel = this.getModel(\"data\"),\n\t\t\t\ti18n = this.getModel(\"i18n\").getResourceBundle(),\n\t\t\t\tfnReplaceI18n = function(oObject) {\n\t\t\t\t\tvar sKey, i, aParams;\n\t\t\t\t\tif (typeof oObject === \"object\" && oObject !== null) {\n\t\t\t\t\t\tif (oObject.text && oObject.params instanceof Array && oObject.text.indexOf(\"i18n>\") === 0) {\n\t\t\t\t\t\t\tfor (i = 0, aParams = []; i < oObject.params.length; ++i) {\n\t\t\t\t\t\t\t\taParams.push(fnReplaceI18n(oObject.params[i]));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn i18n.getText(oObject.text.substr(5), aParams); \n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tfor (sKey in oObject) {\n\t\t\t\t\t\t\t\tif (oObject.hasOwnProperty(sKey)) {\n\t\t\t\t\t\t\t\t\toObject[sKey] = fnReplaceI18n(oObject[sKey]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof oObject === \"string\") {\n\t\t\t\t\t\tif (oObject.indexOf(\"i18n>\") === 0) {\n\t\t\t\t\t\t\treturn i18n.getText(oObject.substr(5));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\treturn oObject;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn oObject;\n\t\t\t\t};\n\t\t\t\t\n\t\t\tfor (var i = 0; i < oData.results.length; ++i) {\n\t\t\t\tif (oData.results[i].date) {\n\t\t\t\t\toData.results[i].date = new Date(oData.results[i].date);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!(oData && oData.config && oData.config.window && oData.config.window.start && oData.config.window.end)) {\n\t\t\t\toData.config.window = {start: null, end: null};\n\t\t\t}\n\t\t\toDataModel.setData(oData.results);\n\t\t\toData.config = fnReplaceI18n(oData.config);\n\t\t\tthis._initLineChart(oData.config);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Initializes the chart formatter.\n\t\t */\n\t\t_initChartFormatter: function() {\n\t\t\tvar chartFormatter = ChartFormatter.getInstance();\n            chartFormatter.registerCustomFormatter(FIORI_LABEL_SHORTFORMAT_10, function(value) {\n                var fixedInteger = sap.ui.core.format.NumberFormat.getIntegerInstance({style: \"short\",\n                    maxFractionDigits: 10});\n                return fixedInteger.format(value);\n            });\n            chartFormatter.registerCustomFormatter(FIORI_LABEL_FORMAT_2, function(value) {\n                var fixedFloat = sap.ui.core.format.NumberFormat.getFloatInstance({style: \"Standard\",\n                    maxFractionDigits: 2});\n                return fixedFloat.format(value);\n            });\n            chartFormatter.registerCustomFormatter(FIORI_LABEL_SHORTFORMAT_2, function(value) {\n                var fixedInteger = sap.ui.core.format.NumberFormat.getIntegerInstance({style: \"short\",\n                    maxFractionDigits: 2});\n                return fixedInteger.format(value);\n            });\n            chartFormatter.registerCustomFormatter(FIORI_LABEL_DATEFORMAT, function(value) {\n                var fixedDate = sap.ui.core.format.DateFormat.getDateInstance(\"dd.MM.yyyy\");\n                return fixedDate.format(value);\n            });\n            sap.viz.api.env.Format.numericFormatter(chartFormatter);\n\t\t},\n\t\t\n\t\t\n\t\t/**\n\t\t * Initializes the line chart.\n\t\t */\n\t\t_initLineChart: function(oData) {\n\t\t\tvar oVizFrame = this.getView().byId(\"lineChart\"),\n\t\t\t\toDataset,\n\t\t\t\toPopover = this.byId(\"linePopover\"),\n\t\t\t\toFormat = {};\n            oVizFrame.setVizType(oData.time ? \"timeseries_line\" : \"column\");\n            oVizFrame.removeAllFeeds();\n            \n            oVizFrame.setVizProperties({\n                general: {\n                    layout: {\n                        padding: 0.04\n                    }\n                },\n                title: {\n                \tvisible: false\n                },\n                timeAxis: oData.time ? {\n                \ttitle: {\n                \t\tvisible: true,\n                \t\ttext:\t this.getResourceBundle().getText(\"timeDimension\")\n                \t},\n                    interval: {\n                        unit: \"auto\"\n                    },\n                    levels: oData.levels\n                } : undefined,\n                valueAxis: {\n                \ttitle: {\n                \t\tvisible: true,\n                \t\ttext:\t oData.value.title\n                \t}\n                },\n                plotArea: {\n                    dataLabel: {                        \n                        visible: false,\n                        formatString: FIORI_LABEL_SHORTFORMAT_2,\n                        hideWhenOverlap: true\n                    },\n                    window: oData.window\n                },\n                interaction: {\n                \tselectability: {\n                \t\tmode: \"SINGLE\"\n                \t}\n                }\n            });\n\t\t\t\n\t\t\tif (oData.time) {\n\t            oDataset = new FlattenedDataset({\n\t\t\t\t\tdimensions: [{\n\t\t\t\t\t\tname:\t\tthis.getResourceBundle().getText(\"timeDimension\"),\n\t\t\t\t\t\tvalue:\t\t\"{date}\",\n\t\t\t\t\t\tdataType:\t\"date\"\n\t\t\t\t\t}],\n\t                measures: [oData.measures.map(function(oMeasure){\n\t        \t\t\toFormat[oMeasure.name] = FIORI_LABEL_FORMAT_2;\n\t                \treturn {\n\t                \t\tname:\toMeasure.name,\n\t                \t\tvalue:\t\"{\" + oMeasure.field + \"}\"\n\t                \t};\n\t                })],\n\t                data: {\n\t                \tpath: \"/\"\n\t                }\n\t            });\n\t\t\t}\n\t\t\telse {\n\t            oDataset = new FlattenedDataset({\n\t\t\t\t\tdimensions: [{\n\t\t\t\t\t\tname:\t\toData.dimension.name,\n\t\t\t\t\t\tvalue:\t\t\"{label}\"\n\t\t\t\t\t}],\n\t                measures: [{\n\t                \tname:\t\toData.measure.name,\n\t                \tvalue:\t\t\"{value}\"\n\t                }],\n\t                data: {\n\t                \tpath: \"/\"\n\t                }\n\t            });\n\t            oFormat[oData.measure.name] = FIORI_LABEL_FORMAT_2;\n\t\t\t}\n\t\t\t\n\t\t\toFormat[this.getResourceBundle().getText(\"timeDimension\")] = FIORI_LABEL_DATEFORMAT;\n\t\t\toPopover.setFormatString(oFormat);\n\t\t\t\n            oVizFrame.setDataset(oDataset);\n            oVizFrame.setModel(this.getModel(\"data\"));\n            \n            if (oData.time) {\n\t            oVizFrame.addFeed(new FeedItem({\n\t                uid:\t\"timeAxis\",\n\t                type:\t\"Dimension\",\n\t                values: [this.getResourceBundle().getText(\"timeDimension\")]\n\t            }));\n\t            oVizFrame.addFeed(new FeedItem({\n\t                uid:\t\"valueAxis\",\n\t                type:\t\"Measure\",\n\t                values: oData.measures.map(function(oMeasure){\n\t                \treturn oMeasure.name;\n\t                })\n\t            }));\n            }\n            else {\n\t            oVizFrame.addFeed(new FeedItem({\n\t                uid:\t\"categoryAxis\",\n\t                type:\t\"Dimension\",\n\t                values: [oData.dimension.name]\n\t            }));\n\t            oVizFrame.addFeed(new FeedItem({\n\t                uid:\t\"valueAxis\",\n\t                type:\t\"Measure\",\n\t                values:\t[oData.measure.name]\n\t            }));\n            }\n\t\t}\n\t});\n});",
		"diploma/analytics/statistics/view/App.view.xml": "<mvc:View controllerName=\"diploma.analytics.statistics.controller.App\" displayBlock=\"true\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<App busy=\"{appView>/busy}\" busyIndicatorDelay=\"{appView>/delay}\" id=\"app\"/>\n</mvc:View>",
		"diploma/analytics/statistics/view/ValueHelp.view.xml": "<mvc:View controllerName=\"diploma.analytics.statistics.controller.ValueHelp\"\n\txmlns:mvc=\"sap.ui.core.mvc\" \n    xmlns:core=\"sap.ui.core\" \n    xmlns:form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<Dialog id=\"dlgValueHelp\" \n\t    contentHeight=\"75%\"\n\t\tcontentWidth=\"40rem\" \n\t\tstretch=\"{device>/system/phone}\"\n\t    title=\"{parts: [{path: 'i18n>dlgValueHelpTitle'}, {path: 'view>/name'}], formatter: '.formatter.formatMessage'}\">\n\t\t<VBox>\n\t\t\t<VBox  class=\"sapUiTinyMargin\">\n\t\t\t    <Label text=\"{i18n>lblValueHelpSelectionText}\"/>\n\t            <ScrollContainer width=\"100%\" horizontal=\"true\" vertical=\"false\">\n\t                <Tokenizer id=\"tknSelection\" editable=\"true\"/>\n\t            </ScrollContainer>\n            </VBox>\n\t        <Toolbar id=\"tlbMainSearch\">\n\t            <SearchField value=\"{view>/simple/value}\"\n\t                placeholder=\"{view>/simple/placeholder}\"\n\t                search=\"onSearch\"/>\n\t            <ToolbarSpacer/>\n\t            <Button id=\"btnAdvancedSearch\" \n\t            \tvisible=\"{view>/hasAdvanced}\"\n\t                type=\"Transparent\"\n\t                text=\"{= ${view>/advanced} ? ${i18n>hideAdvanced} : ${i18n>showAdvanced} }\"\n\t                press=\"onToggle\"/>\n\t        </Toolbar>\n\t        \n\t        <Panel visible=\"{view>/advanced}\" class=\"sapUiNoContentPadding\">\n\t            <form:Form editable=\"true\">\n\t\t\t\t\t<form:layout>\n\t\t\t\t\t\t<form:ResponsiveGridLayout\n\t\t\t\t\t\t\tlabelSpanL=\"3\" labelSpanM=\"3\"\n\t\t\t\t\t\t\temptySpanL=\"1\" emptySpanM=\"1\"\n\t\t\t\t\t\t\tcolumnsL=\"1\" columnsM=\"1\" />\n\t\t\t\t\t</form:layout>\n\t            \t<form:FormContainer formElements=\"{view>/complex}\">\n\t            \t\t<form:FormElement label=\"{view>label}\" >\n\t            \t\t\t<SearchField value=\"{view>value}\"\n\t\t\t\t                search=\"onSearch\"/>\n\t            \t\t</form:FormElement>\n\t            \t</form:FormContainer>\n\t            </form:Form>\n\t        </Panel>\n\t        <Table id=\"tblSearchMain\"\n\t            growing=\"true\"\n\t            columns=\"{view>/display}\">\n\t            <columns>\n\t                <Column><Label text=\"{view>header}\"/></Column>\n\t            </columns>\n\t        </Table>\n\t    </VBox>\n\t    <buttons>\n\t        <Button text=\"{i18n>confirm}\" press=\"onConfirm\"/>\n\t        <Button text=\"{i18n>cancel}\" press=\"onCancel\"/>\n\t    </buttons>\n\t</Dialog>\n</mvc:View>",
		"diploma/analytics/statistics/view/Selection.view.xml": "<mvc:View controllerName=\"diploma.analytics.statistics.controller.Selection\" \n\txmlns:footerbar=\"sap.ushell.ui.footerbar\"\n\txmlns:mvc=\"sap.ui.core.mvc\" \n\txmlns:semantic=\"sap.m.semantic\" \n\txmlns=\"sap.m\" \n\txmlns:l=\"sap.ui.layout\"\n\txmlns:f=\"sap.ui.layout.form\"\n\txmlns:d=\"diploma.analytics.statistics.controller\"\n\txmlns:sc=\"sap.suite.ui.commons\"\n\txmlns:core=\"sap.ui.core\" \n\txmlns:viz=\"sap.viz.ui5.controls\">\n\t<semantic:FullscreenPage id=\"page\" \n\t\tnavButtonPress=\"onNavBack\" \n\t\tshowNavButton=\"true\" \n\t\ttitle=\"{i18n>selectionViewTitle}\"\n\t\tbusy=\"{view>/busy}\"\n\t\tbusyIndicatorDelay=\"100\">\n\t\t<semantic:content>\n\t\t\t<f:Form maxContainerCols=\"2\" editable=\"true\" id=\"frmSelection\" width=\"100%\">\n\t\t\t\t<f:layout>\n\t\t\t\t\t<f:ResponsiveGridLayout labelSpanL=\"4\" labelSpanM=\"4\"\n\t\t\t\t\t\temptySpanL=\"3\" emptySpanM=\"3\" columnsL=\"1\" columnsM=\"1\" />\n\t\t\t\t</f:layout>\n\t\t\t\t\n\t\t\t\t<f:FormContainer>\n\t\t\t\t\t<f:toolbar>\n\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t<Title text=\"{i18n>titDataSourceText}\" level=\"H4\" titleStyle=\"H4\"/>\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</f:toolbar>\n\t\t\t\t\t<f:FormElement label=\"{i18n>selMeasure}\">\n\t\t\t\t\t\t<Select items=\"{/Measures}\" width=\"100%\" selectedKey=\"{view>/selection/measure}\">\n\t\t\t\t\t\t\t<core:Item key=\"{id}\" text=\"{name}\" />\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t<f:FormElement label=\"{i18n>selDataType}\">\n\t\t\t\t\t\t<Select width=\"100%\" items=\"{view>/dataTypes}\" selectedKey=\"{view>/selection/dataType}\">\n\t\t\t\t\t\t\t<core:Item key=\"{view>key}\" text=\"{view>text}\" />\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</f:FormElement>\n\t\t\t\t</f:FormContainer>\n\t\t\t\t\n\t\t\t\t<f:FormContainer>\n\t\t\t\t\t<f:toolbar>\n\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t<Title text=\"{i18n>titAggregationText}\" level=\"H4\" titleStyle=\"H4\"/>\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</f:toolbar>\n\t\t\t\t\t<f:FormElement label=\"{i18n>lblAggregationTypeText}\">\n\t\t\t\t\t\t<Select items=\"{view>/aggregationTypes}\" width=\"100%\" selectedKey=\"{view>/selection/aggregationType}\">\n\t\t\t\t\t\t\t<core:Item key=\"{view>key}\" text=\"{view>text}\" />\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t<f:FormElement label=\"{i18n>lblTimeBreakDownText}\">\n\t\t\t\t\t\t<Select width=\"100%\" items=\"{view>/timeTypes}\" selectedKey=\"{view>/selection/timeType}\">\n\t\t\t\t\t\t\t<core:Item key=\"{view>key}\" text=\"{view>text}\" />\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</f:FormElement>\n\t\t\t\t</f:FormContainer>\n\t\t\t\t\n\t\t\t\t<f:FormContainer>\n\t\t\t\t\t<f:toolbar>\n\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t<Title text=\"{i18n>titFilterText}\" level=\"H4\" titleStyle=\"H4\"/>\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</f:toolbar>\n\t\t\t\t\t<f:FormElement label=\"{i18n>lblFilterTypeText}\">\n\t\t\t\t\t\t<Select items=\"{view>/filterTypes}\" width=\"100%\" selectedKey=\"{view>/selection/filterType}\"\n\t\t\t\t\t\t\tchange=\"onFilterTypeChange\">\n\t\t\t\t\t\t\t<core:Item key=\"{view>key}\" text=\"{view>text}\" />\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t<f:FormElement label=\"{i18n>lblFilterValueText}\" visible=\"{= ${view>/selection/filterType} !== 'None' }\">\n\t\t\t\t\t\t<MultiInput id=\"mltFilterValues\" \n\t\t\t\t\t\t\teditable=\"true\" \n\t\t\t\t\t\t\tmaxTokens=\"10\" \n\t\t\t\t\t\t\tvalueHelpOnly=\"true\" \n\t\t\t\t\t\t\tshowValueHelp=\"true\" \n\t\t\t\t\t\t\tvalueHelpRequest=\"onValueHelpRequest\" />\n\t\t\t\t\t</f:FormElement>\n\t\t\t\t</f:FormContainer>\n\t\t\t</f:Form>\n\t\t</semantic:content>\n\t\t<semantic:dependents>\n\t\t\t<mvc:XMLView viewName=\"diploma.analytics.statistics.view.ValueHelp\" id=\"vhdEntity\"/>\n\t\t</semantic:dependents>\n\t\t<semantic:customFooterContent>\n\t\t\t<Button id=\"btnNext\" icon=\"sap-icon://display\" text=\"{i18n>btnNextText}\" press=\"onNextPress\"/>\n\t\t</semantic:customFooterContent>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"diploma/analytics/statistics/model/models.js": "sap.ui.define([\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/Device\"\n], function(JSONModel, Device) {\n\t\"use strict\";\n\n\treturn {\n\n\t\tcreateDeviceModel: function() {\n\t\t\tvar oModel = new JSONModel(Device);\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t},\n\n\t\tcreateFLPModel: function() {\n\t\t\tvar fnGetUser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\n\t\t\t\tbIsShareInJamActive = fnGetUser ? fnGetUser().isJamActive() : false,\n\t\t\t\toModel = new JSONModel({\n\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\n\t\t\t\t});\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t},\n\t\t\n\t\tcreateDataModel: function() {\n\t\t\treturn new JSONModel();\n\t\t}\n\n\t};\n\n});",
		"diploma/analytics/statistics/model/formatter.js": "sap.ui.define([], function() {\n\t\"use strict\";\n\n\treturn {\n\n\t\t/**\n\t\t * Rounds the number unit value to 2 digits\n\t\t * @public\n\t\t * @param {string} sValue the number string to be rounded\n\t\t * @returns {string} sValue with 2 digits rounded\n\t\t */\n\t\tnumberUnit: function(sValue) {\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\treturn parseFloat(sValue).toFixed(2);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Replaces placeholders in a text.\n\t\t * @public\n\t\t * @param\t{string}\tsText\tThe text with placeholders.\n\t\t * @param\t{string...}\taValues\tThe values to replace the placeholders.\n\t\t * @returns {string} The formatted string.\n\t\t */\n\t\tformatMessage: function(sText) {\n\t\t\treturn jQuery.sap.formatMessage(sText, Array.prototype.slice.call(arguments, 1));\n\t\t}\n\n\t};\n\n});",
		"diploma/analytics/statistics/controller/Selection.controller.js": "sap.ui.define([\n\t\"diploma/analytics/statistics/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n    \"sap/m/Token\",\n\t\"diploma/analytics/statistics/model/formatter\",\n    \"diploma/analytics/statistics/controller/FioriDependencies\"\n], function(BaseController, JSONModel, Token, formatter) {\n\t\"use strict\";\n\treturn BaseController.extend(\"diploma.analytics.statistics.controller.Selection\", {\n\n\t\tformatter: formatter,\n\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Called when the worklist controller is instantiated.\n\t\t * @public\n\t\t */\n\t\tonInit: function() {\n\t\t\tthis._createViewModel();\n\t\t\t\n\t\t\tthis.byId(\"vhdEntity\").getController().addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t\tthis.byId(\"vhdEntity\").getController().attachConfirm(this.onSelectFilterEntities, this);\n\t\t},\n\t\t\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\t\t\n\t\t/**\n\t\t * Called when the user confirms the selection from the value help.\n\t\t * Removes all previous selections and adds the new ones.\n\t\t * @public\n\t\t * @param\t{Event}\toEvent\tThe event object.\n\t\t * @returns {void}\n\t\t */\n\t\tonSelectFilterEntities: function(oEvent) {\n\t\t\tvar aSelection = oEvent.getParameter(\"selection\"),\n\t\t\t\tsEntity = oEvent.getParameter(\"entity\"),\n\t\t\t\ti,\n\t\t\t\tsInput = this.byId(\"mltFilterValues\");\n\t\t\t\t\n\t\t\tsInput.removeAllTokens();\t\n\t\t\tif (this.getModel(\"view\").getProperty(\"/selection/filterType\") === sEntity) {\n\t\t\t\tfor (i = 0; i < aSelection.length; ++i) {\n\t\t\t\t\tsInput.addToken(new Token(aSelection[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\t/** Called when the user presses the filter value help. Opens the value help view. */\n\t\tonValueHelpRequest: function() {\n\t\t\tthis.byId(\"vhdEntity\").getController().open(this.getModel(\"view\").getProperty(\"/selection/filterType\"));\n\t\t},\n\t\t\n\t\t/** Called when the user presses the \"next\" button. */\n\t\tonNextPress: function(){\n\t\t\tvar oViewModel = this.getModel(\"view\"),\n\t\t\t\taTokens = this.byId(\"mltFilterValues\").getTokens(),\n\t\t\t\toData = jQuery.extend({}, oViewModel.getProperty(\"/selection\"), {\n\t\t\t\t\tfilterValue:\taTokens.map(function(oToken) {\n\t\t\t\t\t\treturn oToken.getKey();\n\t\t\t\t\t}) \n\t\t\t\t});\n\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t$.ajax({\n\t\t\t\tmethod: \t\"POST\",\n\t\t\t\turl:\t\t\"/destinations/INET_HTTP_DIPLOMA_J0I/services/secondary.xsjs?entity=Statistics\",\n\t\t\t\tdataType:\t\"json\",\n\t\t\t\tdata:\t\tJSON.stringify(oData),\n\t\t\t\theaders:\t{ \"X-CSRF-Token\": this.getModel().getSecurityToken() },\n\t\t\t\tsuccess:\tfunction(oResult){\n\t\t\t\t\tthis.getModel(\"data\").setData(oResult);\n\t\t\t\t\tthis.getOwnerComponent().getRouter().navTo(\"results\");\n\t\t\t\t}.bind(this),\n\t\t\t\terror:\t\tthis.getOwnerComponent().getErrorHandler()\n\t\t\t}).always(oViewModel.setProperty.bind(oViewModel, \"/busy\", false));\n\t\t},\n\t\t\n\t\t/**\n\t\t * Navigates back in the browser history, if the entry was created by this app.\n\t\t * If not, it navigates to the Fiori Launchpad home page.\n\t\t * @public\n\t\t */\n\t\tonNavBack: function() {\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash(),\n\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\n\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t// The history contains a previous entry\n\t\t\t\thistory.go(-1);\n\t\t\t} else {\n\t\t\t\t// Navigate back to FLP home\n\t\t\t\toCrossAppNavigator.toExternal({\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tshellHash: \"#\"\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t\n\t\t/** Called when the user changes the filter type. Removes all filter value selections. */\n\t\tonFilterTypeChange: function() {\n\t\t\tthis.byId(\"mltFilterValues\").removeAllTokens();\t\n\t\t},\n\t\t\n\t\t/**\n\t\t * Builds the view model.\n\t\t * @private\n\t\t * @returns {void}\n\t\t */\n\t\t_createViewModel: function() {\n\t\t\tvar i18n = this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t\tthis.setModel(new JSONModel({\n\t\t\t\tbusy: false,\n\t\t\t\tselection: {\n\t\t\t\t\tmeasure:\tnull,\n\t\t\t\t\tdataType:\t\"0\",\n\t\t\t\t\taggregationType: \"None\",\n\t\t\t\t\ttimeType:\t\"None\",\n\t\t\t\t\tfilterType:\t\"None\"\n\t\t\t\t},\n\t\t\t\tdataTypes: [{\n\t\t\t\t\tkey:\t\"Value\",\n\t\t\t\t\ttext:\ti18n.getText(\"valueSeries\")\n\t\t\t\t}, {\n\t\t\t\t\tkey:\t\"Count\",\n\t\t\t\t\ttext:\ti18n.getText(\"countSeries\")\n\t\t\t\t}, {\n\t\t\t\t\tkey:\t\"Offset\",\n\t\t\t\t\ttext:\ti18n.getText(\"offsetSeries\")\n\t\t\t\t}],\n\t\t\t\taggregationTypes: [{\n\t\t\t\t\tkey:\t\"None\",\n\t\t\t\t\ttext:\ti18n.getText(\"aggregationTypeNone\")\n\t\t\t\t}, {\n\t\t\t\t\tkey:\t\"Route\",\n\t\t\t\t\ttext:\ti18n.getText(\"aggregationTypeRoute\")\n\t\t\t\t}, {\n\t\t\t\t\tkey:\t\"Schedule\",\n\t\t\t\t\ttext:\ti18n.getText(\"aggregationTypeSchedule\")\n\t\t\t\t}, {\n\t\t\t\t\tkey:\t\"Person\",\n\t\t\t\t\ttext:\ti18n.getText(\"aggregationTypePerson\")\n\t\t\t\t}, {\n\t\t\t\t\tkey:\t\"Organization\",\n\t\t\t\t\ttext:\ti18n.getText(\"aggregationTypeOrganization\")\n\t\t\t\t}, {\n\t\t\t\t\tkey:\t\"Transport\",\n\t\t\t\t\ttext:\ti18n.getText(\"aggregationTypeTransport\")\n\t\t\t\t}],\n\t\t\t\ttimeTypes: [{\n\t\t\t\t\tkey:\t\"None\",\n\t\t\t\t\ttext:\ti18n.getText(\"timeTypeNone\")\n\t\t\t\t},{\n\t\t\t\t\tkey:\t\"Day\",\n\t\t\t\t\ttext:\ti18n.getText(\"timeTypeDay\")\n\t\t\t\t}, {\n\t\t\t\t\tkey:\t\"Month\",\n\t\t\t\t\ttext:\ti18n.getText(\"timeTypeMonth\")\n\t\t\t\t}, {\n\t\t\t\t\tkey:\t\"Year\",\n\t\t\t\t\ttext:\ti18n.getText(\"timeTypeYear\")\n\t\t\t\t}],\n\t\t\t\tfilterTypes: [{\n\t\t\t\t\tkey:\t\"None\",\n\t\t\t\t\ttext:\ti18n.getText(\"filterTypeNone\")\n\t\t\t\t}, {\n\t\t\t\t\tkey:\t\"Route\",\n\t\t\t\t\ttext:\ti18n.getText(\"filterTypeRoute\")\n\t\t\t\t}, {\n\t\t\t\t\tkey:\t\"Schedule\",\n\t\t\t\t\ttext:\ti18n.getText(\"filterTypeSchedule\")\n\t\t\t\t}, {\n\t\t\t\t\tkey:\t\"Person\",\n\t\t\t\t\ttext:\ti18n.getText(\"filterTypePerson\")\n\t\t\t\t}, {\n\t\t\t\t\tkey:\t\"Organization\",\n\t\t\t\t\ttext:\ti18n.getText(\"filterTypeOrganization\")\n\t\t\t\t}, {\n\t\t\t\t\tkey:\t\"Transport\",\n\t\t\t\t\ttext:\ti18n.getText(\"filterTypeTransport\")\n\t\t\t\t}]\n\t\t\t}), \"view\");\n\t\t}\n\t\t\n\t\t\n\t});\n});",
		"diploma/analytics/statistics/view/Results.view.xml": "<mvc:View controllerName=\"diploma.analytics.statistics.controller.Results\" \n\txmlns:footerbar=\"sap.ushell.ui.footerbar\"\n\txmlns:mvc=\"sap.ui.core.mvc\" \n\txmlns:semantic=\"sap.m.semantic\" \n\txmlns=\"sap.m\" \n\txmlns:l=\"sap.ui.layout\"\n\txmlns:f=\"sap.ui.layout.form\"\n\txmlns:d=\"diploma.analytics.statistics.controller\"\n\txmlns:sc=\"sap.suite.ui.commons\"\n\txmlns:core=\"sap.ui.core\" \n\txmlns:viz=\"sap.viz.ui5.controls\">\n\t<semantic:FullscreenPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"true\" title=\"{i18n>resultsViewTitle}\">\n\t\t<semantic:content>\n\t\t\t<sc:ChartContainer showFullScreen=\"true\" showPersonalization=\"false\"\n\t\t\t\tautoAdjustHeight=\"true\" showLegend=\"true\" showLegendButton=\"true\" id=\"chcMain\">\n\t\t\t\t<sc:content>\n\t\t\t\t\t<sc:ChartContainerContent icon=\"sap-icon://line-chart\"  title=\"{i18n>lineChart}\" > \n\t\t\t\t\t\t<sc:content>\n\t\t\t\t\t\t\t<viz:VizFrame id=\"lineChart\" height=\"100%\" width=\"100%\" uiConfig=\"{applicationSet:'fiori'}\"/>\n\t\t\t\t\t\t</sc:content>\n\t\t\t\t\t</sc:ChartContainerContent>\n\t\t\t\t</sc:content>\t\n\t\t\t</sc:ChartContainer>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>"
	}
});