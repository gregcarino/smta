-------------------------------------------------------------------------------------------------------------------
-- @date:           23.12.2015
-- @component:      Core
-------------------------------------------------------------------------------------------------------------------
-- @description:
-- Deletes a device and all associated entities.
-- @param {table}       it_old          - The entries that need to be deleted.
--  @column {string}    et_errors       - Error table.
-------------------------------------------------------------------------------------------------------------------
PROCEDURE "SPET_DIPLOMA"."spet.diploma.procedures::deleteTransport" ( 
       IN   it_old      "SPET_DIPLOMA"."spet.diploma.data::ctxCore.eTransport",
       OUT  et_errors   TABLE (
           "HTTP_STATUS_CODE" INT,
           "ERROR_MESSAGE" NVARCHAR(100),
           "DETAIL" NVARCHAR(100)
        )
    )
   LANGUAGE SQLSCRIPT 
   SQL SECURITY INVOKER AS
BEGIN
     
    lt_readings = SELECT "id" FROM "SPET_DIPLOMA"."spet.diploma.data::ctxCore.eReading" AS "R"
        WHERE EXISTS (SELECT * FROM :it_old WHERE :it_old."id" = "R"."transport" );
    
    DELETE FROM "SPET_DIPLOMA"."spet.diploma.data::ctxCore.eValue" AS "V"
        WHERE EXISTS (SELECT * FROM :lt_readings WHERE :lt_readings."id" = "V"."reading" );
    
    DELETE FROM "SPET_DIPLOMA"."spet.diploma.data::ctxCore.eReading" AS "R"
        WHERE EXISTS (SELECT * FROM :lt_readings WHERE :lt_readings."id" = "R"."id" );
     
    DELETE FROM "SPET_DIPLOMA"."spet.diploma.data::ctxCore.eInvolvement" AS "I"
        WHERE EXISTS (SELECT * FROM :it_old WHERE :it_old."id" = "I"."transport" );
        
    DELETE FROM "SPET_DIPLOMA"."spet.diploma.data::ctxCore.eTransport" AS "T"
        WHERE EXISTS (SELECT * FROM :it_old WHERE :it_old."id" = "T"."id" );
    
    et_errors = SELECT 0 AS "HTTP_STATUS_CODE", '' AS "ERROR_MESSAGE", '' AS "DETAIL" FROM DUMMY WHERE 1 = 0;
    
END